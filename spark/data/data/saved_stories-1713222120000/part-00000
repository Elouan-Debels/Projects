{"aid": "40043029", "title": "HTML Popover Attribute", "url": "https://davidwalsh.name/html-popover-attribute", "domain": "davidwalsh.name", "votes": 1, "user": "ulrischa", "posted_at": "2024-04-15 16:59:18", "comments": 2, "source_title": "HTML popover Attribute", "source_text": "HTML popover Attribute\n\n  * Home\n  * Main Content\n\nDWB\n\nPopular:\n\n  * JavaScript Promises\n  * fetch API\n  * React.js\n  * Cache API\n  * ES6 Features\n  * Node.js\n  * JavaScript\n  * jQuery\n\nHTML popover Attribute\n\nBuilding Resilient Systems on AWS: Learn how to design and implement a\nresilient, highly available, fault-tolerant infrastructure on AWS.\n\n# HTML popover Attribute\n\nBy David Walsh on April 15, 2024\n\nModals have been an important part of websites for two decades. Stacking\ncontents and using fetch to accomplish tasks are a great way to improve UX on\nboth desktop and mobile. Unfortunately most developers don't know that the\nHTML and JavaScript specs have implemented a native modal system via the\npopover attribute -- let's check it out!\n\n## The HTML\n\nCreating a native HTML modal consists of using the popovertarget attribute as\nthe trigger and the popover attribute, paired with an id, to identify the\ncontent element:\n\n    \n    \n    <!-- \"popovertarget\" attribute will map to \"id\" of popover contents --> <button popovertarget=\"popover-contents\">Open popover</button> <div id=\"popover-contents\" popover>This is the contents of the popover</div>\n\nUpon clicking the button, the popover will open. The popover, however, will\nnot have a traditional background layer color so we'll need to implement that\non our own with some CSS magic.\n\n## The CSS\n\nStyling the contents of the popover content is pretty standard but we can use\nthe browser stylesheet selector's pseudo-selector to style the \"background\" of\nthe modal:\n\n    \n    \n    /* contents of the popover */ [popover] { background: lightblue; padding: 20px; } /* the dialog's \"modal\" background */ [popover]:-internal-popover-in-top-layer::backdrop { background: rgba(0, 0, 0, .5); }\n\n:-internal-popover-in-top-layer::backdrop represents the \"background\" of the\nmodal. Traditionally that UI has been an element with opacity such to show the\nstacking relationship.\n\nhttps://codepen.io/darkwing/pen/yLrqEvK\n\n## Recent Features\n\n  * By David WalshFebruary 18, 2013\n\n### Create a Sheen Logo Effect with CSS\n\nI was inspired when I first saw Addy Osmani's original ShineTime blog post.\nThe hover sheen effect is simple but awesome. When I started my blog redesign,\nI really wanted to use a sheen effect with my logo. Using two HTML elements\nand...\n\n  * By David WalshMay 6, 2015\n\n### I\u2019m an Impostor\n\nThis is the hardest thing I've ever had to write, much less admit to myself.\nI've written resignation letters from jobs I've loved, I've ended\nrelationships, I've failed at a host of tasks, and let myself down in my life.\nAll of those feelings were very...\n\n## Incredible Demos\n\n  * By David WalshJuly 29, 2009\n\n### Dress Up Your Select Elements with FauxSelect\n\nI received an email from Ben Delaney a few weeks back about an interesting\nMooTools script he had written. His script was called FauxSelect and took a\nlist of elements (UL / LI) and transformed it into a beautiful Mac-like SELECT\nelement.\n\n  * By David WalshMarch 24, 2010\n\n### Create Classy Inputs Using MooTools\u2019 OverText\n\nThe MooTools More library is a goldmine. A treasure chest. Pirates booty, if\nyou will (and, of course, I will). More is full of plugins that add a lot of\nclass and functionality to your website with minimal effort.\n\n## Discussion\n\n\u00a9 David Walsh 2007-2024. All code MIT license.Hosting by Media Temple.\n\n", "frontpage": false}

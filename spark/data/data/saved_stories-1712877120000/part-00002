{"aid": "40004461", "title": "M\u00f6bius Printing Helper", "url": "https://shreevatsa.net/mobius-print/", "domain": "shreevatsa.net", "votes": 2, "user": "Tomte", "posted_at": "2024-04-11 17:11:02", "comments": 0, "source_title": "M\u00f6bius Printing helper", "source_text": "M\u00f6bius Printing helper\n\n# M\u00f6bius Printing helper\n\nDrop or choose your PDF file.\n\n\u2192\n\nPrivacy: Your PDF file is not sent to any server; everything happens locally\nin your browser. To verify this, you can disconnect from the internet after\nloading this page, or even simply save this page (everything is self-contained\nin a single HTML file) and use it offline.\n\n# What's this?\n\nWhat you see above is a tool to reorder the pages of a PDF file, into the\norder as described by Brent Yorgey here (called \u201cM\u00f6bius double-sided printing\u201d\nhere). Basically, it reorders the n pages [1, 2, ..., n] of a PDF file into\nthe order [1, m+1, 2, m+2, 3, m+3, ... m, 2m], where m = \u2308n/2\u2309, and the final\npage 2m is omitted if it doesn't exist (i.e., if n is odd).\n\nTo use this tool, just \u201cupload\u201d a PDF file above, then click on the link to\ndownload a new PDF file with reordered pages.\n\n# Why would you want to do this?\n\n(In short, so that it requires less mental effort to turn pages, and so that\nit's easier to look at the next/previous page(s) simultaneously. It's\nexplained by Brent Yorgey on the two pages mentioned above; reproducing part\nof the explanation here along with his illustrations.)\n\nConsider the standard/default method of two-sided printing: for a document\nwith 8 pages, the result looks like:\n\nThat is, the first sheet of paper has pages 1 and 2 on its front and back, the\nsecond sheet has the next two pages, and so on.\n\nIf you instead print the re-ordered PDF (as generated by this tool above), the\nresulting sheets of paper will look like this:\n\nWhen printed out as a bunch of loose sheets, this order has two (very minor)\nadvantages over the standard order:\n\n  1. When you're done reading a certain page, the way to proceed to the next page is the same regardless of whether you're on an odd-numbered page or an even-numbered page: you don't have to remember, and so at page boundaries you don't have to shift your attention from the contents of what you're reading to figuring out page mechanics. What you do is always the same, namely flip the current sheet of paper and move it to the bottom of the stack:\n\n  2. When the text refers to the previous or the next page, you can always very easily look at that page or put it adjacent to the current one (so you can see both at once), which with the standard method is impossible when an odd-numbered page refers to its next page or an even-numbered page refers to its previous one. Also, if you just want to glance at the previous page, there is never any page flipping required: just twist your wrist and look at the bottom of the stack. (This is my main reason for preferring this method over the minor variant he calls \u201cTwo-way double-sided\u201d.)\n\n# Thanks\n\nThe code rearranges pages using pdf-lib (GitHub) (v1.3.0) by Andrew Dillon. I\ntried to use Mozilla's PDF.js, but its documentation on these \u201ccore\u201d matters\n(as opposed to just rendering a PDF in a canvas or whatever) seems\npoor/nonexistent compared to pdf-lib, which is excellent.\n\nThe idea of printing documents in this way, and the analysis and pictures\nabove, are due to Brent Yorgey (here and here, as mentioned).\n\n", "frontpage": false}

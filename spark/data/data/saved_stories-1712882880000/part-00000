{"aid": "40005430", "title": "OpenZiti 1.0", "url": "https://blog.openziti.io/announcing-openziti-v1", "domain": "openziti.io", "votes": 9, "user": "RyeCombinator", "posted_at": "2024-04-11 18:45:55", "comments": 0, "source_title": "Announcing OpenZiti v1.0", "source_text": "Announcing OpenZiti v1.0\n\n# Announcing OpenZiti v1.0\n\n## It's our pleasure to announce we've reached the v1.0 milestone!\n\nDave Hart\n\n\u00b7Apr 11, 2024\u00b7\n\n5 min read\n\nWe created OpenZiti so that anyone can implement distributed applications over\nthe Internet, incorporating the principles of zero-trust networking for free\ninto almost anything and for any use case.\n\nWe started the OpenZiti GitHub org back in May 2020. One of the most common\nquestions we get today is, \"Why haven't you bumped the version to 1.0 yet?\"\nIt's a fair question. OpenZiti boasts a robust feature set and sees widespread\nuse in mission-critical applications, including Fortune 50 environments, with\nbillions of sessions annually.\n\nSo, why the long wait? Well, making secure connectivity simple at scale is\nnon-trivial, and we\u2019ve held ourselves to a high standard.\n\nWe\u2019ve proved, and our users have proved, that OpenZiti stands up to large-\nscale production use. But one of the most important things we wanted to do\nbefore flipping to v1.0 was show off OpenZiti in action in its most potent use\ncase: as a foundation for what we call \u201cziti-native apps.\u201d These are\napplications built from the ground up with security, privacy, and resilience\ndesigned in.\n\nzrok - a peer-to-peer sharing application - is the first ziti-native app we\nbuilt. It\u2019s completely open source, and we\u2019ve made it available as a free\nservice. zrok has been a tremendous success in its own right, but it also\nserves as a reference application. Check it out on GitHub to see how we did it\nand for inspiration on how you could use OpenZiti in your applications.\n\nWe're excited to announce v1.0. It's a milestone marking our commitment to\nusers for system quality, stability, and compatibility throughout major\nrelease cycles. It's a proven foundation for the next generation of\ndistributed applications featuring security as a first-class design goal.\n\n## Background: Some OpenZiti use cases\n\nOpenZiti approaches networking from a software perspective. Solutions can\n\u2018embed\u2019 full mesh, zero trust overlay networks as software for use cases such\nas:\n\n  1. Developing next-generation network applications with built-in security, privacy, and reliability, using a clean, modern software-first abstraction. (ala zrok)\n\n  2. Remotely manage your software, devices, or machines in security-conscious sites such as OT environments via your own private, high-performance network without requiring your customers to open inbound firewall ports or provide VPN/bastion-type solutions.\n\n  3. Enable users or customers to consume private APIs, use private websites, and access private databases without requiring those users or customers to be on the same administrative domain, network, or VPN.\n\n  4. Enable operations teams to lock down environments such as Kubernetes. For example, kubectl becomes completely \u2018dark\u2019 in an OpenZiti architecture.\n\nThese are just examples, and you can see more here. Secure networking is now\nsoftware you control. You can use it as you wish.\n\n## Background: What does OpenZiti provide to enable secure networking as\nsoftware?\n\nOne way to think about OpenZiti is to ask: If I assume the networks I run on\nare already compromised, how would I design my application?\n\nOpenZiti answers with the following:\n\n  1. Strong identities are essential to ensure that all entities on your network are who they claim to be. Validating the identity before allowing it to connect to any protected services is critical. Identities in OpenZiti implement mutual authentication to authenticate both sides of a connection. Logical entities inside the OpenZiti Controller map an X509 certificate to each named identity.\n\n  2. Protection from port scanning. Port scanning is a common attack vector searching for vulnerabilities. A level of darkness and invisibility mitigates against such attacks, leaving no open inbound ports to your endpoints available for attack. Your applications listen on the OpenZiti overlay, not on the open Internet. There is no need to open inbound ports on the firewall protecting your application.\n\n  3. A least privileged access model to help mitigate against lateral attacks. If an identity is compromised, or a user we chose to trust turns out to be a bad actor, OpenZiti helps limit the damage. Access is only allowed to what is needed and when it\u2019s needed.\n\n  4. Continuous authorization: Sometimes things change, and what was once appropriate access needs to be revoked. OpenZiti supports posture checks and continuously validates them throughout each session.\n\n  5. End-to-end encryption OpenZiti helps ensure privacy when running over the Internet. Only your endpoints and applications can access your data, regardless of intermediate waypoints across the Internet. In addition to mTLS across each OpenZiti link, end-to-end encryption (ChaCha20-Poly1305) is provided between endpoints.\n\n  6. Visibility Auditing, compliance, and forensics support are built-in through advanced metrics and logging, helping support the zero-trust ethos of \u201calways verify.\"\n\n  7. Permissive (Apache v2.0) open source. OpenZiti is available to everyone, including the top security experts worldwide who can validate our network security and have the option to find issues and help us improve.\n\n  8. Software SDKs, agents, and containers easily integrate with your applications and networking solutions. The most secure implementations embed the network directly in your code.\n\n## We\u2019re Not Done...\n\nFar from it! We continue to evolve OpenZiti, including:\n\n  * Advancing our core overlay fabric and distributed control\n\n  * Adding BrowZer support for agent-less access to the overlay for web apps\n\n  * Continued evolution of the zrok project\n\n  * Refreshed tunneling application UIs\n\n  * Additional deployment models\n\n  * Additional ziti-native apps beyond zrok (more to come very soon!)\n\nAnd more!\n\nThank you all, especially those in the community who have helped advance\nOpenZiti to this point. If you haven\u2019t yet, try it and let us know how it\ngoes! And a star on the main repo is always appreciated.\n\n## Subscribe to our newsletter\n\nRead articles from OpenZiti Tech Blog directly inside your inbox. Subscribe to\nthe newsletter, and don't miss out.\n\nzerotrustOpen Source\n\n### Written by\n\n# Dave Hart\n\n### Published on\n\n# OpenZiti Tech Blog\n\nDiscussion of OpenZiti, the open source, modern, programmable, network overlay\nand edge components, for application-embedded, zero-trust networking.\n\nDiscussion of OpenZiti, the open source, modern, programmable, network overlay\nand edge components, for application-embedded, zero-trust networking.\n\nShare this\n\n### More articles\n\nCurt Tudor\n\n# Pixy Dust For Web Applications\n\nPKCE, which stands for \u201cProof of Key Code Exchange\u201d, and is pronounced \u201cpixy,\u201d\nis an extension of th...\n\nRussell Allen\n\n# Secure Remote Development with zrok and JetBrains\n\nI took this photo while working remote. Can you guess the location?If you can\nsecure your remote wor...\n\nMichael Quigley\n\n# zrok Permission Modes\n\nzrok is a powerful platform for sharing. The latest releases of zrok allow you\nto get granular about...\n\n\u00a92024 OpenZiti Tech Blog\n\nArchive\u00b7Privacy policy\u00b7Terms\n\nWrite on Hashnode\n\nPowered by Hashnode - Home for tech writers and readers\n\n", "frontpage": true}

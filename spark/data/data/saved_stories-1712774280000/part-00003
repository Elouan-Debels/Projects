{"aid": "39990004", "title": "2023 ACM Turing Prize awarded to Avi Wigderson", "url": "https://awards.acm.org/about/2023-turing", "domain": "acm.org", "votes": 6, "user": "nanna", "posted_at": "2024-04-10 12:36:43", "comments": 0, "source_title": "Avi Wigderson of the Institute for Advanced Study is the recipient of the 2023 ACM A.M. Turing Award", "source_text": "2023 Turing Award\n\n## This website uses cookies\n\nWe occasionally run membership recruitment campaigns on social media channels\nand use cookies to track post-clicks. We also share information about your use\nof our site with our social media, advertising and analytics partners who may\ncombine it with other information that you\u2019ve provided to them or that they\u2019ve\ncollected from your use of their services. Use the check boxes below to choose\nthe types of cookies you consent to have stored on your device.\n\nUse necessary cookies only Allow all cookies Show details\n\nOK\n\nUse necessary cookies only Allow selected cookies Allow all cookies\n\nShow details\n\nCookie declaration [#IABV2SETTINGS#] About\n\nNecessary (7) Preferences (0) Statistics (5) Marketing (43) Unclassified (0)\n\nNecessary cookies help make a website usable by enabling basic functions like\npage navigation and access to secure areas of the website. The website cannot\nfunction properly without these cookies. These cookies do not gather\ninformation about you that could be used for marketing purposes and do not\nremember where you have been on the internet.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n__cf_bm| ACM| This cookie is used to distinguish between humans and bots. This\nis beneficial for the website, in order to make valid reports on the use of\ntheir website.| 1 day| HTTP  \nCookieConsent| Cookiebot| Stores the user's cookie consent state for the\ncurrent domain| 1 year| HTTP  \nJSESSIONID| ACM| Preserves users states across page requests.| Session| HTTP  \nSERVERID| ACM| This cookie is used to assign the visitor to a specific server\n- this function is necessary for the functionality of the website.| 1 day|\nHTTP  \nsessionState| ACM| Pending| Session| HTML  \n1.gif| Cookiebot| Used to count the number of sessions to the website,\nnecessary for optimizing CMP product delivery.| Session| Pixel  \nVISITOR_PRIVACY_METADATA| YouTube| Stores the user's cookie consent state for\nthe current domain| 180 days| HTTP  \n  \nPreference cookies enable a website to remember information that changes the\nway the website behaves or looks, like your preferred language or the region\nthat you are in.\n\nWe do not use cookies of this type.  \n---  \n  \nStatistic cookies help website owners understand how visitors interact with\nwebsites by collecting and reporting information anonymously.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n_ga| ACM| Registers a unique ID that is used to generate statistical data on\nhow the visitor uses the website.| 2 years| HTTP  \n_ga_#| Google| Used by Google Analytics to collect data on the number of times\na user has visited the website as well as dates for the first and most recent\nvisit.| 2 years| HTTP  \n_gat| ACM| Used by Google Analytics to throttle request rate| 1 day| HTTP  \ncollect| Google| Used to send data to Google Analytics about the visitor's\ndevice and behavior. Tracks the visitor across devices and marketing\nchannels.| Session| Pixel  \ntd| Google| Registers statistical data on users' behaviour on the website.\nUsed for internal analytics by the website operator.| Session| Pixel  \n  \nMarketing cookies are used to track visitors across websites. The intention is\nto display ads that are relevant and engaging for the individual user and\nthereby more valuable for publishers and third party advertisers.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n_gcl_au| Google| Used by Google AdSense for experimenting with advertisement\nefficiency across websites using their services.| 3 months| HTTP  \nIDE| Google| Used by Google DoubleClick to register and report the website\nuser's actions after viewing or clicking one of the advertiser's ads with the\npurpose of measuring the efficacy of an ad and to present targeted ads to the\nuser.| 1 year| HTTP  \npagead/landing [x2]| Oracle Google| Collects data on visitor behaviour from\nmultiple websites, in order to present more relevant advertisement - This also\nallows the website to limit the number of times that they are shown the same\nadvertisement.| Session| Pixel  \ntest_cookie| Google| Used to check if the user's browser supports cookies.| 1\nday| HTTP  \nads/ga-audiences| Google| Used by Google AdWords to re-engage visitors that\nare likely to convert to customers based on the visitor's online behaviour\nacross websites.| Session| Pixel  \npagead/1p-user-list/#| Google| Tracks if the user has shown interest in\nspecific products or events across multiple websites and detects how the user\nnavigates between sites. This is used for measurement of advertisement efforts\nand facilitates payment of referral-fees between websites.| Session| Pixel  \n#-# [x2]| YouTube| Pending| Session| HTML  \niU5q-!O9@[#COOKIETABLE_ADVERTISING#]nbsp;[x2]| YouTube| Registers a unique ID\nto keep statistics of what videos from YouTube the user has seen.| Session|\nHTML  \nLAST_RESULT_ENTRY_KEY [x2]| YouTube| Used to track user\u2019s interaction with\nembedded content.| Session| HTTP  \nnextId [x2]| YouTube| Used to track user\u2019s interaction with embedded content.|\nSession| HTTP  \nrequests [x2]| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| Session| HTTP  \nyt.innertube::nextId| YouTube| Registers a unique ID to keep statistics of\nwhat videos from YouTube the user has seen.| Persistent| HTML  \nyt.innertube::requests| YouTube| Registers a unique ID to keep statistics of\nwhat videos from YouTube the user has seen.| Persistent| HTML  \nytidb::LAST_RESULT_ENTRY_KEY [x2]| YouTube| Used to track user\u2019s interaction\nwith embedded content.| Persistent| HTML  \nYtIdbMeta#databases [x2]| YouTube| Used to track user\u2019s interaction with\nembedded content.| Persistent| IDB  \nyt-remote-cast-available [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-cast-installed [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-connected-devices [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Persistent| HTML  \nyt-remote-device-id [x2]| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Persistent| HTML  \nyt-remote-fast-check-period [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-session-app [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-session-name [x2]| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nLogsDatabaseV2:V#||LogsRequestsStore| YouTube| Pending| Persistent| IDB  \nremote_sid| YouTube| Necessary for the implementation and functionality of\nYouTube video-content on the website.| Session| HTTP  \nServiceWorkerLogsDatabase#SWHealthLog| YouTube| Necessary for the\nimplementation and functionality of YouTube video-content on the website.|\nPersistent| IDB  \nTESTCOOKIESENABLED| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| 1 day| HTTP  \nVISITOR_INFO1_LIVE| YouTube| Tries to estimate the users' bandwidth on pages\nwith integrated YouTube videos.| 180 days| HTTP  \nYSC| YouTube| Registers a unique ID to keep statistics of what videos from\nYouTube the user has seen.| Session| HTTP  \n  \nUnclassified cookies are cookies that we are in the process of classifying,\ntogether with the providers of individual cookies.\n\nWe do not use cookies of this type.  \n---  \n  \n[#IABV2_LABEL_PURPOSES#] [#IABV2_LABEL_FEATURES#] [#IABV2_LABEL_PARTNERS#]\n\n[#IABV2_BODY_PURPOSES#]\n\n[#IABV2_BODY_FEATURES#]\n\n[#IABV2_BODY_PARTNERS#]\n\nCookies are small text files that can be used by websites to make a user's\nexperience more efficient. Other than those strictly necessary for the\noperation of the site, we need your permission to store any type of cookies on\nyour device. Learn more about ACM, how you can contact us, and how we process\npersonal data in our Privacy Policy. Also please consult our Cookie Notice.\n\nYou can change or withdraw your consent from the Cookie Declaration on our\nwebsite at any time by visiting the Cookie Declaration page. If contacting us\nregarding your consent, please state your consent ID and date from that page.\n\nCookie declaration last updated on 3/26/24 by Cookiebot\n\nACM recognizes excellence\n\n  * Home\n  * Award Recipients\n  * Contact Us\n\n  * Home\n  * Latest Awards News\n  * 2023 Turing Award\n\n# ACM A.M. Turing Award Honors Avi Wigderson for Foundational Contributions to\nthe Theory of Computation\n\n## Wigderson is recognized for reshaping our understanding of the role of\nrandomness in computation, and for decades of intellectual leadership in\ntheoretical computer science.\n\nACM has named Avi Wigderson as recipient of the 2023 ACM A.M. Turing Award for\nfoundational contributions to the theory of computation, including reshaping\nour understanding of the role of randomness in computation, and for his\ndecades of intellectual leadership in theoretical computer science.\n\nWigderson is the Herbert H. Maass Professor in the School of Mathematics at\nthe Institute for Advanced Study in Princeton, New Jersey. He has been a\nleading figure in areas including computational complexity theory, algorithms\nand optimization, randomness and cryptography, parallel and distributed\ncomputation, combinatorics, and graph theory, as well as connections between\ntheoretical computer science and mathematics and science.\n\nThe ACM A.M. Turing Award, often referred to as the \u201cNobel Prize of\nComputing,\u201d carries a $1 million prize with financial support provided by\nGoogle, Inc. The award is named for Alan M. Turing, the British mathematician\nwho articulated the mathematical foundations of computing.\n\nWhat is Theoretical Computer Science?\n\nTheoretical computer science is concerned with the mathematical underpinnings\nof the field. It poses questions such as \u201cIs this problem solvable through\ncomputation?\u201d or \u201cIf this problem is solvable through computation, how much\ntime and other resources will be required?\u201d\n\nTheoretical computer science also explores the design of efficient algorithms.\nEvery computing technology that touches our lives is made possible by\nalgorithms. Understanding the principles that make for powerful and efficient\nalgorithms deepens our understanding not only of computer science, but also\nthe laws of nature. While theoretical computer science is known as a field\nthat presents exciting intellectual challenges and is often not directly\nconcerned with improving the practical applications of computing, research\nbreakthroughs in this discipline have led to advances in almost every area of\nthe field\u2014from cryptography and computational biology to network design,\nmachine learning, and quantum computing.\n\nWhy is Randomness Important?\n\nFundamentally, computers are deterministic systems; the set of instructions of\nan algorithm applied to any given input uniquely determines its computation\nand, in particular, its output. In other words, the deterministic algorithm is\nfollowing a predictable pattern. Randomness , by contrast, lacks a well-\ndefined pattern, or predictability in events or outcomes. Because the world we\nlive in seems full of random events (weather systems, biological and quantum\nphenomena, etc.), computer scientists have enriched algorithms by allowing\nthem to make random choices in the course of their computation, in the hope of\nimproving their efficiency. And indeed, many problems for which no efficient\ndeterministic algorithm was known have been solved efficiently by\nprobabilistic algorithms, albeit with some small probability of error (that\ncan be efficiently reduced). But is randomness essential, or can it be\nremoved? And what is the quality of randomness needed for the success of\nprobabilistic algorithms?\n\nThese, and many other fundamental questions lie at the heart of understanding\nrandomness and pseudorandomness in computation. An improved understanding of\nthe dynamics of randomness in computation can lead us to develop better\nalgorithms as well as deepen our understanding of the nature of computation\nitself.\n\nWigderson\u2019s Contributions\n\nA leader in theoretical computer science research for four decades, Wigderson\nhas made foundational contributions to the understanding of the role of\nrandomness and pseudorandomness in computation.\n\nComputer scientists have discovered a remarkable connection between randomness\nand computational difficulty (i.e., identifying natural problems that have no\nefficient algorithms). Working with colleagues, Wigderson authored a highly\ninfluential series of works on trading hardness for randomness. They proved\nthat, under standard and widely believed computational assumptions, every\nprobabilistic polynomial time algorithm can be efficiently derandomized\n(namely, made fully deterministic). In other words, randomness is not\nnecessary for efficient computation. This sequence of works revolutionized our\nunderstanding of the role of randomness in computation, and the way we think\nabout randomness. This series of influential papers include the following\nthree:\n\n  * \u201cHardness vs. Randomness\u201d (co-authored with Noam Nisan) Among other findings, this paper introduced a new type of pseudorandom generator, and proved that efficient deterministic simulation of randomized algorithms is possible under much weaker assumptions than previously known.\n  * \u201cBPP Has Subexponential Time Simulations Unless EXPTIME has Publishable Proofs\u201d (co-authored with L\u00e1szl\u00f3 Babai, Lance Fortnow, and Noam Nisan) This paper used `hardness amplification\u2019 to demonstrate that bounded-error probabilistic polynomial time (BPP) can be simulated in subexponential time for infinitely many input lengths under weaker assumptions.\n  * \u201cP = BPP if E Requires Exponential Circuits: Derandomizing the XOR Lemma\u201d (co-authored with Russell Impagliazzo) This paper introduces a stronger pseudo-random generator with essentially optimal hardness vs randomness trade-offs.\n\nImportantly, the impact of these three papers by Wigderson goes far beyond the\nareas of randomness and derandomization. Ideas from these papers were\nsubsequently used in many areas of theoretical computer science and led to\nimpactful papers by several leading figures in the field.\n\nStill working within the broad area of randomness in computation, in papers\nwith Omer Reingold, Salil Vadhan, and Michael Capalbo, Wigderson gave the\nfirst efficient combinatorial constructions of expander graphs, which are\nsparse graphs that have strong connectivity properties. They have many\nimportant applications in both mathematics and theoretical computer science.\n\nOutside of his work in randomness, Wigderson has been an intellectual leader\nin several other areas of theoretical computer science, including multi-prover\ninteractive proofs, cryptography, and circuit complexity.\n\nMentoring\n\nIn addition to his groundbreaking technical contributions, Wigderson is\nrecognized as an esteemed mentor and colleague who has advised countless young\nresearchers. His vast knowledge and unrivaled technical proficiency\u2014coupled\nwith his friendliness, enthusiasm, and generosity\u2014have attracted many of the\nbest young minds to pursue careers in theoretical computer science.\n\n\u201cIt\u2019s important to point out that Avi Wigderson also received the Abel Prize,\nwhich is considered the most important honor for lifetime achievements in the\nfield of mathematics,\u201d explained ACM President Yannis Ioannidis. \u201cBeing\nselected for the ACM A.M. Turing Award is a fitting follow-up\u2014as mathematics\nis foundational to computer science and Wigderson\u2019s work has connected a wide\nrange of mathematical sub-areas to theoretical computer science. Wigderson is\na towering intellectual force in theoretical computer science, an exciting\ndiscipline that attracts some of the most promising young researchers to work\non the most difficult challenges. This year\u2019s Turing Award recognizes\nWigderson\u2019s specific work on randomness, as well as the indirect but\nsubstantial impact he has had on the entire field of theoretical computer\nscience.\u201d\n\n\"Avi Wigderson\u2019s work on randomness and other topics has set the agenda in\ntheoretical computer science for the past three decades,\u201d explained Jeff Dean,\nSenior Vice President, Google. \u201cFrom the earliest days of computer science,\nresearchers have recognized that incorporating randomness was a way to design\nfaster algorithms for a wide range of applications. Efforts to better\nunderstand randomness continue to yield important benefits to our field, and\nWigderson has opened new horizons in this area. Google also salutes\nWigderson\u2019s role as a mentor. His colleagues credit him with generating great\nideas and research directions, and then motivating a new generation of smart\nyoung researchers to work on them. We congratulate Avi Wigderson on receiving\nthe ACM A.M. Turing Award\u2014computing\u2019s highest honor.\u201d\n\nNews Release | Printable PDF\n\n## About the ACM A.M. Turing Award\n\nThe A.M. Turing Award was named for Alan M. Turing, the British mathematician\nwho articulated the mathematical foundation and limits of computing, and who\nwas a key contributor to the Allied cryptanalysis of the Enigma cipher during\nWorld War II. Since its inception in 1966, the Turing Award has honored the\ncomputer scientists and engineers who created the systems and underlying\ntheoretical foundations that have propelled the information technology\nindustry.\n\n# 2023 ACM A.M. Turing Award Laureate\n\nAvi Wigderson is the Herbert H. Maass Professor in the School of Mathematics\nat the Institute for Advanced Study in Princeton, New Jersey. He has been a\nleading figure in areas including computational complexity theory, algorithms\nand optimization, randomness and cryptography, parallel and distributed\ncomputation, combinatorics, and graph theory, as well as connections between\ntheoretical computer science and mathematics and science.\n\nWigderson\u2019s honors include the Abel Prize, the IMU Abacus Medal (previously\nknown as the Nevanlinna Prize), the Donald E. Knuth Prize, the Edsger W.\nDijkstra Prize in Distributed Computing, and the G\u00f6del Prize. He is an ACM\nFellow and a member of the U.S. National Academy of Sciences and the American\nAcademy of Arts and Sciences.\n\n## Notable Papers by Avi Wigderson\n\nAvi Wigderson's work has reshaped our understanding of the role of randomness\nin computation. His important papers on the subject include:\n\n  * \"Hardness vs Randomness\" (co-authored with Noam Nisan) introduced a new type of pseudorandom generator, and proved that efficient deterministic simulation of randomized algorithms is possible under much weaker assumptions than previously known.\n  * \"BPP Has Subexponential Time Simulations Unless EXPTIME has Publishable Proofs\" (co-authored with L\u00e1szl\u00f3 Babai, Lance Fortnow, and Noam Nisan) used \"hardness amplification\" to demonstrate that bounded-error probabilistic polynomial time (BPP) can be simulated in subexponential time for infinitely many input lengths under weaker assumptions.\n  * \u201cP = BPP if E Requires Exponential Circuits: Derandomizing the XOR Lemma\u201d (co-authored with Russell Impagliazzo) introduced a stronger pseudo-random generator with essentially optimal hardness vs randomness trade-offs.\n  * \"In Search of an Easy Witness: Exponential Time vs Probabilistic Polynomial Time\" (co-authored with Russell Impagliazzo and Valentine Kabanets) establishes a number of results relating the complexity of exponential-time and probabilistic polynomial-time complexity classes.\n  * \"Randomness vs. Time: De-Randomization Under a Uniform Assumption\" (co-authored with Russell Impagliazzo) proves that if BPP\u2260EXP, then every problem in BPP can be solved deterministically in subexponential time on almost every input (on every sampleable ensemble for infinitely many input sizes).\n  * \"Multi-Prover Interactive Proofs: How to Remove Intractability Assumptions\" (co-authored with Michael Ben-Or, Shafi Goldwasser, and Joe Kilian) proves that all NP languages have perfect zero-knowledge proof-systems.\n  * \"Proofs That Yield Nothing but Their Validity or All Languages in NP Have Zero-Knowledge Proof Systems\" (co-authored with Oded Goldreich and Silvio Micali ). Under the assumption that secure encryption functions exist or by using \u201cphysical means for hiding information,\" it is shown that all languages in NP have zero-knowledge proofs.\n\n  * Home\n  * Sitemap\n  * Contact Us\n  * Member Service\n  * Privacy Policy\n  * Accessibility\n  * Cookie Declaration\n  * Copyright \u00a9 2024, ACM, Inc\n\n", "frontpage": true}

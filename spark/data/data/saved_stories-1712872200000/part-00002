{"aid": "40003502", "title": "Handling Hindu Lunisidereal Calendars", "url": "https://github.com/tc39/proposal-temporal/issues/2716", "domain": "github.com/tc39", "votes": 3, "user": "magnio", "posted_at": "2024-04-11 15:48:17", "comments": 0, "source_title": "Handling Hindu lunisidereal calendars \u00b7 Issue #2716 \u00b7 tc39/proposal-temporal", "source_text": "Handling Hindu lunisidereal calendars \u00b7 Issue #2716 \u00b7 tc39/proposal-temporal \u00b7\nGitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ntc39 / proposal-temporal Public\n\n  * Notifications\n  * Fork 142\n  * Star 3.1k\n\nJump to bottom\n\n# Handling Hindu lunisidereal calendars #2716\n\nOpen\n\nManishearth opened this issue Oct 31, 2023 \u00b7 13 comments\n\nOpen\n\n# Handling Hindu lunisidereal calendars #2716\n\nManishearth opened this issue Oct 31, 2023 \u00b7 13 comments\n\n## Comments\n\n###\n\nManishearth commented Oct 31, 2023 \u2022\n\nNepal uses the Vikram Samvat calendar as an official calendar; this is a\nproblem we will have to deal with eventually.Hindu lunisidereal calendars are\na bit strange, in ways that may affect the model put forth in Temporal, as\nwell as the data model used in CLDR.Similar to the Chinese calendar, they\nallow for leap months at any time of the year. We already have a solid\nsolution for this, with month codes like M01L, M02L, etc.There are three\nprincipal ways in which they are strange\n\n## Month naming and deleted/merged months\n\nSometimes months with a leap year will also have a deleted month\n\n> In the true version of the Indian lunisolar calendar, months, called kshaya,\n> may also be expunged, when two zodiacal sign transitions occur in one lunar\n> month. Thus, even a 12-month year can have a leap month (as was the case in\n> 1963\u20134), and a leap year can even have two (as in 1982\u20133). (source)\n\nThis in and of itself isn't a huge deal for our model. The tricky thing is\nthat technically the month with the double transition gets named after both\nmonths, e.g. in 1983 there was a month called \"Pausha-Magha kshaya\", i.e.\n\"Pausha merged with 'lost' Magha\". We may wish to produce alternate month\ncodes for these. (perhaps something like M10M)These months are rare so we can\ntreat them as a special case or just by the name of the first month if we\nwish.Some traditions also use a special day name for the \"regular\" month (this\nis the Adar II/Adar II/Adar problem again).\n\n## Day naming and merged days\n\nThe Hindu calendar has 29-30 day lunar months, however they are each split\ninto a waxing and a waning phase. Each day of the month has a name that is\nderived from the number. (1 to 14) You'll have names like \"Shravan Waxing\nFirst\", \"Shravan Waning Fourteenth\", \"Shravan New Moon\" and \"Shravan Full\nMoon\". Note that \"First\" is the second day of the fortnight/month since it\nwill be preceded by a new or full moon.Day 14 doesn't always occur as a\ndistinct day; for shorter (29-day) months one of the fortnights will have\nmerged day 14 with day 13. I don't yet know what that day is called; I think\npeople call it by both names though not necessarily at once. On calendars it\nseems to be marked as \"day 13/14\", and I'm not sure how that is spelled\nout.CLDR does already have support for day names. However this is more\ncomplicated logic than usual, since the day names aren't a straight up index\ninto the ordinal day in the month. Days 1 through 13 (of the month) will\ncleanly map to \"Waxing New Moon\" to \"Waxing Day Twelve\", but after that it\nreally depends on the precise month since the waxing fortnight may or may not\nhave a distinct Day Thirteen/Fourteen.One way of solving this problem is\ntreating each fortnight as a unique \"month\", giving us 24 months in a year\n(plus two more when there is a leap month). This does solve the problem rather\nneatly, though we'd still need to figure out day naming for merged\nThirteenth/Fourteenth.This does somewhat match how the days get named, too,\nit's not as much \"Waxing Day Five\" as it is \"Day Five of the Waxing Phase of\nShravan\".\n\n## Purnimanta vs amanta and split months\n\nBroadly speaking, there are two traditions for month reckoning. Amanta\ntraditions count months from new moon to new moon (like\nChinese/Hebrew/Islamic), and Purnimanta traditions count months from full moon\nto full moon (\"purna\" is cognate with \"full\"). We would not treat these two\ntraditions as the same calendar; so we don't have to deal with that, but\nthere's an interesting bit of weirdness that comes out of their need to be\nconsistent.See, despite being seemingly incompatible traditions, they do end\nup being used for interchange. This works because the way they are set up,\nboth calendars agree on the month name for the waxing phase of each cycle, but\nthe waning phases differ. E.g. here, the waxing Chaitra is shared between two\ncalendars, but the waning Chaitra occurs either before it or after it,\ndepending.Most festival dates are on the waxing phase, so most dates\ninterchange directly, and for festivals in the waning phase (e.g. Janmashtami\nthey get two dates listed (e.g. \"Amanta: Shravan Krishna Ashtami, Purnimanta:\nBhadrapad Krishna Ashtami\"^1).So far, still fine, as long as we maintain these\ncalendars as separate calendars.The real trickiness comes in with the leap\nmonths. Leap months are shadow versions of the regular month; roughly speaking\nnone of the festivals occur then, but if the entire month has a significance\nthe leap month does too, and monthly/fortnightly observances (e.g. stuff you\ndo on the eleventh of each fortnight) still happen.For this to work out in a\nsynchronous form, the Purnimanta and Amanta traditions need to agree on where\nthe leap month is. So if the following is a snippet of a regular year:| x|\nWax| Wane| Wax| Wane| Wax| Wane| Wax| Wane  \n---|---|---|---|---|---|---|---|---  \nAmanta| Jyeshta| Jyeshta| Ashad| Ashad| Shravan| Shravan| Bhadrapad| Bhadrapad  \nPurnimanta| Jyeshta| Ashad| Ashad| Shravan| Shravan| Bhadrapad| Bhadrapad|\nAshvin  \n  \nThen this is the format of a leap year with leap Shravan (like 2023):\n\nx| Wax| Wane| Wax| Wane| Wax| Wane| Wax| Wane| Wax| Wane  \n---|---|---|---|---|---|---|---|---|---|---  \nAmanta| Jyeshta| Jyeshta| Ashad| Ashad| Extra Shravan| Extra Shravan| Shravan|\nShravan| Bhadrapad| Bhadrapad  \nPurnimanta| Jyeshta| Ashad| Ashad| Shravan| Extra Shravan| Extra Shravan|\nShravan| Bhadrapad| Bhadrapad| Ashvin  \n  \nIn the Purnimanta calendar, the leap month gets inserted inside the regular\nmonth! This is the only way to maintain the correspondence between the two\ncalendars: the leap months match up, and the waxing phases of the regular\nmonths match up, and the waning phases of the regular months are \"one off\".\n\nThis is another piece of evidence that the Hindu calendars probably should be\nmodeled as ones with 24 months, since I can't even begin to figure out how\ndate arithmetic would work with split months.\n\nModeling the Hindu calendars as ones with 24 months, however, bring up a new\nquestion: what should Temporal month APIs do? Ultimately, even though the\nfortnights behave more like months than the real months; people do associate\nthe full 29/30-day months with the term \"month\" (and its translations). If you\ntold someone that the month is \"Shravan Waxing\" that would not make sense to\nthem (that is the fortnight, not the month).\n\nAnyway, a lot to think about here, and perhaps worth splitting into sub-\nissues. I figured I ought to brain-dump the research I'd done so at least\nthere's something to refer to for the future.\n\ncc @FrankYFTang @sffc @ben-allen\n\n## Footnotes\n\n  1. The \"Krishna\" in the festival name is only semi-related to the \"Krishna\" in the day name; \"Krishna\" means \"dark\" and is used to talk about the waning phase, this festival just happens to be for someone named after darkness. \u21a9\n\n  \nThe text was updated successfully, but these errors were encountered:  \n  \nCollaborator\n\n###\n\nsffc commented Nov 2, 2023 \u2022\n\nIf we use the 24-month numbering: we need to figure out date arithmetic. We do\nnot have many invariants when it comes to what calendars do with date\narithmetic. It's already the case that CLDR calendars can change the day\nnumber when adding/subtracting months (e.g. August 31 + 1 month) and the month\nnumber when adding/subtracting years (e.g. 1 Adar II + 1 year). I don't\nimmediately see anything wrong with these hindu calendars changing the ordinal\nmonth by 2 when the duration says to add 1 month.If we use 12-month numbering:\nnothing really wrong here in the data model; it's just a big headache when\nformatting. We would need to pull more special casing into the formatting\nmodule when we would really prefer as much as possible to keep calendar-\nspecific logic in the calendar module.Might I suggest the following month code\nscheme for the 24-month system:\n\n  * M01X = waxing phase of the first month\n  * M01Y = waning phase of the first month\n  * M02X = waxing phase of the second month\n  * ...\n\nFor leap and merge months:\n\n  * M01M = waxing phase of the first+second merge month\n  * M01N = waning phase of the first+second merge month\n  * M01P = waxing phase of leap first month\n  * M01Q = waning phase of leap first month\n\nThe table becomes:| x| Wax| Wane| Wax| Wane| Wax| Wane| Wax| Wane| Wax| Wane  \n---|---|---|---|---|---|---|---|---|---|---  \nAmanta| M03X (Jyeshta)| M03Y| M04X (Ashad)| M04Y| M05P (Extra Shravan)| M05Q|\nM05X (Shravan)| M05Y| M06X (Bhadrapad)| M06Y  \nPurnimanta| M03X| M04Y| M04X| M05Y| M05P| M05Q| M05X| M06Y| M06X| M07Y  \n  \nCollaborator\n\n###\n\nsffc commented Nov 2, 2023\n\nThis issue might be better in scope for the month and era code proposal repo:\nhttps://github.com/tc39/proposal-intl-era-monthcode  \n---  \n  \nAuthor\n\n###\n\nManishearth commented Nov 2, 2023 \u2022\n\nHmm, I think the month codes are rather secondary, first we need to figure out\nwhat our model is for months vs fortnights, giving them codes can be done any\nnumber of ways afterwards.But yeah, the scheme you propose seems good. I think\nthe choice of having the month numbers still go to twelve but having two codes\nper month neatly bridges the gap.\n\n> If we use the 24-month numbering: we need to figure out date arithmetic. We\n> do not have many invariants when it comes to what calendars do with date\n> arithmetic. It's already the case that CLDR calendars can change the day\n> number when adding/subtracting months (e.g. August 31 + 1 month) and the\n> month number when adding/subtracting years (e.g. 1 Adar II + 1 year). I\n> don't immediately see anything wrong with these hindu calendars changing the\n> ordinal month by 2 when the duration says to add 1 month.\n\nYeah I think this is the sticking point: we need to basically decide how\ndifferent things get special cased.The tricky bit is that ultimately whilst\neverything is dated in fortnights, the concept of a \"month\" is still a month.I\nthink \"add by two\" is a reasonable solution. It pins down roughly the behavior\npeople might logically want. The main downside is that it doesn't give any\nability to offset by fortnight. Occurs to me that we could add a new\n\"fortnights\" entry to the duration types, which isn't accepted by non-\nfortnight-based calendars but this proposal isn't predicated by that.There are\nprobably other things to be figured out in arithmetic, though.  \n---  \n  \nCollaborator\n\n###\n\nsffc commented Nov 2, 2023\n\nThere are only two things we need to decide really:\n\n  1. Month code model\n  2. Arithmetic date data model\n\n(1) is solvable. As far as (2), the only stated requirement is that the y/m/d\ntuple be monotonically increasing. It's already not the case that incrementing\ny by 1 gives you the same date next year or that incrementing m by 1 gives you\nthe same date next month. I'm not sure if there was any interest in extending\nthe invariant to state that incrementing y or m and then normalizing to fit\nwithin bounds should be equivalent to date arithmetic.  \n---  \n  \nContributor\n\n###\n\nFrankYFTang commented Nov 2, 2023\n\nCould you please cite your sources for literature review Thanks.  \n---  \n  \nAuthor\n\n###\n\nManishearth commented Nov 2, 2023\n\nLargely Calendrical Calculations, though almost all of this is also covered on\nthe Wikipedia page too (which is quite extensive)\nhttps://en.wikipedia.org/wiki/Hindu_calendarIn Calendrical Calculations note\nthat half of the description is in the chapter for old Hindu Calendars, with\nthe chapter for modern hindu calendars referencing it.Here's the description\nof leap monthsThey don't really use day names (they have their own day\nnumbering scheme) but they talk about this a bit here. It also covers the case\nof the case where the lunar day covers two solar days (the second solar day is\ncalled \"extra \")  \n---  \n  \nContributor\n\n###\n\nFrankYFTang commented Nov 2, 2023\n\nsoReingold, Edward M., and Nachum Dershowitz. Calendrical Calculations: The\nUltimate Edition. Cambridge University Press, 2018.  \n---  \n  \nAuthor\n\n###\n\nManishearth commented Nov 2, 2023\n\nYes,  \n---  \n  \nManishearth mentioned this issue Jan 27, 2024\n\nSimple generalizable algorithm for CalendarDateDifference tc39/proposal-intl-\nera-monthcode#16\n\nOpen\n\nCollaborator\n\n###\n\nptomato commented Mar 28, 2024\n\nIs it OK to move this issue to https://github.com/tc39/proposal-intl-era-\nmonthcode? I don't see anything actionable for Temporal at the moment.  \n---  \n  \nAuthor\n\n###\n\nManishearth commented Mar 28, 2024\n\nSure  \n---  \n  \nCollaborator\n\n###\n\nptomato commented Mar 28, 2024\n\nSomeone else may need to do it. I don't seem to have the required permissions.  \n---  \n  \nCollaborator\n\n###\n\nsffc commented Mar 28, 2024\n\nI don't have permission to move the issue, either. @FrankYFTang @robpalme?  \n---  \n  \nContributor\n\n###\n\nrobpalme commented Mar 29, 2024\n\nTry now @sffc  \n---  \n  \nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\nLabels\n\nNone yet\n\n5 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

{"aid": "40005077", "title": "Autonomous LLM agents with human-out-of-loop", "url": "https://arxiv.org/abs/2404.06921", "domain": "arxiv.org", "votes": 7, "user": "shishirpatil", "posted_at": "2024-04-11 18:10:51", "comments": 3, "source_title": "GoEX: Perspectives and Designs Towards a Runtime for Autonomous LLM Applications", "source_text": "[2404.06921] GoEX: Perspectives and Designs Towards a Runtime for Autonomous\nLLM Applications\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, Cornell\nUniversity, and all contributors. Donate\n\n> cs > arXiv:2404.06921\n\n# Computer Science > Computation and Language\n\narXiv:2404.06921 (cs)\n\n[Submitted on 10 Apr 2024]\n\n# Title:GoEX: Perspectives and Designs Towards a Runtime for Autonomous LLM\nApplications\n\nAuthors:Shishir G. Patil, Tianjun Zhang, Vivian Fang, Noppapon C., Roy Huang,\nAaron Hao, Martin Casado, Joseph E. Gonzalez, Raluca Ada Popa, Ion Stoica\n\nView a PDF of the paper titled GoEX: Perspectives and Designs Towards a\nRuntime for Autonomous LLM Applications, by Shishir G. Patil and Tianjun Zhang\nand Vivian Fang and Noppapon C. and Roy Huang and Aaron Hao and Martin Casado\nand Joseph E. Gonzalez and Raluca Ada Popa and Ion Stoica\n\nView PDF HTML (experimental)\n\n> Abstract:Large Language Models (LLMs) are evolving beyond their classical\n> role of providing information within dialogue systems to actively engaging\n> with tools and performing actions on real-world applications and services.\n> Today, humans verify the correctness and appropriateness of the LLM-\n> generated outputs (e.g., code, functions, or actions) before putting them\n> into real-world execution. This poses significant challenges as code\n> comprehension is well known to be notoriously difficult. In this paper, we\n> study how humans can efficiently collaborate with, delegate to, and\n> supervise autonomous LLMs in the future. We argue that in many cases, \"post-\n> facto validation\" - verifying the correctness of a proposed action after\n> seeing the output - is much easier than the aforementioned \"pre-facto\n> validation\" setting. The core concept behind enabling a post-facto\n> validation system is the integration of an intuitive undo feature, and\n> establishing a damage confinement for the LLM-generated actions as effective\n> strategies to mitigate the associated risks. Using this, a human can now\n> either revert the effect of an LLM-generated output or be confident that the\n> potential risk is bounded. We believe this is critical to unlock the\n> potential for LLM agents to interact with applications and services with\n> limited (post-facto) human involvement. We describe the design and\n> implementation of our open-source runtime for executing LLM actions, Gorilla\n> Execution Engine (GoEX), and present open research questions towards\n> realizing the goal of LLMs and applications interacting with each other with\n> minimal human supervision. We release GoEX at this https URL.\n\nSubjects:| Computation and Language (cs.CL); Artificial Intelligence (cs.AI)  \n---|---  \nCite as:| arXiv:2404.06921 [cs.CL]  \n(or arXiv:2404.06921v1 [cs.CL] for this version)  \nhttps://doi.org/10.48550/arXiv.2404.06921arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Shishir G. Patil [view email] [v1] Wed, 10 Apr 2024 11:17:33 UTC (785\nKB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled GoEX: Perspectives and Designs Towards a\nRuntime for Autonomous LLM Applications, by Shishir G. Patil and Tianjun Zhang\nand Vivian Fang and Noppapon C. and Roy Huang and Aaron Hao and Martin Casado\nand Joseph E. Gonzalez and Raluca Ada Popa and Ion Stoica\n\n  * View PDF\n  * HTML (experimental)\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.CL\n\n< prev | next >\n\nnew | recent | 2404\n\nChange to browse by:\n\ncs cs.AI\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}

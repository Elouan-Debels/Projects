{"aid": "40004641", "title": "Let's talk about SSH and security (brute force logins)", "url": "https://discuss.systems/@ricci/112247553557306560", "domain": "discuss.systems", "votes": 1, "user": "Macha", "posted_at": "2024-04-11 17:30:00", "comments": 0, "source_title": "Rob Ricci (@ricci@discuss.systems)", "source_text": "Rob Ricci: \"Hey! Let's talk about #SSH and...\" - discuss.systems\n\nCreate accountLogin\n\nRob Ricci @ricci@discuss.systems\n\nHey! Let's talk about #SSH and #security!\n\nIf you've ever looked at SSH server logs you know what I'm about to say: Any\nSSH server connected to the public Internet is getting bombarded by constant\nattempts to log in. Not just a few of them. A *lot* of them. Sometimes even\ndozens per second. And this problem is not going away; it is, in fact, getting\nworse. And attackers' behavior is changing.\n\nThe graph attached to this post shows the number of attempted SSH logins per\nday to one of @cloudlab s clusters over a four-year period. It peaks at about\n3.4 million login attempts per day.\n\nThis is part of a study we did on our production system, using logs of more\nthan 640 million login attempts, covering more than 1,500 hosts on our side\nand observing more than 840 thousand incoming IP addresses.\n\nA paper presenting our analysis and a new, highly effective means to block SSH\nbrute force attacks (\"Where The Wild Things Are: Brute-Force SSH Attacks In\nThe Wild And How To Stop Them\") will be presented next week at #NSDI24 by\n@sachindhke . The full paper is at https://www.flux.utah.edu/paper/singh-\nnsdi24\n\nLet's dive in.\n\nALT\n\nApr 10, 2024, 15:09 \u00b7 \u00b7 Web \u00b7 531 \u00b7 584\n\n1d\n\nRob Ricci @ricci\n\nFirst things first: everyone \"knows\" that most brute force attacks are against\nthe \"root\" account, right? This is certainly what earlier studies have found.\n\nAs it turns out, this used to be true, but it's not anymore. This graph shows\nthat the fraction of brute force attacks using the username root was nearly\n100% back in 2017, but it's been falling - by mid-2021, only around 20% off\nthe attacks we saw were against root.\n\nSo, why? Well, we don't have a hotline to the attackers, but we have an\neducated guess from our own data and from many others' reporting: a lot of the\nusernames we see correspond to default usernames for #network #routers,\nspecific #Linux distributions, specific server software, and #IoT devices.\nBasically, as we connect ever more stuff to the Internet (and generally try to\nprotect the \"root\" account), attackers seem to be diversifying the accounts\nthey are going after.\n\n(There's a table of the top 100 usernames in the paper.)\n\nALT\n\n1d\n\nRob Ricci @ricci\n\nHow do attackers pick their targets? In a word, randomly.\n\nThis graph shows what we call \"sequence bias\" - if an attacking IP address\nmoves from lower-numbered target IP addresses to larger ones, we assign it a\nsequence bias of 1; if it goes from larger to smaller, we assign it a bias of\n-1. As you can see in this graph, most of them have a sequence bias of around\n0, meaning that once we see an attack, the next target is equally likely to be\neither higher or lower.\n\nBasically, this means that most attackers are scanning the IPv4 address space\nat random.\n\nALT\n\n1d\n\nRob Ricci @ricci\n\nOK, so what can we do about all these SSH brute force attacks?\n\nWe have a plan - actually, not just a plan, we run this in production on one\nof the @cloudlab clusters.\n\nLet's start with this observation: if attackers are using a broad set of\nusernames, then we can use these username sets as a sort of signature. About\nhalf of attacking IP addresses only try one username, but that also means that\nabout half are trying more than one - in fact some individual IP addresses\ntried more than 10,000 usernames!\n\nWhat we do is this: we find *sets* of usernames that are used by *more than\none* attacking IP address (actually it's a bit more complicated that this,\ndetails in the paper). This gives us \"dictionaries\" of usernames that are\n*only* used by attackers, and not any of our real users. We collect these\ndictionaries from the logfiles of a bunch of SSH servers, and combine them to\nform a Username Block List (UBL).\n\nNow, all we have to do is: as soon as we see an IP address try a username from\nthis UBL, we block it. That simple. We call this Dictionary Based Blocking\n(DBB).\n\nHow well does this work? We used logs from our clusters containing a total of\n213 million login attempts, and it blocked *99.5%* of all attempts, generating\na false positives (accidentally locking out a real user) at a rate of just one\nabout every five days.\n\nBut what about #fail2ban, you might ask? That's another method people use to\nblock attacks against SSH (and other services) by locking out addresses that\nfail to log in more than X times in Y minutes. Well, with it's default\nsettings, it only blocks about 66% of attacks, and it generates more than 5x\nas many false positives (graph attached). As it turns out, there is *no* way\nto tune fail2ban to get DBB's accuracy without a false positive rate that's\norders of magnitude higher.\n\nI said we run this in production - how well does that work? We run it on one\nof of CloudLab clusters that already had a firewall - subscribing to popular\nblocklists and running something very much like fail2ban. It's catching four-\nfifths of the attacks that were not already getting caught by these measures,\nand so far it hasn't caused a single false positive.\n\nALT\n\n1d\n\nRob Ricci @ricci\n\nThere's a *lot* more in the paper - we analyze a bunch of different aspects of\nattacker behavior, and show that DBB is easy to collect data for and hard to\nevade. We've been working on this paper for years, and are quite proud of it.\n\nYou can read the paper right now at https://www.flux.utah.edu/paper/singh-\nnsdi24 - if you'll be at #NSDI24, you can come see the talk on Thursday, April\n18th or ask @sachindhke or myself questions about it all week.\n\nThere are a lot of wild things out there - stay safe!\n\n/\n\n1d\n\nZack Weinberg @zwol@hackers.town\n\n@ricci @sachindhke Nice work! Looking forward to reading this paper (when I'm\nnot on my phone).\n\nDoes your research have anything to say about the utility of moving SSH\nservice to a nonstandard port? I've always thought this was of little use on a\nserver that allows only key-based access, but the xz affair has got me\nthinking again about preauth vulnerabilities, and maybe there's some value in\nbeing able to insta-ban anyone who sends so much as a SYN to port 22...\n\n1d\n\nRob Ricci @ricci\n\n@zwol @sachindhke We only looked at our sshd logs (which use port 22), so we\ndon't know what scans may have been going on on other ports, sorry. My guess\nis that the utility of running on an alternate port depends a lot on how good\nwe all are at picking random ones to use - if we all switch to 2222, the\nattackers will definitely figure that out and we'll just cut their scanning\nbandwidth in half.\n\nUnfortunately, I think our work is only going to be of limited value against\npreauth vulnerabilities: it will help identify and block IPs that are part of\nbotnets, but if a sophisticated enough attacker (like the xz one seems to be)\nis smart enough to use 'clean' IPs to attack from, they'll be in before our\ntechnique even comes into play.\n\n1d\n\nZack Weinberg @zwol@hackers.town\n\n@ricci @sachindhke Thanks!\n\n1d\n\n@dch@bsd.network\n\n@ricci @zwol @sachindhke the 2 biggest changes we made that helped is\nswitching to port 2200, and reject anything except ed25519 keys, and massively\ntrim cyphers and MAC algorithms for key exchange. Feeding this data into a\nsystem like yours sounds ideal.\n\nOur next step would be putting spiped in front of sshd for logins, it is nicer\nto fully ban traffic tho.\n\n10h\n\nDavid Sommerseth @dazo@infosec.exchange\n\n@ricci @zwol @sachindhke\n\nI've \"standardized\" on a different port for SSH on my own hosts for closer\nthan 20 years. SSH scans do occur, but I can probably count them on about one\nhand over all those years.\n\nMoving to a non-standard port mostly works fine, but I have used some tooling\noccasionally which can get confused if its implementation does not consider\n~/.ssh/config. None of those issues I've stumbled across has really been a\nhuge concern.\n\nIf I want to keep port 22, I do recommend firewalling to only allow access\nfrom expected networks (like nets you commonly connect from, or jump hosts).\nAnd I also do that in many cases for my own hosts, where global reach is not\nstrictly needed.\n\nAnother countermeasure is also to primarily run SSH over a VPN connection.\nOpenVPN servers deployed with UDP + tls-crypt or tls-auth will not easily\nreveal the server port in ports scans. OpenVPN 2.6 also provides --peer-\nfingerprint as an alternative to the full-blown CA setup; self-signed\ncertificates on server and clients are enough - so kinda similar to SSH.\n\n1h\n\nKarl Statz @kstatz12\n\n@ricci @zwol @sachindhke kinda like the best way to hide an elephant is in a\nherd of elephants.\n\n16m\n\nRob Ricci @ricci\n\n@kstatz12 @zwol @sachindhke Karl, have you been hiding elephants from me all\nthis time?\n\n22h *\n\nFabian \ufffd @fabiscafe@mstdn.social\n\n@zwol @ricci @sachindhke I switched away from port 22 and there is pretty much\nnothing anymore in the logs. If I remember correctly it was around 100-200\ntries before (was 2019).\n\n20h\n\nMary Holstege @mathling@mastodon.social\n\n@fabiscafe @zwol @ricci @sachindhke\n\nI'm on a non-standard port and I'm still seeing 1000s of attempts every day\n\n18h\n\nFabian \ufffd @fabiscafe@mstdn.social\n\n@mathling @zwol @ricci @sachindhke you're probably on a bigger, more known\nserver. It's not magic that will fix the problem.\n\n15h\n\nRob Ricci @ricci\n\n@mathling @fabiscafe @zwol @sachindhke It's possible that someone has scanned\nyou, figured out what port you are running ssh on, and put it on some list -\neg. check your IP address on shodan.io and see if anything interesting turns\nup.\n\n15h\n\nMichaela Sue @beige_alert@universeodon.com\n\n@fabiscafe @zwol @ricci @sachindhke My personal couple-computers-at-home\nexperience was switching to \"something\"22 (in part for port-forwarding to\nseveral systems) seemed to reduce it somewhat, going to \"more random\" ports\nseems to have so far gotten it down to zero, but I'm not really expecting that\nto last....\n\n9h\n\nmc @mc@kein.chat\n\n@zwol @ricci @sachindhke observation: there are hosts that scan for open ssh,\nwho have a botnet in the background which then bruteforce hosts in a\ndistributed manner. That means two things, first pure ip detection is\npointless as the botnet will distribute attempts. Second, it will take a while\nfor them to pickup you\u2019re running on another port, but once they have, the\nbotnet will know.\n\nLastly, block ssh to allow from known ip addresses only, or use a geo db to\nallow from local country only, or by asn, that\u2019ll help the individual usecase\nmore.\n\n3h\n\nRob Ricci @ricci\n\n@mc @zwol @sachindhke Our blocking mechanism is particularly good at catching\nbotnets - all of the bots tend to use the same set of usernames, which makes\nthem very easy to catch with our dictionaries.\n\nWe have done a bit of thinking about what botnets could do to evade our\nblocking, and it would involve making sure that no two bots use exactly the\nsame username set. This will slow them down a lot, and we could also adjust to\nmake our definition of dictionaries more fuzzy\n\n1d\n\nShafik Yaghmour @shafik@hachyderm.io\n\n@ricci @sachindhke nice work!\n\nI still remember back in the late 90s there was always a constant stream of\nssh brute force attacks.\n\nI always wondered how many accounts these attacks yielded over time.\n\nSome things don't change and some do.\n\n1d\n\nRob Ricci @ricci\n\n@shafik @sachindhke As far as I can tell, it's like spam: it doesn't need a\nvery high success rate to be worth doing, since the level of effort is so low\n\n1d\n\nJosh Triplett @josh@joshtriplett.org\n\nHas there been any industry-wide progress in tracking down the sources of\nthese brute-force attacks and stopping them at the source? (With actual\nconsequences, like \"either you block this user or we block your network\"?)\n\n1d\n\nRob Ricci @ricci\n\n@jsoref\n\nExcellent question. To some extent, yes, there are fairly large efforts to\nshut down sources of network abuse. They come in a lot of different forms.\n\nThere are IP address blocklists that are maintained by a bunch of different\nprofessional and volunteer organizations. These are only effective if you\nactually use them, and there are reasons not to - for example, getting off\nthem can be hard (because of course bad actors try to get off of them) but\nthis means they catch a lot of 'innocent' addresses too.\n\nThen there are security researchers and law enforcement that try to track down\nthe actors themselves - follow @briankrebs for this kind of thing. These are\noften fairly long, intensive efforts, that have big payoffs, but those payoffs\ncome relatively infrequently.\n\nSo how about cutting off networks that are the sources of this kind of abuse?\nThere are some *clearly* bad actors in the networking space and yeah, action\ndoes occasionally get taken against them. But these actors are generally\nprepared for these kinds of enforcement actions, so they are pretty hard to\nget rid of entirely. 'Bulletproof hosting' is one of the names these actors go\nby these days.\n\nAt least in our dataset, part of the problem is that the attackers are from\n*everywhere*, with a lot of them probably using compromised devices in\npeople's houses, businesses, datacenters, etc. So the networks, and even\ndevice owners, are not themselves malicious and it's hard to do much without a\nlot of collateral damage. For example, here are the top five networks that\nwere the sources of attacks in our dataset:\n\nChina Telecom (26.8%), China Unicom (6.1%), DigitalOcean Cloud (6.0%), Tencent\nCloud (5.5%), OVH Cloud (2.9%), and the Vietnam Posts and Telecommunications\nGroup (2.7%).\n\n(we list a lot more in tables at the end of our paper.)\n\nThese are all large ISPs and cloud providers that, frankly, it would be pretty\nhard to exert much pressure against.\n\nWe are actually doing a study where we're trying to interview a variety of\nnetwork and security admins about these kinds of problems, and I would say\nthat what we're finding so far is that basically the networks of people\nworking on stopping network abuse mirror human social networks: eg. US\nacademic institutions generally cooperate with each other, cloud providers\ngenerally know each other, etc. There are also some formal coordination groups\nlike CERT/CC.\n\nSo that was a pretty long answer :) but in general, yes, a lot of people work\non stopping network abuse, no, that has not eliminated it, and no, it probably\nnever will, we will always been in *some* form of the cat-and-mouse game that\ncharacterizes most Internet security work.\n\n23h\n\nJosh Triplett @josh@joshtriplett.org\n\nThanks for your detailed answer!\n\nSome of the cloud providers, at least, seem like it'd be possible to work with\nto establish outbound-network policies like \"no SSH brute-force attacks\". But\nyeah, probably little hope playing whack-a-mole with the end-user ISPs.\n\n23h\n\nRob Ricci @ricci\n\n@josh @briankrebs Cloud providers are interesting, and we actually want to\nstudy that more. For example, AWS is notably absent from our top attackers\ndespite being the biggest cloud provider. Same for GCP and Azure. As far as I\ncan tell, they are quite effective at blocking outgoing attacks, though I\ndon't know exactly how they are detecting them. Other relatively reputable\nproviders are major sources. It's not clear to me why - whether this is by\nlack of effort, by policy, by specific arrangements they make with security\nresearchers doing scans, etc.\n\nOverall, we found:\n\n\"Similar to prior research,, we observed a significant number of attacking IP\naddresses (at least 15.3%, responsible for 20% of the failed attempts) hosted\nby cloud providers. Of the top ten network providers based on the number of\nfailed attempts, three were cloud providers. Six among the top 15 networks\u2014and\nten among the top 25\u2014were cloud providers.\"\n\n16h\n\nDrew Scott Daniels @drewdaniels@mastodon.online\n\n@ricci @josh @briankrebs They are all likely chipping away at the big\nproblems, using more secure defaults and warnings, as it helps them too. AWS\nyears ago didn\u2019t allow passwords to be used on SSH for default installs (and\nprovided a nice way to do key pairs). Likewise there are warnings on open\nports. Azure blocks some outbound ports like 25 by default. Alibaba cloud\n(Aliyun) is also quite aggressive about notifications of available updates.\n\n15h\n\nRob Ricci @ricci\n\n@drewdaniels @josh @briankrebs Yeah, it is probably not an accident that when\nI was recently hunting around to find a cloud provider that would let me\nconnect out on port 25 - to run my own mailserver - that I settled on one that\nis also in our top-10 list for sources of ssh attacks :) It's still not clear\nto me if they are making a deliberate policy choice, or see the cost to\nreputation as being lower than the cost of detection and enforcement.\n\nBy the way if anyone who works network security at a cloud provider is reading\nthis, we'd love to talk to you if you're able :)\n\n21h\n\nJosh Soref @jsoref@mastodon.social\n\n@ricci this is a very interesting thread. But was I tagged by accident?\n\n(As it happens, I've contributed to some of the ssh blocking tools, and some\nother referenced communities...)\n\n21h\n\nRob Ricci @ricci\n\n@jsoref oops! Yes it was an accident, I'm not sure how it happened, but I'm\nglad you at least found the thread interesting!\n\n21h\n\nargv minus one @argv_minus_one@mstdn.party\n\n@ricci\n\nThere is a much easier way to defeat these attacks: disable password\nauthentication.\n\nPasswords are insecure. Stop using them.\n\n14h\n\ntasket @tasket@infosec.exchange\n\n@argv_minus_one @ricci Yes, I am wondering what the significance is for\nservers that are key-only.\n\nAlso, it always seemed to me like 99% of ssh servers never needed thousands of\nusers to be logging-in every minute. Rate limiting should kick in fairly\nquickly whenever an auth attempt has failed. Like, after the 2nd failure from\nthe same IP, wait 5 min. After the 4th failure (any IP) within, say, a\nminute...just stop all logins for X minutes. At least use something like\nfail2ban.\n\n4h\n\nRob Ricci @ricci\n\n@tasket @argv_minus_one Yes, machines that disable password authentication\nwill not be vulnerable to brute force password guessing attacks.\n\nHowever, this kind of blocking is still useful, I wrote up some thoughts here:\nhttps://discuss.systems/@ricci/112248596201323925\n\n3h\n\nargv minus one @argv_minus_one@mstdn.party\n\n@ricci\n\nFail2ban itself has an attack surface. Parsing log messages isn't the safest\nthing in the world, and I seem to recall there being vulnerabilities in the\npast.\n\nSo, be sure to weigh that against the security benefits of using it.\n\n@tasket\n\n16h\n\ndraNgNon @draNgNon@hachyderm.io\n\n@ricci @sachindhke reading this thread made me very happy! Great work\n\n15h\n\nRob Ricci @ricci\n\n@draNgNon @sachindhke Thanks, I'm glad you found it interesting!\n\n14h\n\nPassim @passim@zirk.us\n\n@ricci @sachindhke What about disabling passwords and using only public key\nauthentication?\n\n14h\n\nRob Ricci @ricci\n\n@passim @sachindhke That's definitely the best way to protect devices you have\nfull control over. See https://discuss.systems/@ricci/112248596201323925 for\nsome thoughts on why it's still valuable to be able to block attackers\n\n14h\n\nSachin @sachindhke@mastodon.social\n\n@passim @ricci By default we do, but once the user acquire control of the\nserver, they may, and occasionally do, alter the SSH settings without any\nsupervision. So additional layer of SSH security, beyond the default key based\nauthentication is needed.\n\n14h\n\nRoo @roo@mstdn.ca\n\n@ricci @sachindhke I personally run endlessh and laugh at the stats\n\nRemote access via wire guard if I need it.\n\nStill, very nice work\n\n14h *\n\nClaudius Link @realn2s@infosec.exchange\n\n@ricci @sachindhke I wondered what DBB means ?\n\nHad to look it up in your paper (For others it's Dictionary-Based Blocking)\n\nAhh, I see what you did there, you made me \"read\" your paper (Planned it\nanyway )\n\nOh, and you caught me, not reading above thread closely enough (to my excuse i\nhadn't expanded the relevant post )\n\n14h\n\nRob Ricci @ricci\n\n@realn2s @sachindhke haha, my devious plan worked!\n\n12h\n\nClifton Royston @CliftonR@wandering.shop\n\n@ricci @sachindhke\n\nDamn. As a vet of the spam wars, I'm impressed.\n\nThat's a simple but brilliant strategy, picking up higher-order protocol\nbehavior that nobody had thought to analyze quite that way.\n\nI'll have to read your paper.\n\n11h\n\nkeithzg @keithzg@fediverse.keithzg.ca\n\n@ricci @sachindhke Ooh, as someone who as part of their dayjob admins an\noffice router that lives at a four-letter .com domain this is immediately very\ninteresting \u2014 at one point we were getting so much attempted brute force\ntraffic that it was noticeable degrading our Internet connection!\n\nGranted, I found a complete solution to eliminate all of that spam via the use\nof knockd, so my interest now is mostly (pardon the pun) academic ;)\n\n10h\n\nfanf42 @fanf42@treehouse.systems\n\n@ricci @sachindhke\n\n#NSDI24 wow, congrats, amazing! Forwarding to my ops team :)\n\n5h\n\nSteve Scott @wishy@tooter.wishy.co.uk\n\n@ricci @sachindhke I moved SSH to a non standard port about 15 years ago,\nafter the 166mhz processor in my NAS meant that SMB was starved out when\nsomeone decided to brute force over SSH. It's been very effective at reducing\nscans, and I've found relatively few downsides over the years.\n\n1d\n\nr000t @r000t@fosstodon.org\n\n@ricci Way back when, I wrote a fail2ban action script that fires off an email\nto the abuse address for the IP space the scanner is on. I should probably\nmodernize it.\n\nIf your fail2ban snitches, you could potentially save someone from getting\nowned, as well as make your own equipment a less-savory target (it snitches!)\n\nhttps://github.com/r000t/AutoGripe @cloudlab\n\nGitHubGitHub - r000t/AutoGripe: fail2ban action script that uses SMTP or Gmail\nto send abuse complaintsfail2ban action script that uses SMTP or Gmail to send\nabuse complaints - r000t/AutoGripe\n\n1d\n\nRob Ricci @ricci\n\n@r000t This is something that's interesting to us too - we tried a little\nexperiment where we mailed the abuse addresses on file in WHOIS records. The\nonly responses we got were auto-responders asking us to fill out webforms, and\nin fact a very large number of those abuse addresses just bounce. This has led\nus to another study we're doing interviewing networks admins about this\nreporting system.\n\n21h\n\nargv minus one @argv_minus_one@mstdn.party\n\n@ricci @r000t\n\nYeah, that sounds unlikely to work. Abuse emails probably receive mountains of\nspam and phishing attempts from bots, and that fail2ban action is basically a\nbot.\n\n21h\n\nargv minus one @argv_minus_one@mstdn.party\n\n@ricci @r000t\n\nAnother thing: I imagine a lot of attacks are sent from compromised IoT\ndevices. Sending an abuse report to the device's owner's ISP will not help,\nbecause the ISP is powerless to fix the device, the ISP cannot compel the\ndevice's owner to remove it, and the device vendor doesn't care (and may not\neven exist any more).\n\n15h\n\nRob Ricci @ricci\n\n@argv_minus_one @r000t Yes, we do suspect that many or most attacks are coming\nfrom compromised devices. From the interviews we've done so far, there is a\nfair amount of human-level trust involved: admins seem more likely to expect\nthat other admins that they know will do something to address network abuse\nproblems.\n\n19h\n\ngunstick @gunstick@mastodon.opencloud.lu\n\n@ricci @cloudlab it would now be nice to have access to a public list of\nbanned IP addresses, so that a single detection on one ssh server can ban the\nattacker on a wide range of systems.\n\n15h\n\nRob Ricci @ricci\n\n@gunstick @cloudlab There are actually lots of lists like this out there; see\nthis for some thoughts and why other strategies are needed too:\nhttps://discuss.systems/@ricci/112248263655255903\n\n16h\n\nPyperkub @pyperkub@mastodon.social\n\n@ricci @cloudlab hunting for terrapin?\n\n15h\n\nyes, it's me, liza @blogdiva@mastodon.social\n\n@ricci @cloudlab this sounds amazing. i have to ask: are you finding the\ndictionary involves only one language, ie: english? or does it involve several\nlanguages? am really interested in the linguistics, and even the ethnographic\naspect of these login names. it could give insights into assumptions about the\ntargets and maybe even of the attackers themselves. writers, after all, have a\nvernacular, a style, even an aesthetics.\n\n15h\n\nRob Ricci @ricci\n\n@blogdiva LETS TALK I am super interested in this too. They are definitely not\njust English usernames - there are plenty of south Asian (eg. `vivek`) and\neast Asian names (eg. `zhang`) in there too, as well as a number of role-type\nnouns in Spanish (`usario`, `contador`). We noted this, but I don't really\nknow how to classify or study these names systematically.\n\n15h *\n\nyes, it's me, liza @blogdiva@mastodon.social\n\n@ricci i would do an etymology breakdown; ie: variations on john or vivek.\nthen look at the originating/target IPs. even if spoofed, they had to be\nserved from somewhere. map that out. there has to be hidden treasure in this\ndictionary that could escape folks without a background in linguistics. my\ndomain is romance languages and most of the spanish/portuguese speaking worlds\nand am an old school technologist. get nordic langs, german, slavic, asian\nexperts and see what patterns come up\n\n15h\n\nyes, it's me, liza @blogdiva@mastodon.social\n\n@ricci OMG i just missed the second part of your reply. i could even tell you\nfrom which ethnic group the spanish names might fall under. i waaaaaaaaaaaant\nto get my hands on this. want! want! want!\n\nand again, it doesn't mean they are of a group or other, but might gives us a\npeek at the social engineer logic they've used for their targets.\n\n15h\n\nRob Ricci @ricci\n\n@blogdiva Yeah, exactly - we read the usernames as giving us more information\nabout who the attackers think they're after than information about the\nattackers themselves.\n\nWe have gone back and forth a lot on how much of this data we can release\nwithout compromising privacy of our own users, but I think that the username\ndictionaries are pretty safe. I'll get with @sachindhke and get back to you.\n\n13h\n\nSimon Josefsson @jas4711@infosec.exchange\n\n@ricci @cloudlab Great work! The graphs are quite informative. Do you plan to\npublish the blocklist - and maintain data freshness - so others can use this?\nI am currently using fail2ban but as you shown, it is not optimal.\n\n4h\n\nRob Ricci @ricci\n\n@jas4711 @cloudlab We've talked about that. It's a tough call for projects\nthat are student-led, like this one, because the main goal is for the student\nto do research, and maintenance of something that is basically a production\nservice can make it hard to focus on research. The ideal situation would be\nfor a community project to spring up around this idea; additionally, our\nresearch group does have full-time staff that run production services. This is\ngetting even more attention than I expected, so I think we'll need to\nseriously look into this.\n\n@sachindhke\n\nExploreLive feeds\n\nLogin to follow profiles or hashtags, favorite, share and reply to posts. You\ncan also interact from your account on a different server.\n\nCreate accountLogin\n\nAbout\n\nDrag & drop to upload\n\n", "frontpage": false}

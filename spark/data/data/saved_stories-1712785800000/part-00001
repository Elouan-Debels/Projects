{"aid": "39992055", "title": "OpenTelemetry at Scale: what buffer we can use at the behind to buffer the data?", "url": "https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/storage/filestorage", "domain": "github.com/open-telemetry", "votes": 2, "user": "rjz_11", "posted_at": "2024-04-10 15:49:12", "comments": 0, "source_title": "opentelemetry-collector-contrib/extension/storage/filestorage at main \u00b7 open-telemetry/opentelemetry-collector-contrib", "source_text": "opentelemetry-collector-contrib/extension/storage/filestorage at main \u00b7 open-\ntelemetry/opentelemetry-collector-contrib \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nopen-telemetry / opentelemetry-collector-contrib Public\n\n  * Notifications\n  * Fork 2k\n  * Star 2.5k\n\n/\n\n# filestorage\n\n/\n\n## Directory actions\n\n## More options\n\n## Directory actions\n\n## More options\n\n## Latest commit\n\ncodeboten\n\n[chore] update core to latest (#32264)\n\nb007ca2 \u00b7\n\n## History\n\nHistory\n\n/\n\n# filestorage\n\n/\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n### parent directory\n\n..  \n  \n### internal/metadata\n\n|\n\n### internal/metadata\n\n| [chore] Migrate the \"generate\" make target to mdatagen from core repo (...  \n  \n### testdata\n\n|\n\n### testdata\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Break storage extensions into dedicated modules (#31040)  \n  \n### README.md\n\n|\n\n### README.md\n\n| [chore] Remove vendor distributions (#32014)  \n  \n### client.go\n\n|\n\n### client.go\n\n| [extension/storage/filestorage] Ensure fsync is turned on after compa...  \n  \n### client_test.go\n\n|\n\n### client_test.go\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### config.go\n\n|\n\n### config.go\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### config_test.go\n\n|\n\n### config_test.go\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### default_others.go\n\n|\n\n### default_others.go\n\n| Remove the obsolete +build directive (#30651)  \n  \n### default_windows.go\n\n|\n\n### default_windows.go\n\n| Remove the obsolete +build directive (#30651)  \n  \n### doc.go\n\n|\n\n### doc.go\n\n| Break storage extensions into dedicated modules (#31040)  \n  \n### extension.go\n\n|\n\n### extension.go\n\n| [extension/storage/filestorage] Ensure fsync is turned on after compa...  \n  \n### extension_test.go\n\n|\n\n### extension_test.go\n\n| [chore] Switch to component.MustNewID and `component.MustNewIDWithN...  \n  \n### factory.go\n\n|\n\n### factory.go\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### factory_test.go\n\n|\n\n### factory_test.go\n\n| [extension/storage/filestorage] Add bbolt FSync as a config option (#...  \n  \n### generated_component_test.go\n\n|\n\n### generated_component_test.go\n\n| [cmd/mdatagen] Make lifecycle tests generated by default (#31532)  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| [chore] update core to latest (#32264)  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| [chore] update core to latest (#32264)  \n  \n### metadata.yaml\n\n|\n\n### metadata.yaml\n\n| [chore] Remove vendor distributions (#32014)  \n  \n### package_test.go\n\n|\n\n### package_test.go\n\n| [chore] remove skipped leak check (#31011)  \n  \n## README.md\n\n# File Storage\n\nStatus  \n---  \nStability| beta  \nDistributions| contrib  \nIssues  \nCode Owners| @djaglowski | Seeking more code owners!  \n  \nThe File Storage extension can persist state to the local file system.\n\nThe extension requires read and write access to a directory. A default\ndirectory can be used, but it must already exist in order for the extension to\noperate.\n\ndirectory is the relative or absolute path to the dedicated data storage\ndirectory. The default directory is %ProgramData%\\Otelcol\\FileStorage on\nWindows and /var/lib/otelcol/file_storage otherwise.\n\ntimeout is the maximum time to wait for a file lock. This value does not need\nto be modified in most circumstances. The default timeout is 1s.\n\nfsync when set, will force the database to perform an fsync after each write.\nThis helps to ensure database integretity if there is an interruption to the\ndatabase process, but at the cost of performance. See DB.NoSync for more\ninformation.\n\n## Compaction\n\ncompaction defines how and when files should be compacted. There are two modes\nof compaction available (both of which can be set concurrently):\n\n  * compaction.on_start (default: false), which happens when collector starts\n  * compaction.on_rebound (default: false), which happens online when certain criteria are met; it's discussed in more detail below\n\ncompaction.directory specifies the directory used for compaction (as a\nmidstep).\n\ncompaction.max_transaction_size (default: 65536): defines maximum size of the\ncompaction transaction. A value of zero will ignore transaction sizes.\n\n### Rebound (online) compaction\n\nFor rebound compaction, there are two additional parameters available:\n\n  * compaction.rebound_needed_threshold_mib (default: 100) - when allocated data exceeds this amount, the \"compaction needed\" flag will be enabled\n  * compaction.rebound_trigger_threshold_mib (default: 10) - if the \"compaction needed\" flag is set and allocated data drops below this amount, compaction will begin and the \"compaction needed\" flag will be cleared\n  * compaction.check_interval (default: 5s) - specifies how frequently the conditions for compaction are being checked\n\nThe idea behind rebound compaction is that in certain workloads (e.g.\npersistent queue) the storage might grow significantly (e.g. when the exporter\nis unable to send the data due to network problem) after which it is being\nemptied as the underlying issue is gone (e.g. network connectivity is back).\nThis leaves a significant space that needs to be reclaimed (also, this space\nis reported in memory usage as mmap() is used underneath). The optimal\nconditions for this to happen online is after the storage is largely drained,\nwhich is being controlled by rebound_trigger_threshold_mib. To make sure this\nis not too sensitive, there's also rebound_needed_threshold_mib which\nspecifies the total claimed space size that must be met for online compaction\nto even be considered. Consider following diagram for an example of meeting\nthe rebound (online) compaction conditions.\n\n    \n    \n    \u25b2 \u2502 \u2502 XX............. m \u2502 XXXX............ e \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500XXXXXXX..........\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 rebound_needed_threshold_mib m \u2502 XXXXXXXXX.......... o \u2502 XXXXXXXXXXX......... r \u2502 XXXXXXXXXXXXXXXXX.... y \u251c\u2500\u2500\u2500\u2500\u2500XXXXXXXXXXXXXXXXXXXXX..\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 rebound_trigger_threshold_mib \u2502 XXXXXXXXXXXXXXXXXXXXXXXXXX......... \u2502 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 time \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba \u2502 | | issue draining compaction happens starts begins and reclaims space X - actually used space . - claimed but no longer used space\n\n## Example\n\n    \n    \n    extensions: file_storage: file_storage/all_settings: directory: /var/lib/otelcol/mydir timeout: 1s compaction: on_start: true directory: /tmp/ max_transaction_size: 65_536 fsync: false service: extensions: [file_storage, file_storage/all_settings] pipelines: traces: receivers: [nop] processors: [nop] exporters: [nop] # Data pipeline is required to load the config. receivers: nop: processors: nop: exporters: nop:\n\n## Feature Gates\n\nSee the Collector feature gates for an overview of feature gates in the\ncollector.\n\n### extension.filestorage.replaceUnsafeCharacters\n\nWhen enabled, characters that are not safe in file names are replaced in\ncomponent name using the extension before creating the file name to store data\nby the extension.\n\nFor example, for a Filelog receiver named filelog/logs/json, the data is\nstored:\n\n  * in path receiver_filelog_logs/json with the feature flag disabled (note that this is a file named json inside directory named receiver_filelog_logs).\n  * in file receiver_filelog_logs~007Ejson with the feature flag enabled.\n\nThis replacement is done to prevent surprising behavior or errors in the File\nStorage extension.\n\nThe feature replaces all usafe characters with a tilde ~ and the character's\nUnicode number in hex. The only safe characters are: uppercase and lowercase\nASCII letters A-Z and a-z, digits 0-9, dot ., hyphen -, underscore _.\n\nChanging the state of this feature gate may change the path to the file that\nthe extension is writing component's data to. This may lead to loss of the\ndata stored in the original path.\n\nBefore enabling this feature gate, ideally make sure that all component names\nthat use the File Storage extension have names that only contain safe\ncharacters. In case you want to keep using unsafe characters in your component\nnames, you may want to rename the files used for storage before enabling this\nfeature gate. For example, mv ./receiver_filelog_logs/json\n./receiver_filelog_logs~007Ejson.\n\nFor more details, see the following issues:\n\n  * File storage extension - invalid file name characters must be encoded #3148\n  * [filestorage] receiver name sanitization #20731\n\nThe schedule for this feature gate is:\n\n  * Introduced in v0.87.0 (October 2023) as alpha - disabled by default.\n  * Moved to beta in v0.92.0 (January 2024) - enabled by default.\n  * Moved to stable in April 2024 - cannot be disabled.\n  * Removed three releases after stable.\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

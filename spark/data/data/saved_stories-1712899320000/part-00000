{"aid": "40007852", "title": "Show HN: A Simple XML and Feed Parser Written in TypeScript", "url": "https://github.com/knightspore/xml-trap", "domain": "github.com/knightspore", "votes": 1, "user": "parabyl", "posted_at": "2024-04-11 23:19:39", "comments": 0, "source_title": "GitHub - knightspore/xml-trap", "source_text": "GitHub - knightspore/xml-trap\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nknightspore / xml-trap Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\n### License\n\nMIT license\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# knightspore/xml-trap\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nknightsporetest(ast/ast.test.ts): fix sample path + add workflow status to\nreadme08ebb0b \u00b7\n\n## History\n\n24 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| ci(ci-bun-test.yml): add CI test workflow on push/pr dev+main  \n  \n### src\n\n|\n\n### src\n\n| test(ast/ast.test.ts): fix sample path + add workflow status to readme  \n  \n### test\n\n|\n\n### test\n\n| chore(src): reorganize  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| init  \n  \n### .npmrc\n\n|\n\n### .npmrc\n\n| chore(.npmrc): create  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| chore(LICENSE.md): Create  \n  \n### README.md\n\n|\n\n### README.md\n\n| test(ast/ast.test.ts): fix sample path + add workflow status to readme  \n  \n### bun.lockb\n\n|\n\n### bun.lockb\n\n| test(ast,feed): update protocol url to 404media  \n  \n### example.ts\n\n|\n\n### example.ts\n\n| chore(src): reorganize  \n  \n### package.json\n\n|\n\n### package.json\n\n| release(0.1.3): add .npmrc  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| chore(config): set up for npm publishing  \n  \n### tsconfig.types.json\n\n|\n\n### tsconfig.types.json\n\n| chore(config): set up for npm publishing  \n  \n## Repository files navigation\n\n# XML T.R.A.P. - a Typescript RSS/Atom Feed Parser written in Bun\n\nThis is a simple RSS/Atom feed parser written in Typescript, using Bun. It can\nparse feeds and create an AST of the feed in JSON.\n\n## Quickstart\n\n    \n    \n    npm install xml-trap\n\n## Usage\n\nYou can either use the newFeed function to parse a feed, or the createTree\nfunction to create an AST of the feed.\n\n### Feeds\n\nTo parse an RSS Feed, use the newFeed function.\n\n    \n    \n    import { newFeed } from \"xml-trap\"; const feed = await newFeed(\"https://example.com/feed.xml\"); console.log(feed.title) // The title of the feed\n\nThe Feed type has a number of fields that can be accessed:\n\nField| Description  \n---|---  \nurl| The URL of the feed  \ntitle| The title of the feed  \ndescription| The description of the feed  \nlanguage| The language of the feed  \nupdate| The last build date of the feed (or the updated date)  \nitems| An array of items in the feed  \ntree| An AST of the feed in JSON  \nsource| A minified copy of the source XML  \n  \n### AST\n\nTo create a tree-representation of the feed, use the createTree function.\n\n    \n    \n    import { createTree } from \"xml-trap\"; const tree = createTree(\"https://example.com/feed.xml\"); console.log(tree.root) // The root of the tree\n\nThe Tree type has two main fields:\n\nField| Description  \n---|---  \ndeclaration| The XML declaration node  \nroot| The root node of the tree (and all children)  \n  \nThe XMLNode type represents nodes on the tree, with fields:\n\nField| Description  \n---|---  \nname| The name of the node eg. div, or the node text  \ntype| The type of the node (eg. Declaration, Opening, Self-closing, etc.)  \nattributes| An object of attributes on the node  \nvalue| The value of the node (eg. the text of a text node)  \nchildren| An array of children of the node  \n  \nThis tree is used to construct feeds, and of course can be re-used as you wish\nfor handling other XML documents.\n\n## Tests\n\nBoth the AST and Feed Parser are well-covered with unit tests, and more end-\nto-end-ish tests (reading live feeds). To run the tests:\n\n    \n    \n    bun test # run the test suite bun run test/bench.ts # run the benchmarks\n\n## Contributing\n\nThis project is open to contributions. As you see above, the project is well-\ncovered with tests. If you want to contribute, it would probably be best to\neither add a URL to the feed tests, or in the case of the AST modules, adding\na new XML document and referencing the benchmarks would be a good place to\nstart.\n\nAll contributions should have a test, and should pass or improve the existing\nsuite. Don't worry too much about benchmarks, but if you have a contribution\nthat makes the code faster, you're welcome to add a benchmark to show the\nimprovement.\n\n### Setup\n\nTo get started, follow these steps:\n\n    \n    \n    # Clone the repo gh repo clone knightspore/xml-trap cd xml-trap # Install dependencies bun install # Run the example and start exploring bun run example.ts # Once you're done, build the project bun run build # And submit a PR with your changes\n\n## License\n\nThis project is licensed under the MIT License. See the LICENSE file for more\ninformation.\n\n## Shoutouts\n\n  * Bun for great JS tooling.\n  * Tsoding for this video about writing a C compiler in PHP which was my original inspiration to explore parsing.\n  * Matthew Groff's notes on publishing an NPM package built with Bun.\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

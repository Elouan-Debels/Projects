{"aid": "39982678", "title": "Show HN: NextJS CMS using Firebase as a DB for creating SSR websites", "url": "https://github.com/gieoon/NextJS-Firebase-CMS-Blank-Template-", "domain": "github.com/gieoon", "votes": 2, "user": "gieoon", "posted_at": "2024-04-09 18:41:43", "comments": 0, "source_title": "GitHub - gieoon/NextJS-Firebase-CMS-Blank-Template-: Headless CMS Website Builder Template for Vercel + Firestore. webbi.co.nz and featured sites were made with this.", "source_text": "GitHub - gieoon/NextJS-Firebase-CMS-Blank-Template-: Headless CMS Website\nBuilder Template for Vercel + Firestore. webbi.co.nz and featured sites were\nmade with this.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngieoon / NextJS-Firebase-CMS-Blank-Template- Public template\n\n  * Notifications\n  * Fork 1\n  * Star 5\n\nHeadless CMS Website Builder Template for Vercel + Firestore. webbi.co.nz and\nfeatured sites were made with this.\n\nwww.webbi.co.nz\n\n5 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# gieoon/NextJS-Firebase-CMS-Blank-Template-\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngieoonFIxed orderInList not updatingf766842 \u00b7\n\n## History\n\n179 Commits  \n  \n### CMS\n\n|\n\n### CMS\n\n| FIxed orderInList not updating  \n  \n### components\n\n|\n\n### components\n\n| Update StandardButton.tsx  \n  \n### firebase\n\n|\n\n### firebase\n\n| Update analytics.js  \n  \n### models\n\n|\n\n### models\n\n| fixed compiling issues, added instructions and documentation, and a f...  \n  \n### pages\n\n|\n\n### pages\n\n| Update _app.tsx  \n  \n### public/fonts\n\n|\n\n### public/fonts\n\n| first commit of template  \n  \n### styles\n\n|\n\n### styles\n\n| Update StandardButton.module.scss  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Update .gitignore  \n  \n### Copywriting.md\n\n|\n\n### Copywriting.md\n\n| first commit of template  \n  \n### FIGMA.md\n\n|\n\n### FIGMA.md\n\n| first commit of template  \n  \n### MARKET.md\n\n|\n\n### MARKET.md\n\n| first commit of template  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md  \n  \n### TODO.md\n\n|\n\n### TODO.md\n\n| first commit of template  \n  \n### constants.js\n\n|\n\n### constants.js\n\n| Added sendPlain emails  \n  \n### context.js\n\n|\n\n### context.js\n\n| Update context.js  \n  \n### google-sheets.appscript\n\n|\n\n### google-sheets.appscript\n\n| Rename google-sheets-appscript to google-sheets.appscript  \n  \n### helpers.tsx\n\n|\n\n### helpers.tsx\n\n| Update helpers.tsx  \n  \n### manually-browse-sitemap.js\n\n|\n\n### manually-browse-sitemap.js\n\n| Create manually-browse-sitemap.js  \n  \n### next-env.d.ts\n\n|\n\n### next-env.d.ts\n\n| first commit of template  \n  \n### next-sitemap.config.js\n\n|\n\n### next-sitemap.config.js\n\n| first commit of template  \n  \n### next.config.js\n\n|\n\n### next.config.js\n\n| first commit of template  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| fixed compiling issues, added instructions and documentation, and a f...  \n  \n### package.json\n\n|\n\n### package.json\n\n| Update package.json  \n  \n### saveToFirestore.appscript\n\n|\n\n### saveToFirestore.appscript\n\n| Update saveToFirestore.appscript  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| first commit of template  \n  \n## Repository files navigation\n\nBlank template to create websites and update them through Firebase.\n\nOur agency website, webbi.co.nz is built with this template.\n\n  * Hosted by Vercel\n  * Firestore and Firebase Storage as a CMS with basic editing capabilities.\n\nThis is a framework I'm using to make JAM stack websites for clients. The way\nit is set up is via one main firebase projects with multi-tenancy of sub-\nprojects per client. If this repo gets attention, I'll fix existing bugs, add\nin a demo and documentation to help you integrate your own version with\nfirebase.\n\n# Getting Started\n\n### Create a Firebase Project\n\n### Paste the config details in /firebase/firebase.js\n\n### Create a PROJECT_NAME\n\nEdit PROJECT_NAME, under ./contants.js. This should be a unique name of the\ndocument in Firestore. APP_TITLE: Title of the website SITE_URL: The live\nwebsite's URL. APP_ICON: favicon url, can be absolute or relative.\nSUPPORT_EMAIL: Destination mailbox to send enquiries or admin data to.\n\n### Run commands in the repo\n\n$ npm i $ npm run dev\n\nThis will launch the default website at localhost:3000\n\n  3. Update Firestore and Firebase Storage rules. (Needs documentation)\n  4. Add Firebase fields in to define custom fields that clients can edit via CMS. (Done manually for now, can create an interface for this.)\n  5. Email is configured through SendGrid via an external Server. This is platform agnostic, you can use any third party SMTP email provider.\n  6. Images are stored in Firebase Storage. Currently there is no CDN, (Cloudinary looks good.)\n  7. The frontend is deployed via Vercel with serverless API functions as needed.\n  8. I have plans to add serverless functions for Stripe payments. It's just that I have yet to encounter a client who needs this.\n\n## Types of Content\n\nThere are two types of content.\n\n  1. Page content, which is edited directly via a WYSIWYG editor in the CMS, at the /login page.\n  2. Dynamic content. This is useful for lists, or blog posts, anything that is not hardcoded into a page.\n\nIn the Database, page content is saved under one document called\nwebsiteContent. Dynamic content is stored as multiple documents under a\nseparate subcollection.\n\n### Adding Page Content\n\nTo add a string, which is a simple piece of text. <CMS_String_Field ...>\n\nTo add raw formatted text which comes from draft-js in the CMS.\n<CMS_HTML_Field ...>\n\nTo add an image, <CMS_Image_Field ...>\n\n#### CMS fields\n\nEach of the CMS fields must have a unique id prop. This is the key that the\ndocument saves the content under. If it is not unique, it will be overridden\nby the next field to be edited.\n\nThe placeholder prop shows the default data in case it has not been edited.\n\nLists of items can be added that can be edited through the WYSIWYG editor.\nHowever, a cmsTemplates must be created and passed in through the app.jsx <CMS\n... /> initialization. This lets the CMS know what kind of structure the list\nitem has. How many text fields, or images are to be added to it.\n\n    \n    \n    <div id=\"uniqueArray\" className=\"cp-editable-array\"> { // Loop through the array of this field. websiteContent['uniqueArray'].map((item, i) => ( <div key={'item-'+i}> <span id={\"uniqueArray-\"+i+\"-title\"} className=\"cp-editable\" style={{pointerEvents:\"none\"}}> {stripHTML(item.title)} </span> </div> )) } </div>\n\nIn this case, a the following cmsTemplates object was created\n\n    \n    \n    export const cmsTemplates = { // The name of the key in the CMS. uniqueArray: [ { // Type of DOM element type: \"span\", // The name of the key in the array subobject. value: \"title\" }, ] };\n\nThis can be easier for users to edit rather than creating a new collection and\nediting this list through a separate page. I tend to use this method of adding\nlists if it is small and doesn't require any raw text inputs.\n\n##### Alternative CMS content\n\nAny text can be turned into CMS content via simply adding the className cp-\neditable and a unique id. This is what <CMS_String_Field ... /> is doing under\nthe hood.\n\n### Adding Dynamic Content\n\nCurrently, the types of dynamic content are hardcoded into Firebase. This lets\nthe CMS load specific data and structure it accordingly. Each of these is\ndefined by a model class, which transforms the data into a useable format.\n\n##### Blog posts, or raw text content\n\nRaw text content that was created via the CMS can be either rendered as a\nstring (ugly) with stripHTML, or as HTML, with\nBlogPost.renderContent(rawHTMLContent, [])\n\nSometimes, a truncated version of the content is desired, such as when listing\nblog posts without displaying everything. In this case you can use the same\nfunction with an additional parameter BlogPost.renderContent(rawHTMLContent,\n[], true).\n\nBlogPost is a specific model that takes raw HTML strings and turns it into an\narray of content to be rendered. You can intialize your custom data through\nthis class to render it as a blog post, or you can rewrite the class to suit\nyour own usecase with your own specific fields.\n\n## Authentication\n\nThe CMS uses Firebase authentication and currently supports gmail or username\n+ password logins. The login is verified through a custom readonly document in\nthe database. You need to manually add a login user to the database to ensure\nonly this email address can modify the database.\n\n## How users/clients login\n\nYou can instruct your clients to go to /login of the website, then login\nthrough their email. There is also a link to this at the bottom of every page\nof their website (In /components/Footer.js).\n\n## Setting up Firebase\n\nFor now, this is done manually. Basically, Firestore rules need to be created\nto authenticate certain users to certain projects, and Firebase storage needs\nto also read and repeat from these same rules.\n\n## Analytics\n\nGoogle Analytics is used. Anytime a button press should trigger an event, use\nANALYTICS_logEvent(eventName: string, [options: any]) to create the event.\nPageviews can be created in the same way with ANALYTICS_screenView(pageName:\nstring)\n\n## Sitemap\n\nnext-sitemap is included by default. This automatically generates a sitemap\nafter npm run build. Make sure to go into /next-sitemap.config.js and update\nthe siteURL to match your domain. You can then include this fiel in Google\nSearch Console.\n\n## Helpful methods\n\nThe helper class has a variety of useful methods.\n\n#### sendData\n\nThis takes an array of 'field', 'value' objects, and sends it through an email\nclient to a destination. I have configures an email server to ingest this\nspecific data format, but you can provide any structure information to any\nemail address.\n\nI currently have set up SendGrid templates that ingest data and turn it into a\ngeneric enquiry form to be viewed by clients. As such, this takes name, email\naddress, and sets up reply email addresses, etc.\n\n#### stripHTML\n\nThis simply strips HTML tags out of raw text. e.g.\n\nHello world\n\n=> Hello world\n\n#### displayFirebaseDate\n\nDisplays a Firebase serverTimestamp date in a certain format, otherwise in a\nnormal way.\n\n## Backups\n\nI have setup an automatic weekly and monthly backup system for all content via\nGoogle Cloud File Transfers.\n\n## TODO\n\n  1. Edit cp-editable-array content\n  2. Add in images describing each section\n  3. Create /admin screen to edit the CMS dataflow and authentication easily via NodeJS firebase-admin API.\n  4. Add Live URL demo link.\n  5. CDN in front of Firebase Storage: https://stackoverflow.com/questions/61409735/how-can-i-implement-a-cdn-with-firebase-storage https://www.anothermadworld.com/why-you-should-put-a-cdn-like-cloudflare-in-front-of-firebase/ https://www.anothermadworld.com/how-to-put-a-cdn-in-front-of-firebase-cloud-storage/\n\n## About\n\nHeadless CMS Website Builder Template for Vercel + Firestore. webbi.co.nz and\nfeatured sites were made with this.\n\nwww.webbi.co.nz\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n5 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * JavaScript 58.5%\n  * SCSS 16.3%\n  * TypeScript 14.5%\n  * CSS 10.7%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

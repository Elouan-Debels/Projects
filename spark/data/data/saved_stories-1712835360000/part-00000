{"aid": "39998708", "title": "Fluent CI: Programmable CI/CD Engine Without Containers", "url": "https://github.com/fluentci-io/fluentci-engine", "domain": "github.com/fluentci-io", "votes": 1, "user": "rapnie", "posted_at": "2024-04-11 05:34:27", "comments": 0, "source_title": "GitHub - fluentci-io/fluentci-engine: Programmable CI/CD engine without Containers, written in Rust, built on top of Nix \u2744\ufe0f", "source_text": "GitHub - fluentci-io/fluentci-engine: Programmable CI/CD engine without\nContainers, written in Rust, built on top of Nix \u2744\ufe0f\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nfluentci-io / fluentci-engine Public\n\n  * Sponsor\n  * Notifications\n  * Fork 1\n  * Star 38\n\nProgrammable CI/CD engine without Containers, written in Rust, built on top of\nNix \u2744\ufe0f\n\n### License\n\nMPL-2.0 license\n\n38 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# fluentci-io/fluentci-engine\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n11 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ntsirysndrci: use fluentci-io/setup-fluentci@v53458b87 \u00b7\n\n## History\n\n148 Commits  \n  \n### .devcontainer\n\n|\n\n### .devcontainer\n\n| feat: implement 'withWorkdir'  \n  \n### .fluentci\n\n|\n\n### .fluentci\n\n| ci: update e2e tests  \n  \n### .github\n\n|\n\n### .github\n\n| ci: use fluentci-io/setup-fluentci@v5  \n  \n### codegen\n\n|\n\n### codegen\n\n| ci: add e2e tests for typescript sdk  \n  \n### crates\n\n|\n\n### crates\n\n| bump version code  \n  \n### docs\n\n|\n\n### docs\n\n| update api docs  \n  \n### examples\n\n|\n\n### examples\n\n| [examples/module] update Cargo.toml  \n  \n### fixtures\n\n|\n\n### fixtures\n\n| fix graph execution issue  \n  \n### sdk/typescript\n\n|\n\n### sdk/typescript\n\n| bump version code  \n  \n### .gitattributes\n\n|\n\n### .gitattributes\n\n| add .gitattributes  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| feat: add GoogleCloudStorage, S3, R2 cache backends  \n  \n### .mise.toml\n\n|\n\n### .mise.toml\n\n| [sdk/typescript] fix slow types  \n  \n### CODE_OF_CONDUCT.md\n\n|\n\n### CODE_OF_CONDUCT.md\n\n| Initial Commit  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| use runner trait  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| bump version code  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| configure extism host functions  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial Commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| [pdk] use &str instead of String  \n  \n### dagger.json\n\n|\n\n### dagger.json\n\n| ci: add e2e tests  \n  \n### flake.lock\n\n|\n\n### flake.lock\n\n| chore: setup nix flake  \n  \n### flake.nix\n\n|\n\n### flake.nix\n\n| ci: enable DAGGER_CLOUD_TOKEN  \n  \n## Repository files navigation\n\n# FluentCI Engine\n\nFluentCI Engine is a programmable CI/CD engine that is designed to be simple,\nflexible, and easy to use. It is supposed to run on the host machine without\ncontainerization or virtualization, and it is designed to be used with Nix,\nPkgx, Devbox, Flox, Devenv, EnvHub, Pixi and Mise.\n\nNote\n\nProject Status: \ud83d\udc32 Unstable, alpha-ish quality. This project is still in the\nearly stages of development, and it is not yet ready for production use. It is\nnot feature-complete, and it is not yet stable. Use at your own risk.\n\n## \u2728 Features\n\n  * Simple and easy to use\n  * Flexible\n  * No containerization or virtualization\n  * Built-in support for Nix, Pkgx, Devbox, Flox, Devenv, Envhub, Mise and Pixi\n  * Cache support (backends: local, S3, GCS, R2)\n  * SDK for writing pipelines in TypeScript, see @fluentci/sdk\n  * GraphQL API, see API Documentation\n  * OpenTelemetry tracing\n  * Plugin system in WebAssembly, see examples\n\n## \ud83d\ude80 Quick Start\n\n    \n    \n    # Clone the repository git clone https://github.com/fluentci-io/fluentci-engine.git # Go to the project directory cd fluentci-engine # Install dependencies nix develop cargo run -p fluentci-engine -- serve # Open the browser and go to http://localhost:6880/graphiql # See ./fixtures for some GraphQL queries examples\n\nTip\n\nQuickly setup Nix on your machine with DeterminateSystems Nix installer\n\n## \ud83d\udcda Documentation\n\n  * API Documentation\n\n## \ud83e\udde9 Plugins\n\nFluentCI Engine supports plugins in WebAssembly. You can write your own\nplugins in Rust or any other language that can compile to WebAssembly. See\nexamples for more information.\n\n### \ud83e\udd80 Rust Plugin Example\n\nCreate a new Rust project:\n\n    \n    \n    cargo new nix --lib\n\nInstall the extism_pdk and fluentci_pdk crates:\n\n    \n    \n    cargo add extism_pdk fluentci_pdk\n\nSave the following code to src/lib.rs:\n\n    \n    \n    use extism_pdk::*; use fluentci_pdk::dag; #[plugin_fn] pub fn exec(command: String) -> FnResult<String> { let stdout = dag() .nix()? .with_exec(command.split_whitespace().collect())? .stdout()?; Ok(stdout) }\n\nSet the following in your Cargo.toml:\n\n    \n    \n    [lib] crate-type = [\"cdylib\"]\n\nCompile the plugin to WebAssembly:\n\n    \n    \n    cargo build --release --target wasm32-unknown-unknown\n\nRun the plugin:\n\n    \n    \n    fluentci-engine call -m ./target/wasm32-unknown-unknown/release/nix.wasm -- exec nix --version\n\n### \ud83c\udf08 Builtin functions\n\nFluentCI Plugin Development Kit (fluentci_pdk) provides some builtin functions\nfrom that you can use in your plugins:\n\n#### devbox\n\nSetup a Devbox Environment.\n\nExample:\n\n    \n    \n    dag() .devbox()? .with_exec(vec![\"devbox\", \"version\"])? .stdout()?;\n\n#### devenv\n\nSetup a Devenv Environment.\n\nExample:\n\n    \n    \n    dag() .devenv()? .with_exec(vec![\"devenv\", \"version\"])? .stdout()?;\n\n#### directory\n\nLoad a directory at the given path.\n\nExample:\n\n    \n    \n    dag() .directory(\".\")? .with_exec(vec![\"ls\", \"-la\"])? .stdout()?;\n\n#### envhub\n\nSetup an EnvHub Environment.\n\nExample:\n\n    \n    \n    dag() .envhub()? .with_exec(vec![\"envhub\", \"--version\"])? .stdout()?;\n\n#### file\n\nLoad a file at the given path.\n\nExample:\n\n    \n    \n    dag() .file(\"Cargo.toml\")? .path()?;\n\n#### flox\n\nSetup a Flox Environment.\n\nExample:\n\n    \n    \n    dag() .flox()? .with_exec(vec![\"flox\", \"--version\"])? .stdout()?;\n\n#### git\n\nLoad a Git repository at the given URL.\n\nExample:\n\n    \n    \n    dag() .git(\"https://github.com/tsirysndr/me\")? .branch(\"main\")? .tree()? .entries()?;\n\n#### http\n\nLoad a HTTP resource at the given URL.\n\nExample:\n\n    \n    \n    dag() .http(\"https://example.com\")? .path()?;\n\n#### mise\n\nSetup a Mise Environment.\n\nExample:\n\n    \n    \n    dag() .mise()? .with_exec(vec![\"mise\", \"--version\"])? .stdout()?;\n\n#### nix\n\nSetup a Nix Environment.\n\nExample:\n\n    \n    \n    dag() .nix()? .with_exec(vec![\"nix\", \"--version\"])? .stdout()?;\n\n#### pipeline\n\nCreate a new pipeline.\n\nExample:\n\n    \n    \n    dag() .pipeline(\"example\")? .with_exec(vec![\"echo\", \"Hello, World!\"])? .stdout()?;\n\n#### pixi\n\nSetup a Pixi Environment.\n\nExample:\n\n    \n    \n    dag() .pixi()? .with_exec(vec![\"pixi\", \"--version\"])? .stdout()?;\n\n#### pkgx\n\nSetup a Pkgx Environment.\n\nExample:\n\n    \n    \n    dag() .pkgx()? .with_exec(vec![\"pkgx\", \"--version\"])? .stdout()?;\n\n## \u26a1 Caching\n\nFluentCI Engine supports caching. To enable it, set the following environment\nvariables:\n\n  * FLUENTCI_CACHE_GCS_BUCKET - GCS bucket name, if you are using Google Cloud Storage\n  * FLUENTCI_CACHE_S3_ENDPOINT - S3 endpoint, if you are using S3-compatible storage\n  * FLUENTCI_CACHE_S3_BUCKET - S3 bucket name, if you are using S3-compatible storage\n  * FLUENTCI_CACHE_CDN_ENDPOINT - CDN endpoint, if you are using CDN (optional) for downloading cache\n\nNote\n\nYou need to set GOOGLE_APPLICATION_CREDENTIALS or AWS_ACCESS_KEY_ID and\nAWS_SECRET_ACCESS_KEY environment variables to use GCS or S3 cache.\n\n## \ud83d\udd2d OpenTelemetry Tracing\n\nFluentCI Engine supports OpenTelemetry tracing. To enable it, set the\nOTEL_EXPORTER_OTLP_ENDPOINT or OTEL_EXPORTER_ZIPKIN_ENDPOINT (if you want to\nuse Zipkin) environment variable to the desired endpoint.\n\n## About\n\nProgrammable CI/CD engine without Containers, written in Rust, built on top of\nNix \u2744\ufe0f\n\n### Topics\n\nrust devops nix continuous-integration continuous-delivery developer-tools\ndevbox cicd devenv flox devenvironments nix-flake pkgx\n\n### Resources\n\nReadme\n\n### License\n\nMPL-2.0 license\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n38 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases\n\n11 tags\n\n## Sponsor this project\n\nfluentci-io Fluent CI/CD\n\nSponsor\n\nLearn more about GitHub Sponsors\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 65.0%\n  * Rust 33.9%\n  * Other 1.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

{"aid": "40001396", "title": "Show HN: I Made Next-Wayfinder a Middleware Organization Tool for Next.js", "url": "https://next-wayfinder.dev", "domain": "next-wayfinder.dev", "votes": 1, "user": "rawnly", "posted_at": "2024-04-11 12:28:35", "comments": 0, "source_title": "Next Wayfinder - Next Wayfinder", "source_text": "Next Wayfinder - Next Wayfinder\n\nCTRL K\n\n  * Introduction\n  *     * Getting Started\n    * Middlewares\n    * Hostname Checks\n    * Advanced Options\n\n      * beforeAll\n      * context\n      * response\n\n  *     * Filter by Request Method\n    * Supabase Authentication\n\nIntroduction\n\n# Introduction\n\nnext-wayfinder is a lightweight (~3kb minzipped) and flexible package that\nsimplifies the organization of middleware in Next.js applications. With next-\nwayfinder, you can easily apply different middlewares based on the route or\nhostname, without having to use cumbersome and error-prone path checks.\n\nTraditionally, managing middleware in Next.js can be challenging, especially\nwhen dealing with complex routing scenarios. For example, you may want to\napply an authentication middleware only for certain paths or a subdomain-\nspecific middleware for certain hostnames. With next-wayfinder, you can easily\nmanage and maintain your middleware and keep your code clean and organized.\nnext-wayfinder exports an handlePaths function that can be used as middleware\nentry point. It accepts an array of Middleware objects that match the route or\nhostname, and applies the first matching middleware. This allows you to easily\nhandle complex routing scenarios and reduce the amount of code needed to\nmanage your middleware.\n\n## Why\n\nnext-wayfinder was created based on this discussion (opens in a new tab) that\nhighlighted the difficulty of handling complex routing inside the Next.js\nmiddleware. Traditionally, if you want to apply different middlewares for\ndifferent routes in Next.js, you have to use cumbersome and error-prone path\nchecks. For instance, you might want to have an authentication middleware only\nfor paths matching /dashboard/:path* and a subdomain-specific middleware on\nanother set of routes. As of now, this can be achieved through ugly path\nchecking inside a middleware that matches almost all the routes.\n\nWith next-wayfinder, you can declare sub-middlewares via path-regexp and\ncustom rules in order to achieve a nice, clear middleware file where you can\ncome back after months and instantly understand what's happening. This makes\nit easy to handle complex routing scenarios and keep your code organized. In\nsummary, next-wayfinder simplifies middleware management in Next.js\napplications and reduces the amount of code needed to manage your middleware,\nmaking it easier to write and maintain clean, organized code.\n\nLast updated on October 18, 2023\n\nGetting Started\n\nBrought to you by @rawnly\n\n", "frontpage": false}

{"aid": "40003724", "title": "OpenCV for Android Distribution", "url": "https://www.opencv.ai/blog/opencv-for-android-distribution", "domain": "opencv.ai", "votes": 2, "user": "zubkovnn", "posted_at": "2024-04-11 16:07:15", "comments": 0, "source_title": "OpenCV 4.9.0 Launch: Enhanced Android Support and ARM Device Performance", "source_text": "OpenCV 4.9.0 Launch: Enhanced Android Support and ARM Device Performance\n\nHomeBook a callServicesAbout usCareersPortfolioBlogGet in touch\n\nLINKEDINYOUTUBETWITTER\n\nMAIL\n\ncontact@opencv.ai\n\ncancel\n\nOur team of experts is ready to answer!\n\nYou can contact us directly\n\nFill in the form below and you will receive an answer within 2 working days.\n\nOr fill in the form below and you will receive an answer within 2 working\ndays.\n\nThank you! Your submission has been received!\n\nOops! Something went wrong while submitting the form.\n\nReading Time\n\n5 Minutes\n\nAlexander Smorkalov\n\nSoftware Developer at OpenCV.ai\n\nOpenCV 4.9.0 Launch: Enhanced Android Support and ARM Device Performance\n\n# OpenCV For Android Distribution\n\nThe OpenCV.ai team, creators of the essential OpenCV library for computer\nvision, has launched version 4.9.0 in partnership with ARM Holdings. This\nupdate is a big step for Android developers, simplifying how OpenCV is used in\nAndroid apps and boosting performance on ARM devices.\n\nApril 11, 2024\n\n### Easier access to OpenCV for Android through Maven Central\n\nIn December, we released OpenCV 4.9.0. As part of that release, we made\nAndroid builds available through the Maven Central repository for the first\ntime. This work is supported by Arm company, the authors of the computer\narchitecture on which Android and the world\u2019s smartphones are built.\n\nOpenCV is the open-source library for developing and deploying computer vision\n(CV) workloads. Its availability for Android will make it easier to develop\nand maintain CV applications for Android systems, lowering the barrier of\nentry for developers to build high-quality CV algorithms for supporting AI and\nimage processing algorithms.\n\nManaging your application\u2019s OpenCV dependency through Maven Central is simple,\nwith support built into Android Studio and many other tools. Doing so also\nenables you to easily keep up to date with bug fixes, new features, and\nperformance improvements as new versions of OpenCV are released. The OpenCV\nteam maintains source compatibility for releases, and the update is safe.\nUsing Maven Central also ensures that you get a build of OpenCV configured\ncorrectly for performance and for using the correct dependencies.\n\nWe are working with Arm on continuous improvements to OpenCV\u2019s performance\nacross the broad reach of Arm-based devices, from sensors to servers and\nsupercomputers. This includes leveraging improvements from algorithmic changes\nor using new Arm CPU features.\n\nWe will update Maven Central with the latest versions of OpenCV as they are\nreleased and continue to update our support for Android, ensuring that\ndevelopers can integrate OpenCV into their workflows alongside other Android\nfunctionality.\n\nWe would like to thank Arm for supporting this work.\n\n### Using OpenCV in your Android application\n\nTo start working with OpenCV, you do not need to download the SDK. Just create\na new Application in Android Studio (or open an existing one), open your\napplication\u2019s build.gradle of your application where the \u201candroid\u201d section is\nlocated, and add OpenCV to the dependencies section of the global scope like\nthis:\n\n    \n    \n    apply plugin: 'com.android.application' android { namespace 'org.opencv.samples.puzzle15' compileSdkVersion 31 defaultConfig { applicationId \"org.opencv.samples.puzzle15\" minSdkVersion 21 targetSdkVersion 31 versionCode 301 versionName \"3.01\" } // ... more options here } dependencies { implementation 'org.opencv:opencv:4.9.0' } }\n\nThe OpenCV package will be downloaded and linked automatically by Gradle\nduring the application build. Native libraries are also added to APK\nautomatically. You just need to add a run-time call to load the OpenCV native\npart before the first library usage like this:\n\n    \n    \n    @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (OpenCVLoader.initLocal()) { Log.i(TAG, \"OpenCV loaded successfully\"); } else { Log.e(TAG, \"OpenCV initialization failed!\"); (Toast.makeText(this, \"OpenCV initialization failed!\", Toast.LENGTH_LONG)).show(); return; } // application initialization logic }\n\nIt is also possible to use OpenCV with your native code libraries in your\nAndroid application. The OpenCV AAR package includes a prefab part and allows\ndevelopers to develop native parts for Android, too. The OpenCV tutorial\nTutorial2-mixed processing provides an example of this.\n\nIn summary, as well as the normal Gradle steps outlined above, you must update\nyour native code to link against the OpenCV libraries. In CMake, this can be\ndone as follows:\n\n    \n    \n    find_package(OpenCV REQUIRED COMPONENTS OpenCV::opencv_java4) file(GLOB srcs *.cpp *.c) file(GLOB hdrs *.hpp *.h) add_library(${target} SHARED ...) target_link_libraries(${target} OpenCV::opencv_java4)\n\n### We look forward to seeing what you achieve with OpenCV\n\nFinally, as a reminder, the OpenCV package is available here:\n\nhttps://central.sonatype.com/artifact/org.opencv/opencv.\n\nOpenCV is an open-source project distributed with Apache 2.0 license. Feel\nfree to contribute on GitHub!\n\nI\u2019m not a developer; what could I do? Donations are welcome!\n\nIf you need custom development and consulting in computer vision, feel free to\nleave a request at opencv.ai\n\n## Let's discuss your project\n\nBook a complimentary consultation\n\n## Read also\n\nApril 4, 2024\n\n### Depth estimation Technology in Iphones\n\nThe article examines the iPhone's LiDAR technology, detailing its use in depth\nmeasurement for improved photography, augmented reality, and navigation.\nThrough experiments, it highlights how LiDAR contributes to more engaging\ndigital experiences by accurately mapping environments.\n\nApril 2, 2024\n\n### Digest 18 | OpenCV AI Weekly Insights\n\nDiscover the latest in AI: Hume AI's EVI introduces emotional intelligence to\ntechnology, OpenAI's Voice Engine offers realistic voice cloning with ethical\nsafeguards, RadSplat pushes VR rendering speeds, and xAI's Grok-1.5 advances\nin understanding complex contexts.\n\nMarch 21, 2024\n\n### How To Train a Neural Network with less GPU Memory: Reversible Residual\nNetworks Review\n\nExplore how reversible residual networks save GPU memory during neural network\ntraining. This technique, detailed in \"The Reversible Residual Network:\nBackpropagation Without Storing Activations,\" allows for efficient training of\nlarger models by not storing activations for backpropagation. Discover its\napplication in reducing hardware requirements while maintaining accuracy in\ntasks like CIFAR and ImageNet classification.\n\nSign up for our newsletter\n\nThank you! Your submission has been received!\n\nOops! Something went wrong while submitting the form.\n\nBy submitting this form, you consent to receiving our newsletter and allowing\nus to store your email address.\n\nCompany\n\nPortfolioBook a CallContact us\n\nMore\n\nBlogPrivacy PolicyTerms & Conditions\n\nSocial\n\nLinkedinYoutube\n\n2024 opencv.ai\n\n", "frontpage": false}

{"aid": "39995615", "title": "PyPI Blog: Malware Distribution and Domain Abuse", "url": "https://blog.pypi.org/posts/2024-04-10-domain-abuse/", "domain": "pypi.org", "votes": 1, "user": "miketheman", "posted_at": "2024-04-10 20:56:08", "comments": 0, "source_title": "Malware Distribution and Domain Abuse - The Python Package Index Blog", "source_text": "Malware Distribution and Domain Abuse - The Python Package Index Blog\n\nSkip to content\n\n# Malware Distribution and Domain Abuse\n\nA package named yocolor was uploaded to PyPI designed assist with malware\ndistribution to targets.\n\nThe package was removed from PyPI, curtailing its potential impact to users.\n\nThis incident differs from the usual malware package removals, as it involved\na domain name that was used in the attack to host the second stage of the\nmalware distribution.\n\nCheckmarx Security Research Team have published an in-depth blog on the\nspecific behaviors - read their report for how it works.\n\nSince PyPI is only involved with what Checkmarx called \"Stage 1\" of the\nattack, I'll focus on the package removal and domain abuse follow up here.\n\n## Timeline\n\n  * 2024-03-05 01:09 UTC - Package yocolor version 0.4.6 uploaded\n  * 2024-03-05 06:17 UTC - First inbound report from Phylum researchers\n  * 2024-03-05 23:40 UTC - Second inbound report from independent researcher\n  * 2024-03-06 17:16 UTC - Package yocolor removed from PyPI\n  * 2024-03-06 17:20 UTC - Email sent to domain registrar, regarding the abuse of pypihosted.org\n  * 2024-03-12 08:00 UTC - Registrar responds, they have notified the domain holder\n  * 2024-03-18 - pypihosted.org domain nameservers removed\n  * 2024-03-25 - Checkmarx blog published\n\nIn reading the Checkmarx blog, they show another domain registered from the\nsame user, with a similar pattern: pythanhosted.org. It's still unclear to me\nhow exactly this domain was used, because I wasn't able to find a record of it\non PyPI, but it was registered by the same entity, same registrar.\n\nThis time, I contacted the registrar, as well as Cloudflare, where the\nnameservers were configured.\n\n  * 2024-03-25 18:30 UTC - Email sent to domain registrar, regarding the abuse of pythanhosted.org\n  * 2024-03-25 17:05 UTC - Abuse report submitted to Cloudflare.\n  * 2024-03-25 17:06 UTC - Cloudflare automated response, clarifying that I may not receive further notice.\n  * 2024-03-29 20:47 UTC - Registrar responds, they have notified the domain holder\n  * 2024-04-04 - pythanhosted.org domain nameservers removed\n\n## Overall Impact\n\nIn the time frame it was live on PyPI, the yocolor project was downloaded in\ntotal 116 times.\n\nMany of these downloads are from package mirrors (bandersnatch among others),\ncopying packages to their own infrastructure. Other downloads may be from from\nsecurity inspections and analysis - including our own.\n\nFor example, a researcher may download a package to inspect the contents, and\nwhen they report it to PyPI, the package is re-inspected by PyPI Admins, which\nwould count as another download.\n\nThere's no definitive way to know how many end users installed the package\ninto an environment that actually executed the malware, but as evidenced by\nthe Checkmarx blog, there were at least a few that have a wider impact on the\nintended targets.\n\n## Technique: Masquerading\n\nIn the package metadata, the attacker used links to the GitHub account of the\ncreator of the package colorama, to create a sense of legitimacy. This\ntechnique is also known as StarJacking.\n\ncolorama is a popular package, used by packages like click, pip-tools and\nothers. This is not the first time attackers have used a \"color\" themed\npackage to distribute malware.\n\nWhen choosing packages to install, ensure you're typing the package name\ncorrectly, or even copy it from PyPI directly to avoid typos.\n\nWhile this isn't ever going to be a guarantee of safety, it's a good practice\nto follow and can minimize the risk of typosquatting attacks.\n\nMore importantly, if someone you don't know very well is recommending pip\ninstall something (or a similar package manager command), this is usually a\nmoment to pause and consider the source of the recommendation.\n\n## Service Provider Response\n\n### Registrar\n\nI re-read ICANN's Registrar Abuse Reports, and from my non-expert\ninterpretation, I believe the registrar operated within the bounds of the\npolicy. I find it interesting that the registrar took 6 days to respond to the\ninitial report, only to inform me they have sent it along to the domain\nregistrant (presumably the attacker), which in and of itself seems like the\nwrong way to handle abuse reports.\n\nThe time-to-respond seems larger than what I'd expect, but given there does\nnot appear to be an SLA or expectation set by ICANN, I can only assume that\nthe registrar is operating within their own internal guidelines.\n\n### Hosting Provider\n\nThe domains used in this attack were both hosted on Cloudflare, as evidenced\nby their nameservers.\n\nWhen reporting Malware abuse to Cloudflare, their form states:\n\n> Because Cloudflare does not have the ability to remove content from a\n> website, it is our practice to forward abuse complaints to entities like the\n> hosting provider and/or website owner to follow up.\n\nThe form shows two checkboxes that cannot be deselected, that the details of\nthe report will be forwarded to the website hosting provider and website\nowner.\n\nThis stood out to me, to be aware that anything submitted may be shared with\nthe alleged attacker.\n\nCloudflare sent an automated response via email within a few minutes of my\nsubmission, confirming receipt, and reminding em that they may not follow up\nwith me.\n\n## Domain Visibility\n\nI was able to snag some details from CompleteDNS about the domain name history\nto help with the timeline.\n\nHere's a couple of screenshots of the domain history for the two domains:\n\nThere may be other services that provide similar information, but I found this\none to be useful in this case. If you've got another one that you like, let me\nknow!\n\n## Closing Thoughts\n\nInstalling packages from PyPI is a trust relationship, and I hope that this\ntransparency helps to reinforce that trust. With our volunteer PyPI Admins,\ncommunity of security researchers, and the vigilance of the wider Python\ncommunity, we can all work towards safer software distribution.\n\nThe kind of follow-up work done here is not something that volunteers have\noften had the time to do, and I'm grateful for the support to ensure these\nkinds of activities are possible.\n\nRead about how we've evolved malware reporting to bring the security community\ncloser to PyPI Administrators.\n\nThere's still a lot of work to do in this space, and we're hiring a Support\nSpecialist to help us manage the increased capacity and allow us to keep pace\nwith PyPI's seemingly unstoppable growth.\n\nJoin us!\n\nMy role is made possible with the support from Amazon Web Services Open\nSource, Georgetown CSET, the PSF and their sponsors.\n\nMade with Material for MkDocs\n\n", "frontpage": false}

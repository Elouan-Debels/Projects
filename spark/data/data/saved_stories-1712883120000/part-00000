{"aid": "40005486", "title": "Inmos and the Transputer", "url": "https://www.abortretry.fail/p/inmos-and-the-transputer", "domain": "abortretry.fail", "votes": 1, "user": "dboreham", "posted_at": "2024-04-11 18:50:25", "comments": 0, "source_title": "inMOS and the Transputer", "source_text": "inMOS and the Transputer - by Bradford Morgan White\n\n# Abort Retry Fail\n\nShare this post\n\n#### inMOS and the Transputer\n\nwww.abortretry.fail\n\n#### Discover more from Abort Retry Fail\n\nIn Abort Retry Fail, I am attempting to chronicle the history of the computing\nindustry. This is a goal that will likely not be completed within my lifetime.\n\nContinue reading\n\nSign in\n\n# inMOS and the Transputer\n\n### Roads less traveled\n\nMar 09, 2024\n\n4\n\nShare this post\n\n#### inMOS and the Transputer\n\nwww.abortretry.fail\n\nShare\n\nIann Merchant Barron was born on the 16th of June in 1936 in Watford, Herts,\nUK. At the age of sixteen, Barron read a news article about computers which\nwere being sensationalized at the time. For Barron, this was life changing. He\nrealized that computers would be his future. Sadly, for a curious mind there\nwas little to be found on the topic. He did find a book by Douglas Hartree,\nCalculating Instruments and Machines, which provided him enough information to\ndesign a computer, but he wasn\u2019t satisfied with this. Barron was a reader of\nthe Times, and he\u2019d seen advertisements from the NRDC. There wasn\u2019t really\nanyone to tell him that he couldn\u2019t so he wrote to Lord Halsbury asking him\nwhat, if anything, a young man like himself could do when finding himself\ninterested in computing. Apparently, no young person had asked this before,\nand I suppose it amused Halsbury as he invited Barron to the NRDC offices in\nLondon. At that meeting, Barron met Halsbury, Chris Strachey, and Donald\nSwann. The three men were thoughtful and kind, and they ultimately suggested\nthat Barron go to Elliott\u2019s.\n\nElliott Brothers was an extremely early computer company. The company had\nexisted quite some time before getting into the computing industry, but the\nElliott 152 was made operational in 1950 for the UK military. The 152\ntransitioned the company to being primarily a computing company for some time.\nThis was followed by several more computers in rapid succession. Between his\nsecondary education and university education, around 1954, Barron worked at\nElliott\u2019s. His primary occupation there was as a programmer, and this didn\u2019t\nsit well with Doctor Sheiler who felt that Barron was young, inexperienced,\nand knew nothing. This, naturally, motivated Barron to compete. Writing\nsoftware for the second Elliott Brothers\u2019 computer, Nicholas, wasn\u2019t a great\nexperience. The computer\u2019s I/O was exclusively a paper tape affair, and it was\na real-time system. Sheiler had written a program to automate the paper tape\npunching and conversion, and Barron rewrote it. Barron\u2019s version implemented\ninterleaved binary/decimal conversion and operated at twice the speed. He\u2019d\nproven himself adequate to the task of programming, and I can only imagine\nthat Sheiler was rather annoyed. On each break from university, Barron\nreturned to Elliott\u2019s.\n\nIn 1958, with his degree completed, Barron was called up for National Service.\nA day prior to his departure, he received a phone call from the War Office.\nSomeone had mentioned to some other person who held some amount of power that\nBarron was well versed in computing technology, and rather than joining the\nArmy, Barron served his country working on computer technology at the Air\nMinistry in Whitehall, and later at the Fighter Command in Stanmore, and\nfinally at the Bomber Command in West Wickham.\n\nIann Barron\n\nIn 1961, leaving the Royal Air Force, Barron contacted Elliott\u2019s. He said he\u2019d\nlike to come back to work for them and research software. They hired him, and\nthen upon arrival things changed. While he was returning, another employee was\nleaving. The company had a contract to fulfill and a computer to complete, and\nBarron was asked to take over. This computer was for the Royal Radar\nEstablishment. It was deployed successfully and handled the operation of the\nradar systems, the collection of their data, and the presentation of their\ndata (though it wasn\u2019t initially designed to do the actual radar controls).\nThis work was followed by yet another computer design due staffing issues at\nthe company, and ultimately, Barron never got to do what he was initially\nhired to do. Barron\u2019s employment at Elliott Brothers finally ended when he was\nasked to build yet another high performance computer, and Barron responded\nwith a suggestion that the company should license the DEC PDP-8. When the\ncompany refused his suggestion in 1965, he quit, started a new company, and\nseveral people left with him.\n\nThe company Iann Barron founded was Computer Technology Limited in Hemel\nHempstead, United Kingdom. It took around six weeks for him to secure funding.\nThis is extremely impressive when one considers that the UK didn\u2019t have a\nstart up scene, and that it didn\u2019t yet have a tradition of privately funded\nscientific companies. The two primary funders were Robert Maxwell and Arnaud\nde Vitry. In Maxwell\u2019s case, the money was his own. In the case of de Vitry,\nthe money came from his venture capital firm, American Research and\nDevelopment. De Vitry had previously invested in DEC, but DEC was adopting\nintegrated circuits too slowly for De Vitry\u2019s liking. Meanwhile, Barron was\nsuggesting using integrated circuits as much as was possible at the time.\nNaturally, de Vitry wanted to be involved.\n\nCTL\u2019s first computer was the Modular One which went on sale in 1968. The\ncomputer was 16 bit and built with ECL. The \u201cmodular\u201d name comes from it being\nbuilt of separate processor, memory, and peripheral modules. These modules\nshared their form factor (19.7 inches wide, 19.7 inches deep, 27.6 inches\ntall) and interface which allowed them to be combined in a somewhat arbitrary\nfashion in either one or two racks. The most typical configurations weighed in\naround sixty pounds.\n\nDespite having a good machine, CTL didn\u2019t do well. The UK computer market\nwasn\u2019t quite as large as the American, and DEC was taking over the market for\nminicomputers. To keep the board happy, the financial managing director was\ncooking the books and claiming sales that hadn\u2019t yet materialized. When Barron\nbrought this information to the board in 1975, the board chose to fire the\nmessenger and not the perpetrator.\n\nOf course, the 1970s were an interesting decade. Microprocessors had just been\nunleashed on the world, and Barron took some time to learn everything he could\nabout them. In his own words, he wanted to become the world\u2019s expert in\nmicroprocessors. Given that the most advanced processors available in 1975\nwere the MOS 6502, the Intel 8080, the Motorola 6800, and the TI TMS1000, this\nwas actually an achievable goal.\n\nHaving achieved considerable expertise in microprocessors, Barron was tasked\nwith organizing a panel of speakers on the future of computing for the\nInternational Federation for Information Processing conference in 1977 in\nToronto. He had someone on board for architecture, for software, and several\nother topics, but he lacked someone to speak about semiconductors. He\neventually found the person he needed in Richard L. Petritz. Unfortunately,\nwhile Petritz had written on the topic at length, and while the committee\nresponsible for the event wanted him to be there, Barron didn\u2019t hear from him.\nBarron was fully prepared to give a talk himself. Happily and amazingly,\nPetritz arrived right on time, he gave a competent talk, and everything was\nfine. After the first day of the conference was over, Barron invited everyone\nto go have a drink. They all arrived at the bar, and Petritz sat next to\nBarron. After some time and much light hearted discussion, Petritz asked\nBarron if he\u2019d like to start a new semiconductor company. But, this was the\nend of a long day, Barron was out of it, and he ignored him. Saturday came,\nand the conference was over. Barron was getting on a plane to fly to Motorola\nin Austin and was having a bit of difficulty with customs officials. Petritz\nserendipitously showed up and helped smooth things over, and then while in\nflight, he again asked Barron if he\u2019d like to start a new semiconductor\ncompany. Barron replied no. Barron had absolutely no intention of working and\nliving in the USA. It just wasn\u2019t for him. The two discussed this for\nsometime, and Petritz eventually stated that should Barron be able to secure\nfunding the UK, he could always have his bit of the company in England.\n\nArriving back in the UK, like every half-way wise husband, Barron spoke about\nthe idea with his wife. His wife gave him her endorsement (more or less), and\nthe next week Barron met with the chairman of the National Enterprise Board,\nSir Leslie Murphy. The NEB was interested in boosting semiconductor technology\nin the UK, and the thought of being able to import the technology from the USA\nwas tempting enough. The NEB provided \u00a350 million to the startup, inMOS, which\nwas founded in July of 1978. One key technology that Barron immediately jumped\non was the wafer stepper; this was actually included in his proposal to the\nNEB. Wafer steppers were still new, and Barron\u2019s new company bought all that\nwere available at the time. These allowed the photolithographic mask for an IC\nto be reduced in size many times over eventually allowing for sub one micron\nfabrication. The tradeoff for this was that instead of imaging an entire wafer\nat one time, each chip would need to be imaged individually.\n\nThe first product that inMOS produced was a 16K static RAM, which was followed\nby dynamic RAM in 16K and 64K sizes. Rather quickly, inMOS began taking the\nmarket for RAM chips and grew to control around sixty percent of that market.\nYet, the company didn\u2019t see profitability despite that large market share.\nBarron\u2019s business plan had projected losses through 1983 with 1984 being the\nfirst profitable year. This was achieved with \u00a3150 million in revenue and\nprofit of around \u00a314 million. Despite becoming profitable, the NEB had\ninvested \u00a365 million and Maragaret Thatcher\u2019s government was keen to privatize\nand cut the government\u2019s expenses. The government found a solution in Thorn\nEMI who bought the government\u2019s seventy six percent holding in inMOS in\nSeptember of 1984 providing the government a \u00a330 million profit on their\ninvestment.\n\nMuch like Sun, HP, and Intel a few years later, inMOS began exploring\nmultiprocessing as CISC CPUs seemed to be hitting performance plateau.\nHowever, inMOS\u2019s solution was rather unique. What Iann Barron envisioned was a\nprocessor that could link with arbitrarily many others to make a parallel\nprocessing system, and his hope was that the system would achieve nearly\nlinear scaling with each new element. The chip that enabled this was called\nthe transputer, and while Barron dreamt it up (and had actually start inMOS\nwith intent of producing it), David May and Robert Milne were the designers.\nThe transputer wasn\u2019t intended to compete directly with Intel and Motorola in\ntheir market, but rather to hit embedded platforms and the very high end.\nWhile there were a few models of transputer chips, they all had a rather\ninteresting set of features: an integer processor, static RAM on chip, four\nbidirectional serial links for communication with other transputers, a memory\ninterface for external memory, real time process scheduling, a timer, and in\nlater models, an on-chip floating point unit. Importantly, both inMOS and many\ntransputer fans refer to the device as being a RISC chip, this isn\u2019t entirely\naccurate. It had a leg in both RISC and CISC. On the RISCy side, the\ntransputer did achieve (on average) one instruction per clock, had\ninstructions of a uniform length, and had a very limited number of\ninstructions. On the CISCy side, it was heavy on microcode (essentially a tiny\nand minimal operating system was implemented in microcode), had just three\ndata registers and those behaved more like a stack, used complex memory\ninstructions, and the instructions themselves were kind of weird (8-bit, and\nsplit into two nibbles where one was the primary instruction code and the\nother was a constant). So really, the transputer was both RISC and CISC, and\nstill not quite either one. It was really its own beast entirely.\n\nAt a time when n-channel MOSFETs were extremely common, transputers were\nmanufactured with CMOS (P-MOS and N-MOS sources and drains connected in\nparallel) which was still relatively new for microprocessors, though it was\nalready common in digital wristwatches and pocket calculators. By the end of\nthe 1980s, CMOS would completely replace N-MOS, and the reasons for this shift\nare visible in the benefits that the transputer had by being CMOS-first: lower\npower consumption, lower heat production, greater predictability. One other\nchoice that was made early was to use CAD rather than pencil and paper\ndrafting and circuit analysis. This required the company to design their own\nCAD workstation and processor design software. The CAD workstation and design\nsoftware were mostly created by Colin Whitby-Strevens, while the layout of the\ntransputer on that workstation was done by a team led by Miles Chesney. Of\ncourse, when one considers that essentially an entire computer (sans\nperipheral controllers and storage [most of the time]) was being put onto a\nsingle chip, the use of CAD becomes an obvious necessity.\n\nSimplified transputer diagram, BYTE, May 1985 issue\n\nA completely new architecture that operated very differently from all prior\nmachines would certainly require new software. That software, to take full\nadvantage of the transputer, would need to be written with the parallel\narchitecture in mind. For this effort, inMOS created the programming language\nOccam named after William of Ockham. The language was primarily developed by\nDavid May but many people at inMOS worked on it. It\u2019s is an imperative\nprocedural language, it\u2019s indentation sensitive, and each expression is\nterminated by end-of-line. I won\u2019t put a course in the language here, but I\nwill highlight some of the more unusual parts of the language. First, while\nall software is essentially just sequence, selection, loop, and data\nstructures... sequence isn\u2019t implicit in Occam. Being a parallel first\nlanguage, for anything to be assuredly done in sequence one needs to to use\nthe SEQ keyword. For concurrent evaluation, one would use the PAR keyword.\nWhile the transputer doesn\u2019t have a single shared bus, it does have named\nchannels. Output to a channel is accomplished with a ! while input from a\nchannel is accomplished with a ?. Notably, the channels are super important as\nOccam\u2019s processes cannot access the same memory, and they therefore share data\nover the channels instead. This channel use instead of shared memory prevents\ndeadlocks. The first version of Occam was ready in 1983 when the first\ntransputers were announced. This date precedes the chip itself as Occam was\nmade before the transputer. This was done to ensure that the transputer would\nlack unused instructions and that hardware and software would be optimized for\none another.\n\nI suppose this as good a time as any to say that making a fab is hard. Really,\nreally hard. In the USA, there was already a rich pool of talent for building\nsemiconductor fabrication plants. While in the 2020s it isn\u2019t the case, the\nUSA had many fabs in 1970s and 1980s. In the UK, there was rather a lack of\nfabrication plants, and there was likewise a lack of chip fab experts. More\nsevere a problem, the US and UK arms of inMOS just didn\u2019t get on. Help from\nthe USA\u2019s fab in Colorado Springs wasn\u2019t exactly forthcoming when the UK team\nwere building their fab, but the fab was built never the less and was on\nCardiff Road in Newport, Wales, UK.\n\ninMOS fab, Colorado Springs\n\ninMOS fab, Newport\n\nentrance to the Newport fab\n\nShortly after getting the UK plant up and running, the company realized that\ntheir chips were suffering from metal fatigue and yields were low. Around\nChristmas of 1982, the company realized that the water they had was\ncontaminated, and this was apparently coming from their chemical reservoirs\n(essentially tin cans full of resins used for de-ionization that were roughly\nnine feet in diameter and roughly twenty six feet tall). All hands were\nbrought in to shovel the resins out, repair the tanks, and then fill them back\nup with resin. Not too long later, the American branch took over management of\nthe fab despite the issue having been caused by the water utility having\ndumped too much chlorine into the water supply.\n\nAround this time, the value of the pound fell sharply which served to further\nstrain the company. As noted earlier, the company did survive all of this and\nstill managed to get their RAM chips out, and the transputer research and\ndevelopment work continued, the company just wasn\u2019t doing terribly well.\n\nSo, Iann Barron\u2019s vision was being funded by the sale of memory chips,\ndeveloped by a company struggling to keep operating, using a state of the art\nfab run by a half of the company somewhat hostile to all UK development\nefforts, and yet, it worked. The transputer was first released in 1984 with\nthe T200 series. The T212 and the M212 were 16 bit chips and featured clocks\nof upto 20 MHz (varieties capable of different clock speeds were available)\nand 2K RAM. The primary difference between the two chips was that the M212\ncame with an integrated disk controller, a very uncommon feature for a\ntransputer, I think this was the only version to do so. Not too long after,\ninMOS released the T222 which increased the RAM to 4K, and then the T225 added\nbreakpoint support. The T222 and T225 could address up to 64K RAM off-chip,\nand they could achieve performance of around five million instructions per\nsecond in their more modest configurations.\n\ninMOS announced the T424 in 1984. This was a 32 bit chip with 4K RAM capable\nof nearly 20 MIPS and which could address up to 4G of off-chip RAM. While the\nchip wasn\u2019t released until late in 1985, it was good for the brand to announce\nearly as several other 32 bit chips were announced in 1984: Data General\nMicroeagle, DEC Micro VAX 1, HP FOCUS, Intel 80386, Motorola 68020, National\nSemiconductor NS32032, NCR/32, Western Electric WE32000, Zilog Z80000. The\n1980s were crazy. The T414 did ship in 1984 with 2K on-chip RAM, but the 424\nwas delayed and didn\u2019t launch until 1985. Both of these came in 15 MHz and 20\nMHz varieties often referred to as T414-15 or T414-20. A T425 launched a\nlittle later with 4K RAM and the breakpoint instruction support, and the it\ncame in 20 MHz, 25 MHz, and 30 MHz varieties. In September of 1989, a low-cost\nT400 chip was released at 20 MHz, 2K RAM, and just two chip interconnects\ninstead of four. This version was the first serious attempt at breaking into\nthe embedded market. I find it interesting that inMOS\u2019s quoted performance was\njust ten MIPS. This was actually on the low side, and that figure assumed\nlarge data sets and complex tasks. Using the 20 MHz T424, small constants, and\na relatively low number of context switches, around sixteen to twenty MIPS was\nachievable. The link speed between chips for the 16 bit and 32 bit series of\ntransputers was 10 Mbps per link, and all four links could send/receive at\nthat speed simultaneously.\n\nT424 announcement from January 1984 issue of BYTE\n\nThe inMOS T800 series was introduced in 1987 with an on-chip, 64 bit, floating\npoint unit. The chip had three registers for floating point and these were\nonce again similar to a stack. While inMOS was late to the floating point\nworld, it did properly implement floating point on the first attempt with the\nIEEE 754 standard. Like earlier versions, T800 series featured 4K of on-chip\nRAM, and was available in multiple clock speeds. The T805 was unique in that\nit offered separate address and data links.\n\ninMOS T805 die, By Pauli Rautakorpi - Own work, CC BY 3.0\n\nNearly all early transputer systems were used with a host machine. The\ntransputer boxes were essentially rather boring metal boxes that fit neatly in\na rack or sat on a desk. The other way one found transputers was add-in cards\nfor IBM PCs or Motorola 68000 workstations. Essentially, the transputer was\nused in a way that is eerily similar to modern GPUs. Specific workloads\nrequiring high amounts of parallelism would be offloaded to the transputer\nwhile mos other tasks were handled by the host machine. This was partially do\nto a lack of I/O controllers in the transputer, but also due to a lack of\nvirtual memory support. This meant that an operating system like UNIX couldn\u2019t\nbe used on the transputer (at least not initially). Those transputer machines\nthat were not of add-in card type were typically supercomputers, and these\nusually still made use of workstation hardware to act as the host(s) and/or as\nterminals.\n\nRay traced graphics with a transputer, May 1985, BYTE\n\nMicroWay Transputer add-in card advertisement\n\nMicroWay offered an add-in board for 80386-based PCs that can help us to get a\nsense of the pricing involved in these systems. In late 1987, one could\npurchase the Monoputer board with a single T414-20 for $1495 (around $4058 in\n2024) and this would include an Occam compiler and 2MB of RAM. A Monoputer\nwith a single T800-20 would be $1995 (around $5416 in 2024) again with 2MB of\nRAM. The Biputer was essentially the same product but with two transputers on\nthe board, one T414-20 and one T800-20, and cost $4995 (around $13561 in\n2024). The Quadputer was a board featuring four T414-20s and it cost $6995\n(around $18990 in 2024). MicroWay stated that a single T800 was roughly\nequivalent in power and performance to an 80386, and they offered Occam, C,\nFortran, Pascal, and Prolog compilers for both MS-DOS and Microport UNIX all\ntargeting the transputer.\n\nThe only product that used solely transputers (of which I am aware) was the\nTV-Toy. This was a joint project between inMOS and Sinclair to develop a game\nconsole, but I wasn\u2019t able to find much information about it. For Sinclair\nsources, there are multiple machines that never surfaced like LC3, the\nSuperSpectrum, and the Loki, but all of those were designed around other CPUs.\nWe do know that the TV-Toy was intended to have been built around the M212 and\nthis was the primary reason for the inclusion of a disk controller in that\nchip unlike all other transputers.\n\nMeiko was founded in March of 1985 by former inMOS employees Miles Chesney,\nDavid Alden, Gerry Talbot, Roy Bottomley, Eric Barton, and James Cownie. One\nyear after starting, they launched the Meiko Computing Surface (or CS1) which\nwas built around the T414. This was a massively parallel supercomputer and it\nwas relatively successful. In 1987, the company launched MeikOS. This was a\nUNIX-like operating system developed from Minix which ran on the CS1. By 1988,\nthe company had one hundred seventy five customers. The \u201cfront end\u201d or host\nfor the CS1 could be a DEC VAX, a Sun workstation, or one of a few IBM models.\nLater versions of the CS1 and all subsequent Meiko supercomputers utilized\nother processors. Meiko also offered cards for Sun workstations built around\ntheir CS1 transputer architecture. The workstation class products had\nperformance in the range of around 3 MFLOPS, with a single mainframe operating\nat around 1 GFLOPS. Their standard M40 configuration (forty boards, one\nnineteen inch rack) achieved about 150 MFLOPS and had 500MB of RAM. According\nto Rolls Royce, their CS1 was competitive against a Cray.\n\nAmong the more famous transputer-based systems (though certainly the least\nsuccessful in the market) was the Atari Transputer Workstation 800. The\ncomputer was announced at COMDEX on the 2nd of November in 1987. They stated\nthat the machine was seven times faster than the Mac II, and a prototype\nclear-cased machine was shown with multiple graphical demonstrations running\nconcurrently. The machine was then scheduled for release in mid-1988 with\npricing starting at $5000 (about $13035 in 2024). The ATW packed a T800-20\nwith 4MB of RAM and was expandable to 16MB alongside a what was essentially a\ncompact Mega ST system with 512K RAM that operated as the host for the\ntransputer. Screen output was handled by the Blossom board that had 1MB of RAM\nand was capable of 1280x960 with 16 colors out of 4096. At lower resolutions,\nBlossom could handle significantly more color with the resolution of 512x480\nsupporting 16.7 million colors. Blossom also had blitter-like functionality\nand could apply several textures to any given object. The machine had an\nadditional four slots to add more transputer boards, and a slot for an inMOS\ncrossbar switch (think of a co-processor that handled coordination of inter-\nchip communications). When fully upgraded, the ATW could house seventeen\ntransputers at 20 Mhz with the crossbar speeding up communication between\nthem. If MicroWay\u2019s performance comparison is accurate, the ATW would have had\nan upper performance limit nearing a rack\u2019s worth of 386 machines and among\nthe best graphics systems available. For software, the ATW ran Helios. Helios\nwas a UNIX-like operating system developed by Perihelion Software that used a\nmicrokernel handling memory allocation, process management, and message\npassing. Around that were libraries for for various things, the most important\nof which was the system library which translated C function calls into Occam\nstatements for the transputers while also handling IPC and networking. Helios\nwas UNIX-like enough that it could run most UNIX software.\n\nAtari Transputer Workstations at Universidad Polit\u00e9cnica de Valencia\n\nHelios with X windows, image from geekdot.com\n\nWhile the transputer was being used for super computers, add-in boards,\nspurious workstations, and non-existent game consoles, inMOS\u2019s memory business\ntook a hit. Most of the RAM business had been transferred to the US fab, and\nthe RAM business still represented the majority of income for inMOS. As a\ngreat way to ruin a day, a faulty piece of equipment used at the fab led to\nfaulty RAM chips, and quite a bit of the management at the Colorado Springs\nfab were fired. Ironically, Iann Barron was sent to the USA to manage the fab.\nThings continued to go poorly, and Barron sold the US half of the company to\nSeymour Cray. Meanwhile, the UK half of the company was still operating under\nThorn. As the transputer became less competitive against the Intel 80386, the\nMotorola 68030, Acorn ARM2, and the DEC Rigel, inMOS mostly made money off of\npatents, about \u00a3200 million worth. One interesting patent negotiation was with\nIBM, where the two companies essentially granted each other access to their\nrespective processor and RAM patent portfolios. As an outcome of this deal,\none of the transputer\u2019s test chips at inMOS that dealt with video output was\nrepurposed for IBM\u2019s SVGA.\n\nIn 1989, inMOS was sold to SGS Thompson. While Pasquale Pistorio liked the\ntransputer and worked to revive it, it would have needed to have been\nredesigned for newer fabrication processes. This would have taken a rather\nserious amount of time with estimates placing tape out at 1991 assuming very\nlittle went wrong along the way. This was started, and was named the T9000,\nand it was never a success though a few made it into the wild. At one point,\nthe team at SGS Thompson considered, and even partially designed, a 64 bit\ntransputer utilizing four address units, four ALUs, two FPUs, and four 50 Mbps\nlinks. This too would simply have taken too much time to become viable.\n\nWhile patents and ideas from inMOS have proliferated throughout the industry,\none of the most interesting outcomes was that the transputer interconnect\nbecame the IEEE 1355 standard which then became SpaceWire. inMOS employee and\nMeiko cofounder Gerry Talbot helped in the creation of HyperTransport and PCI\nExpress using some of the ideas from IEEE 1355, so Infinity Fabric and the Zen\nchiplet interconnects descending from HyperTransport are cousins of that same\ntechnology. David May, one of the two creators of the transputer, went on to\ncofound XMOS, a fabless semiconductor company, with Ali Dixon, James Foster,\nNoel Hurley, and Hitesh Mehta. The company primarily creates heavily multicore\nmicrocontrollers and audio controllers that draw significant inspiration from\nthe transputer and its channels and threads. In December of 2022, the company\nannounced that it would be moving to the RISC-V ISA while keeping the\nunderlying architecture of their xCORE line where the crossbar becomes\nxconnect, and an eight core chip can handle one billion instructions per\nsecond, with 1MB on chip SRAM, integrated USB 2.0 host, serial communications,\nsecure boot support, and consuming something in the neighborhood of 465mW of\npower.\n\n> Everything I\u2019ve done has been accidental, I think. It doesn\u2019t sound good,\n> does it? But, the central view of life, to be successful, you\u2019ve got to\n> actually be pretty clever one way or another, you\u2019ve got to work bloody\n> hard, and you\u2019ve got to be extremely lucky.\n>\n> \u2014 Iann Barron\n\nAn Introduction to Transputers And Occam\n\n3.55MB \u2219 PDF file\n\nDownload\n\nAn Introduction to Transputers And Occam\n\nDownload\n\nInmos Transputer Reference\n\n18.6MB \u2219 PDF file\n\nDownload\n\nInmos Transputer Reference\n\nDownload\n\nHelios Handbook\n\n2.02MB \u2219 PDF file\n\nDownload\n\nHelios Handbook\n\nDownload\n\nI now have readers from many of the companies whose history I cover, and many\nof you were present for time periods I cover. A few of you are mentioned by\nname in my articles. All corrections to the record are welcome; feel free to\nleave a comment.\n\n### Subscribe to Abort Retry Fail\n\nBy Bradford Morgan White\n\nIn Abort Retry Fail, I am attempting to chronicle the history of the computing\nindustry. This is a goal that will likely not be completed within my lifetime.\n\n4 Likes\n\n\u00b7\n\n1 Restack\n\n4\n\nShare this post\n\n#### inMOS and the Transputer\n\nwww.abortretry.fail\n\nShare\n\nComments\n\nSo powerful, it's kind of ridiculous\n\nthe history of 3dfx Interactive\n\nFeb 18, 2023\n\n18\n\nShare this post\n\n#### So powerful, it's kind of ridiculous\n\nwww.abortretry.fail\n\n'Be' is nice. End of story.\n\npick a name from the dictionary, it can work\n\nNov 15, 2022\n\n289\n\nShare this post\n\n#### 'Be' is nice. End of story.\n\nwww.abortretry.fail\n\n17\n\nThe Berkeley Software Distribution\n\nUNIX is always litigious\n\nFeb 5\n\n15\n\nShare this post\n\n#### The Berkeley Software Distribution\n\nwww.abortretry.fail\n\n4\n\nReady for more?\n\n\u00a9 2024 Abort Retry Fail LLC\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}

{"aid": "39988418", "title": "Specifying the Power and Limitations of Randomness", "url": "https://cacm.acm.org/opinion/specifying-the-power-and-limitations-of-randomness/", "domain": "acm.org", "votes": 1, "user": "chmaynard", "posted_at": "2024-04-10 08:46:47", "comments": 0, "source_title": "Specifying the Power and Limitations of Randomness \u2013 Communications of the ACM", "source_text": "Specifying the Power and Limitations of Randomness \u2013 Communications of the ACM\n\nSkip to content\n\nSearch Sign In\n\nJoin ACM\n\nOpinion\n\nComputing Profession\n\n# Specifying the Power and Limitations of Randomness\n\nAvi Wigderson has helped to lead theoretical computer science and mathematics\nto a greater understanding of the role that randomness plays on complexity, as\nwell as its limitations.\n\nBy Leah Hoffmann\n\nPosted Apr 10 2024\n\n  * Share\n\n    * Twitter\n    * Reddit\n    * Hacker News\n  * Download PDF\n  * Print\n  * Join the Discussion\n  * View in the ACM Digital Library\n\nDrawn to computer science at the suggestion of his parents\u2014who thought the\nfield might provide a more practical outlet for his love of mathematics\u2014Avi\nWigderson, the 2023 ACM A.M. Turing Award recipient, has made lasting\ncontributions to the theory of computational complexity. Wigderson\u2019s voracious\nintellectual curiosity led him to explore topics ranging from cryptography and\noptimization to randomness, pseudorandomness, and circuit complexity. His\ninsights have reshaped fields and underpinned applications in privacy, network\nsecurity, and beyond. He is also a thoughtful leader and a generous mentor,\nand has worked to make the field more accessible to nonexperts with his recent\nbook, Mathematics and Computation.\n\nLet\u2019s start with your work on zero-knowledge proofs, which reached the\nsurprising conclusion that every statement that has a proof can be proved to\nsomeone in a way that reveals no information beyond what they already know.\n\nThe word \u201cproof\u201d is loaded. There are many kinds of proofs and proof systems.\nThere are classical proofs that mathematicians use, where you write a paper\nand lay out all the proof steps. There are interactive proofs, which were\nintroduced a year before we began our work, and which allow for interaction\nbetween the prover and the verifier.\n\nThe prover in this scenario is anyone who has a proof of some mathematical\nstatement like, \u201cFermat\u2019s last theorem is true.\u201d And the verifier is somebody\nwho cannot prove it by themselves.\n\nIn normal proofs, we need information. In fact, the whole point of a proof is\nthat we can learn from it. But in a cryptographic context, you want to be able\nto prove a statement like, \u201cMy public key is the product of two primes\u201d\nwithout revealing what that product is. That\u2019s why Shafi Goldwasser, Silvio\nMicali, and Charles Rackoff introduced the model of interactive proofs, along\nwith the idea\u2014which looks completely radical and ridiculous\u2014that you can\nconvince somebody of something without telling them anything they don\u2019t know.\n\nAnd what you proved the following year with Oded Goldreich and Silvio Micali\nis that you can do that for anything you can prove.\n\nIndeed! If you have a mathematical proof for something, you can turn it into a\ntype of interactive proof in which you cannot fool the verifier except with a\nvery tiny probability. And if your statement is correct\u2014if you are proving\nsomething true\u2014the verifier will learn nothing from this interaction.\n\nIn other words, the verifier could have simulated the interaction and arrived\nat the same result.\n\nIt\u2019s a very paradoxical notion, and it has to be carefully defined. What the\nverifier gets from the interaction is a transcript of this conversation. It\u2019s\nrandomized, so it\u2019s a distributional conversation. And yes, that same\ndistribution could have been generated by the verifier alone.\n\nWhen we say, \u201cthe same,\u201d we don\u2019t mean in the information theoretic sense; we\nmean in the cryptographic sense, where all participants are computationally\nlimited. In this world, there\u2019s no way to distinguish between the actual\ninteraction with the prover and the transcript that the verifier generated.\nThis computational indistinguishability is a key notion. But surely you will\nagree that if the verifier could generate something that looks exactly the\nsame to everybody, they didn\u2019t learn anything.\n\nIt would be an understatement to assert that this turned out to have powerful\napplications in authentication, network security, and beyond\u2014but you\u2019ve said\nbefore that your work was motivated by intellectual curiosity.\n\nThere was no practical motivation, or almost none, because the Internet didn\u2019t\nexist, much less electronic commerce. But I know from years of experience that\neven when things look remote from practice\u2014since we are studying computation,\nwhich is so fundamental to math and science\u2014it\u2019s very likely they will be\nuseful. Take quantum computing; it wasn\u2019t until Shor\u2019s algorithm (designed for\na fictional machine!) was published that governments and companies started\ninvesting billions in building them.\n\nIt\u2019s certainly hard to quantify the impact that your own work has had on those\nfields. Let\u2019s move on to the topic of randomness, which has been a big focus\nthroughout the years. One of your most widely hailed results in that field\nshows that under standard computational assumptions, every efficient\nrandomized algorithm can be fully derandomized.\n\nIn the early 1970s, two different parts of the field were shaping up. One is\nthe theory of NP completeness\u2014the idea that there are these universal problems\nthat capture, essentially, all the interesting problems we cannot solve and\ndon\u2019t know why. But they are linked to each other, so if one is hard, the\nothers are hard.\n\nAt the same time, there were many deterministic problems that were not NP-\ncomplete\u2014like primality testing and volume computation\u2014for which people\ncouldn\u2019t find fast deterministic solutions. However, they could find fast\nprobabilistic algorithms. But randomness is a resource. You may not think\nabout it that way, but if you are implementing a probabilistic algorithm, you\nhave to get your random coins from somewhere. So, the question was, can we\nremove the randomness without penalty to efficiency?\n\nOver the course of the next 25 years, you showed that randomness is not\nnecessary for efficient computation.\n\nThere were several jumps, and even this year, new results have come out that\nsharpen our understanding. First, in some cases, an efficient deterministic\nalgorithm was found for an existing probabilistic algorithm. More generally,\nvarious results in the early 1980s showed that in very specific contexts\u2014under\nspecific assumptions about cryptographic hardness, like \u201cfactoring is\ndifficult\u201d\u2014you could remove randomness efficiently from algorithms.\n\nThen we asked, \u201cCan we do that without assumptions, or with weaker\nassumptions?\u201d And what we slowly started understanding is that if practically\nany problem is hard, then you can remove randomness. This came about mainly\nthrough with my work with Noam Nisan, where we invented a method that can take\nany hard function and convert it to a pseudorandom generator. So, all you need\nto believe in order to remove randomness is not that factoring is hard, but\nthat NP-complete problems are hard.\n\nOf course, this pseudorandom generator itself connects two streams of\nthought\u2014about hardness and randomness, and the fact that hardness implies\npseudorandomness.\n\nIt\u2019s fascinating that there\u2019s such a connection between two things that don\u2019t\nseem related at all. And it works in the other direction as well: if you can\nremove randomness from any algorithm, then you have demonstrated hardness of a\nsort.\n\nMore recently, you\u2019ve been working on non-commutative optimization, which\nextends the tools of convex optimization in Euclidean space to a more general\nsetting of Riemannian manifolds.\n\nThis is a project I\u2019ve been very passionate about for 10 years now. My\nmotivation was derandomization and lower bounds, but it\u2019s grown in connections\nand applications.\n\nThere\u2019s a particular problem that we don\u2019t know how to derandomize. I started\nworking on a non-commutative analog, which turned out to be connected to a\nvery interesting mathematical question in the understanding of symmetries. And\nthen it turned out to be connected to questions in algebra, analysis, and\nquantum information theory, and required a theory for geodesic convex\noptimization. It\u2019s analogous to Euclidean settings, but applies to manifolds\nwhere the shortest paths between points is very different than a straight\nline. What we have now is a set of algorithms and partial results that extend\nthe Euclidean framework, which solves many problems and still fails to solve\nmany other problems we care about.\n\nIn other words, it doesn\u2019t prove lower bounds.\n\nIt doesn\u2019t prove lower bounds, and I don\u2019t see how it will. I am, of course,\nlooking at various other ways to use it. But it\u2019s also useful to prove barrier\nresults, showing that particular techniques fail.\n\nI imagine it\u2019s like a little warning sign: \u201cBeware, do not enter.\u201d\n\nIt\u2019s exactly like that, and it\u2019s very useful. I would love if somebody could\ndo it for the Riemann hypothesis, saying, \u201cThese techniques we developed so\nfar will not solve it.\u201d\n\n[See \u201cWigderson Named Turing Awardee for Decisive Work on Randomness\u201d]\n\nLeah Hoffmann is a technology writer based in Piermont, NY, USA.\n\n  * Share\n\n    * Twitter\n    * Reddit\n    * Hacker News\n  * Download PDF\n  * Print\n  * Join the Discussion\n\nSubmit an Article to CACM\n\nCACM welcomes unsolicited submissions on topics of relevance and value to the\ncomputing community.\n\nYou Just Read\n\n#### Specifying the Power and Limitations of Randomness\n\nView in the ACM Digital Library\n\n### DOI\n\n10.1145/3656155\n\n### Related Reading\n\n  * Research and Advances\n\nFuzzing: Hack, Art, and Science\n\nComputing Applications\n\n  * Research and Advances\n\nAutoman: A Platform For Integrating Human-Based and Digital Computation\n\nArtificial Intelligence and Machine Learning\n\n  * Practice\n\nMeaning and Context in Computer Programs\n\nComputing Applications\n\n  * Research and Advances\n\nAsserting and Checking Determinism For Multithreaded Programs\n\nComputing Applications\n\nAdvertisement\n\nAdvertisement\n\n### Join the Discussion (0)\n\n#### Become a Member or Sign In to Post a Comment\n\nSign In Sign Up\n\n### The Latest from CACM\n\nExplore More\n\nNews Apr 10 2024\n\nWigderson Named Turing Awardee for Decisive Work on Randomness\n\nNeil Savage\n\nComputer History\n\nBLOG@CACM Apr 9 2024\n\nScreen Time: What and How Much is Too Much?\n\nSaurabh Bagchi\n\nHCI\n\nNews Apr 8 2024\n\nPerspectives on AI from Around the Globe\n\nKaren Emslie\n\nArtificial Intelligence and Machine Learning\n\n### Shape the Future of Computing\n\nACM encourages its members to take a direct hand in shaping the future of the\nassociation. There are more ways than ever to get involved.\n\nGet Involved\n\n### Communications of the ACM (CACM) is now a fully Open Access publication.\n\nBy opening CACM to the world, we hope to increase engagement among the broader\ncomputer science community and encourage non-members to discover the rich\nresources ACM has to offer.\n\nLearn More\n\nTopics\n\n  * Architecture and Hardware\n  * Artificial Intelligence and Machine Learning\n  * Computer History\n  * Computing Applications\n  * Computing Profession\n  * Data and Information\n  * Education\n  * HCI\n  * Philosophy of Computing\n  * Security and Privacy\n  * Society\n  * Software Engineering and Programming Languages\n  * Systems and Networking\n  * Theory\n\nMagazine\n\n  * Latest Issue\n  * Magazine Archive\n  * Editorial Staff and Board\n  * Submit an Article\n  * Alerts & Feeds\n  * Author Guidelines\n\nCommunications of the ACM\n\n  * About Us\n  * Frequently Asked Questions\n  * Contact Us\n  * For Advertisers\n  * Join ACM\n\n\u00a9 2024 Communications of the ACM. All Rights Reserved.\n\n  * Cookie Notice\n  * Privacy Policy\n\nBy continuing to use our website, you are agreeing to our use of cookies. To\nfind out more, please see our Privacy Policy.\n\n", "frontpage": false}

{"aid": "40042828", "title": "Entrust considered harmful \u2013 Part 1", "url": "https://webpki.substack.com/p/entrust-considered-harmful-part-1", "domain": "webpki.substack.com", "votes": 2, "user": "bo0tzz", "posted_at": "2024-04-15 16:40:11", "comments": 0, "source_title": "Entrust considered harmful - Part 1", "source_text": "Entrust considered harmful - Part 1 - by Amir\n\n# Musings about WebPKI and Public Trust\n\nShare this post\n\n#### Entrust considered harmful - Part 1\n\nwebpki.substack.com\n\n#### Discover more from Musings about WebPKI and Public Trust\n\nA newsletter about the happenings in the world of Public Trust and WebPKI\n\nContinue reading\n\nSign in\n\n# Entrust considered harmful - Part 1\n\n### A series on harmful pattern of behavior by Entrust\n\nAmir\n\nApr 15, 2024\n\nShare this post\n\n#### Entrust considered harmful - Part 1\n\nwebpki.substack.com\n\nShare\n\nWhen Entrust initially posted the incident report for \u201cEntrust: EV TLS\nCertificate cPSuri missing,\u201d my immediate feelings towards it was \u201cwelp,\nanother silly mistake. I\u2019m sure they\u2019ll handle this properly.\u201d As I interacted\nmore and more with Entrust\u2019s incidents, I started to see a troubling pattern\nemerge. To confirm my gut feeling on this I\u2019ve compiled a list of historical\nincidents to see if the troubling behavior is in fact a historical pattern or\nnot.\n\nWhat I found was so, so much worse than I thought. I was planning for this to\nbe a single post. However, the behavior I\u2019ve seen in these incidents made me\nrealize that a single thread would take hours to read. I have to split this up\nto keep it readable. In these series of posts I will be discussing every\nincident Entrust has had, and keep track of their claims and see if they have\nbeen truthful.\n\nSubscribe to receive an email when the next installment is out.\n\nSpoiler Alert: I do not think Entrust should remain a CA anymore. Every day\nthe root programs delay on removing Entrust from their root stores, it taints\nthe trust the public have on the ability for the root programs to regulate\nWebPKI. I don\u2019t expect everyone to agree with my viewpoint here, but I hope\nthat even those who disagree can find these series of posts helpful.\n\nIn this analysis, I will end each incident with a subjective score (SIRQ -\nSubjective Incident Response Quality), between -1 and 5:\n\n  * -1 meaning that this can\u2019t even be called incident response.\n\n  * 5 meaning that this is a high quality incident response.\n\n  * 0 means that they had an incident response, but it had effectively no useful information.\n\nPlease note that this score is completely subjective.\n\n###\n\nEntrust: Non-BR-Compliant Certificate Issuance\n\n2017-08-16\n\nNote, this is the first Entrust incident on Bugzilla.\n\nEntrust did not self report this incident. In this incident, Entrust was found\nto be issuing certificates with a hyphen (\u2018-\u2019) in the OU field.\n\nEntrust responds to this issue with:\n\n> \u201cConfirmed, although as indicated below it\u2019s not clear that including a\n> hyphen in the OU field at the customer\u2019s request (as opposed to at the\n> decision of the CA) is a violation of the BRs.\u201d\n\nFirst thing to keep track: \u201cDid Entrust question the requirements when faced\nwith an incident?\u201d - In this case, yes.\n\nSecond thing to keep track: \u201cDid Entrust find an excuse to not revoke\ncertificates, if they needed to revoke?\u201d Yes:\n\n> \u201cSince the inclusion of this value (a hyphen) is not viewed as a security\n> risk the unexpired certificates will not be revoked.\u201d\n\nEntrust claims:\n\n> \u201cNo indication was found in the vetting file as to why the hyphen was\n> allowed by the verification people, but our best guess is that they were\n> approved due to an interpretation of the BRs concerning allowable values for\n> the OU field ...\u201d\n\nSo they don\u2019t even know why they\u2019ve misissued?\n\nThen, Jonathon Rudenberg finds that there are more certificates that are\nmisissued since they contain IP addresses as a `dnsName`. What does Entrust do\nto respond to this?\n\n> In response to the CA/Browser Forum discussion of this issue in 2016,\n> Entrust stopped issuing these certificates in August 2016. Because no\n> security issues have been found from these certificates, we decided it was\n> not necessary to revoke the certificates previously issued but rather allow\n> them to expire.\n\nWeirdly, no one asks Entrust to file an incident for this as well. Either way,\nEntrust says that this won\u2019t be a problem because they\u2019ve stopped issuing\nthese certificates.\n\nBeyond these problems, Entrust has difficulty providing an incident response\nwith accurate, and precise timelines in it. So something new to keep track of,\n\u201cDoes Entrust provide a complete incident response without being prompted to\nby someone else?\u201d It is not the job of the community to keep reminding a CA to\ndo proper incident responses, so this is worthy to keep track.\n\nAs a final update, Entrust says they\u2019ve done all the remediation items.\n\nSIRQ: 1\n\n###\n\nEntrust: Non-BR-Compliant OCSP Responder\n\n2018-01-08\n\nEntrust once again has not self-reported this incident.\n\nEntrust takes 4 days to acknowledge this incident.\n\nIn this incident, Entrust\u2019s OCSP system is responding \u201cgood\u201d to invalid serial\nnumbers. Effectively meaning that Entrust\u2019s OCSP system for this time period\nis just useless as the info from it can\u2019t be trusted.\n\nEntrust once again starts partially arguing about the requirements, and\nhighlights their misunderstanding of the requirements:\n\n> Although Mozilla policy 1.1(2) does state that CAs which are not technically\n> constrained or are used for SSL or S/MIME are in scope, we did not consider\n> that Mozilla policy 2.3 imposed the BRs on S/MIME CAs. The reason is 2.3\n> appears to be applied to \u201cCA operations relating to issuance of certificates\n> capable of being used for SSL-enabled servers.\u201d\n\nEven if you weren\u2019t sure about these rules, in what system is having an OCSP\nsystem respond \u201cgood\u201d to an invalid signature a proper design?\n\nIt takes two weeks for Entrust to fix this broken OCSP system.\n\nIn this incident, no one asked Entrust to fix their incident response. So at\nleast that goes well. Generally, this incident response was \u201calright\u201d, but it\ndid raise some questions about how Entrust handles their infrastructure\ninternally.\n\nSIRQ: 1\n\n###\n\nEntrust: IP Address in dNSName form\n\n2018-03-26\n\nRemember the first incident discussed here and how Jonathon Rudenberg found\nthat there are certificates being issued with IP addresses in dnsName?\n\nEntrust\u2019s response to that was that \u201cEntrust stopped issuing these\ncertificates in August 2016.\u201d\n\nClearly, that was not true, since now its 2018-03-26, and Entrust has a\nsimilar incident again. It should also be noted that, Entrust received a\nnotice on this 4 days before they filed the preliminary incident report as\nwell.\n\nDuring their multi-day investigation, they did not stop issuance at any point.\nTheir incident response was also very weak, until Ryan Sleevi asked for more\ninformation.\n\nIn this incident, Entrust is asked if they\u2019re planning to implement pre-\nissuance linting. Entrust\u2019s agrees that they will implement pre-issuance\nlinting \u201cin the first release of 2019.\u201d That\u2019s at least ~7 months after this\nincident.\n\nOn 2019-01-04, Ryan Sleevi asks if Entrust has implemented the pre-issuance\nlinting yet. Ryan Sleevi on 2019-01-14, 10 days after the first question, asks\nEntrust for an update. On the same day, Entrust says that:\n\n> We currently have post-issuance linting in place to cover all public and\n> private trust certificate types including SSL/TLS, code signing, S/MIME, and\n> document signing. We are progressing on pre-issuance linting, but have not\n> yet deployed.\n\nRyan once again asks for a concrete timeframe, and Entrust\u2019s response to this\nis:\n\n> Ryan: Pre-issuance linting is not a CAB Forum nor a root embedding program\n> requirement. Perhaps you can provide some information on why the timing of\n> optional implementation by one CA in the ecosystem is important.\n\nThis is, once again, Entrust taking a combative posture months after this\nincident, and years after the same mistake repeats itself. It takes multiple\nback and forths on this issue until Entrust says that the first release in\n2019 will be in April of 2019. Further down, this date gets changed to 1st of\nMay, and then to 14th of May.\n\nEven by the end of this incident, it is unclear what actual linting has been\nadded to Entrust\u2019s pre-issuance process. It took Entrust over a year to add a\nbasic action to their operations.\n\nOne point that Wayne Thayer brought up in this process is this:\n\n> While you are correct that there is no mandate for CAs to do so, future\n> misissuances that would have been prevented by pre-issuance linting will be\n> judged as more severe given Entrust's conscious decision against prevention.\n\nThis is a clearly defined threat against Entrust, and one that I believe\nshould be realized.\n\nI once again want to emphasize that, Entrust had made this misissuance of\nincluding IPs in DNSNames in 2016, and then once again in 2018.\n\nSIRQ: -1\n\n###\n\nEntrust: Certificate issued with '-' in ST field\n\n2018-12-04\n\nThis is extremely similar to the \u201cEntrust: Non-BR-Compliant Certificate\nIssuance\u201d incident here from over a year ago! In this case, Entrust has placed\nthe hyphen character in the ST field.\n\nSomehow after all this time, Entrust once again forgets that there is an\nincident response template until Ryan Sleevi points it out to them. Even after\nthat, Ryan has to then point out that the incident response is still not\ncomplete, and faulty.\n\nEntrust had to also be pushed to file an incident for delayed revocation by\nRyan in that same comment. Once again showing that Entrust either does not\ncare, or can\u2019t seem to remember what the rules require of them.\n\nSIRQ: 0\n\n####\n\nEntrust: Late mis-issue certificate revocation\n\n2019-01-17\n\nAs a result of the previous incident, Entrust files this incident. This time\nthey do follow the incident response template. However, this incident gets\nfiled over a month after the previous incident.\n\nEntrust says that this is the steps the CA is taking to resolve the situation:\n\n> At the time that a miss-issuance has been determined, a revocation deadline\n> will be set. The deadline will be based on the time of notification and not\n> the time the investigation is complete. A 24 hour alarm will be set in our\n> Support system with a notice to a distribution list. Managers on the\n> distribution list will ensure that the certificate gets revoked before the\n> deadline.\n\nAnyone familiar with the baseline requirements will immediately realize that\nthis won\u2019t be compliant with the requirements. Ryan Sleevi pointed this out to\nthem:\n\n> Is this compatible with the Baseline Requirements? It does not appear to be,\n> in that the notification may take some non-zero time after the CA has been\n> made aware of facts requiring revocation. 4.9.1.1 is based on making a\n> determination, which shall be completed within a bounded time after a\n> report.\n\nTo which Entrust agrees and states: \u201cYou are correct as BR 4.9.1.1 states \"The\nCA obtains evidence that the Certificate was misused.\" So the 5 days may start\nas late as this time.\u201d\n\nI\u2019m glad that they agreed. However, this isn\u2019t a class to come learn about the\nrequirements. These requirements are very clearly spelled out in the BRs. The\nBRs aren\u2019t that long of a document to read and keep track. Entrust took a\nmonth to file this incident, and this was the result of their incident\nresponse?\n\nSIRQ: 1\n\n###\n\nEntrust: Late revocation of underscore certificate\n\n2019-01-21\n\nEntrust once again had to rely on an external party telling them they had\nmessed up for them to file this incident. Entrust once again does not provide\nany root cause analysis until they\u2019re prodded to by Ryan Sleevi.\n\nThis incident one was of Entrust\u2019s so far, least problematic responses, even\nthough it showed a clear gap in their operations.\n\nSIRQ: 1\n\n###\n\nEntrust: IP in dnsName\n\n2019-02-03\n\nOnce again, Entrust relying on a external party to tell them they have an\nissue. Jonathan Rudenberg is here to report that, once again, Entrust has\nmessed up their certificate crafting when IPs are involved. What\u2019s concerning\nhere is Entrust\u2019s response to Jonathan directly:\n\n> We've taken a look at the certificates you brought forward internally and\n> have an answer for you. In August 2016, we modified our issuance policies to\n> correct the dnsName discrepancy however a decision was made at that time to\n> allow existing certificates to expire, rather than be revoked.\n>\n> The reasoning behind this decision is that the dnsName field containing an\n> IP address was required to ensure support from some browsers, and there was\n> no direct security concern brought forward by this discrepancy.\n>\n> Currently, that plan has not changed, and we will continue to allow these\n> mentioned certificates to expire in line with our original decision.\n\nSo, they\u2019ve misissued, and they say that is okay. The following is something\nwe\u2019ve seen from Entrust very recently too: \u201cand we will continue to allow\nthese mentioned certificates to expire in line with our original decision.\u201d\nbut let's not get ahead of ourselves here yet.\n\nRyan Sleevi also mentions that Entrust has claimed different things before,\nand there is a discrepancy here. To which Entrust says:\n\n> Note, we were not trying to provide conflicting information as we did not\n> investigate the issue to certificates issued before the patch. We did not\n> consider these certificates to be miss-issued as they were issued to support\n> the Microsoft browser issue.\n\nAgain, I\u2019m left with a \u201cHow on earth did you think this was ok?\u201d moment. Once\nEntrust provides the incident report, they make this claim:\n\n> This mistake was made to address a browser issue before the CA/Browser Forum\n> Baseline requirements were introduced. The implementation of the Baseline\n> Requirements failed to address this issue. The issue was detected through\n> certificate linting and was address through a patch in August 2016.\n\nOnce again, Entrust blaming the BRs here. In that same report, Entrust sets a\ndeadline for revocation for 2019-02-22. Despite this already being way beyond\nthe limit, and way beyond the limit of when this problem was initially\ndetected in #1448986 in 2018-03-26 . They still fail to revoke within their\nown set deadline and finally revoke it all on 2019-02-28.\n\nIt should be noted that these certificates belong to important government\ninstitutions. In this case, the Department of Homeland Security was using a\nbad certificate for years thanks to Entrust\u2019s inability to do their job as a\npublic CA.\n\nSIRQ: 0\n\n###\n\nEntrust: Issued Certificates to incorrect Organization\n\n2019-03-15\n\nIn this incident, Entrust has a misrepresentation between the timeline and\ntheir comment on why it took so long to file an incident report. A\nmisrepresentation that Ryan was quick to ask about:\n\n> It does not appear consistent with your timeline, which suggested it only\n> took a single day to confirm the issue.\n\nIn this incident, Entrust keeps misunderstanding the BRs requirement and Ryan\nhas to effectively spoon feed them procedures to be compliant with the BRs.\nOnce again displaying that Entrust does not have the expertise to effectively\nrun a CA at the scale they do.\n\nWhile Entrust took a day to fix this problem, they never stopped issuance for\nthis organization. I\u2019m not entirely sure if they ended up issuing anything\nwhile they were working on it, but it was clear that they never made the\nconscious choice to stop issuance.\n\nSIRQ: 0\n\n###\n\nEntrust: AffirmTrust Issuing CA Impacted by EJBCA Serial Number Issue\n\n2019-03-18\n\nIn this incident, Entrust makes it clear they don\u2019t even have an inventory of\nwhat software they run for their CA:\n\n> We do monitor MDSP and we did see the original posts. However, since we do\n> not use EJBCA for any of our issuing CAs, it wasn\u2019t immediately obvious that\n> we may have had a problem. It wasn't until we saw the post mentioned above\n> that we realized that there was a detailed configuration in EJBCA that\n> resulted in 63-bit serial numbers that we needed to check in the offline\n> AffirmTrust roots. In retrospect, perhaps we should have made the connection\n> sooner and we will endeavor to be more vigilant in the future.\n\nOne of the foundational requirements for a CA is to keep an inventory of their\nsoftware, and hardware they run as part of managing a CA. The fact that they\ndidn\u2019t realize that they have EJBCA in their stack for weeks after this\nproblem was disclosed once again goes to show that the operational knowledge\nis simply missing.\n\nSIRQ: 1\n\n###\n\nEntrust: Outdated audit statement for intermediate cert\n\n2019-05-07\n\nEntrust allowed a subCA to run without an up-to-date Audit for four months.\nThis entire incident is concerning, but what stood out to me is this back and\nforth between Ryan Sleevi and Entrust, showcasing that Entrust seemingly can\u2019t\neven use a search engine:\n\nRyan asks:\n\n> Considering that multiple other CAs have had issues with providing timely\n> audits for their sub-CAs, why did Entrust not have such procedures already\n> in place, having learned from these incidents? It seems this list is still\n> missing controls that other CAs have implemented for their subordinates, and\n> it's not clear why that decision was made.\n>\n> Could you share a bit more detail about the related Incident Reports from\n> other CAs that Entrust has examined, and the motivations for omitting the\n> controls other CAs have implemented?\n\nEntrust responds (highlighted the interesting part in bold.)\n\n> Entrust has been managing third party sub-CAs for about 15 years. We have\n> worked through managing these sub-CAs as the requirements and the audit\n> criteria has changed over the years. We did not consider reviewing what\n> other CA's have done to address their incidents to provide timely audits.\n> This sounds like a good idea. I did a quick review, but my search did not\n> provide me any benefit. Do you have any recommendations on which ones to\n> review?\n\nRyan responds:\n\n> I am deeply concerned that Entrust has not actively followed discussions of\n> m.d.s.p., as required since April 2017. It seems Entrust has relied on its\n> own experience, which is demonstrably deficient, rather than working to\n> understand how the industry has changed. I am absolutely appalled at\n> Entrust's inability to find issues like Bug 1566162 or Bug 1539296. These\n> were trivial to find, as it simply required looking through\n> https://wiki.mozilla.org/CA/Incident_Dashboard . Of course, if you also\n> examined closed issues, you will find others.\n\nWhat this also shows is that Entrust has no proper procedure of keeping track\nof other incidents. I know that this problem hasn\u2019t gotten better either: I\u2019m\ngoing to skip ahead a tiny bit, but Entrust only just (2024-02-09) found out\nabout ocsp_watch. A tool which has been around for years at this point.\n\nEntrust has demonstrated (at least) in 2019, and 2024 that they do not\neffectively monitor Bugzilla for incidents to apply the lessons from them to\ntheir own CA. Beyond that, I\u2019m very surprised that not a single engineer at\nEntrust knew about this tool? Once again, it makes me question their\nexpertise.\n\nSIRQ: -1\n\n###\n\nEntrust: Question marks in certificate O and L fields\n\n2019-05-17\n\nOnce again, in this incident, Entrust has to be prodded to provide any useful\ninformation on what actually was the incident. One of my favorite lines in\nthis incident is:\n\nwe were not transparent and did no file a miss-issue report ~ Entrust\n\nI know I\u2019m pulling this partially out of context, but honestly, yeah Entrust.\nThat is the theme of this write up.\n\nIn this incident, Entrust once again demonstrates a lack of training and\nknowledge by revoking these certificates and never filing an incident report\nfor them until their auditors noticed this bug.\n\nSIRQ: 1\n\n###\n\nEntrust: Certificate Issued with Incorrect Country Code\n\n2019-06-14\n\nIn this incident, Entrust talks about the use of a SQL query on a live\ndatabase to modify information. Ryan Sleevi points out that he wonders how\nqueries like this can be compliant with the auditing and data retention\nrequirements of the BRs. Unfortunately, we never really got an answer to this.\nI wish that auditors would focus more on \u201cCan a random engineer change data\nwithout it being recorded somewhere?\u201d\n\nEither way, this incident was one of the first examples of Entrust answering\nsomewhat properly to an incident.\n\nSIRQ: 1\n\n###\n\nEntrust: Certificate issued with validity greater than 825-days\n\n2019-06-24\n\nIn this incident, somehow Entrust\u2019s non-production software stack is able to\nproduce a production (Publically trusted) certificate. Reading through this\nincident response, I still do not know how this actually happened. Entrust\nclaimed that there was no preissuance linting as it was a \u201cnon production\u201d\nservice.\n\nFrom what I think they\u2019re trying to say here is, even though these certs were\nbeing issued by a real CA, the intended website for them are the test websites\nCAs put up for clients to test against. Therefore, these were \u201cnon production\u201d\nservices. To make this very clear, if your system is issuing certs against\nyour publicly trusted roots, that is a production system.\n\nEntrust once again has to be prodded to give more information, during which\nthey find an extra two certs that were misissued. As entrust began to address\nthis problem, they misissued another 3 certificates again. This is simply\nunacceptable, they\u2019re treating their production CA as some sort of public\ntesting tool. Wayne Thayer seems to agree:\n\n> Bruce: it's not acceptable to brush off these additional misissuances of as\n> manual errors. When remediating a prior misissuance, I would expect the\n> Entrust team to follow documented and peer-reviewed procedures and to\n> double- and triple-check configurations before triggering production\n> issuance. This sounds more like testing in production, with publicly-trusted\n> certificates.\n\nBecause of this Wayne creates the next incident (Entrust: SHA-1 Issuance and\nother misissuance while testing) for Entrust on 2019-07-19, and Entrust\ndoesn\u2019t respond to it for another 6 days.\n\nSIRQ: -1\n\n###\n\nEntrust: SHA-1 Issuance and other misissuance while testing\n\n2019-07-19\n\nEntrust takes 6 days to acknowledge and respond to this incident. Entrust\nseems to basically copy paste their incident report from the previous incident\nhere. Once again repeating this same line:\n\n> The issuing CA is not set up for production as there are no third party\n> certificates currently being issued. There is no automated issuance nor is\n> there any pre-issuance linting set for a non-production CA. The certificates\n> to support the BR required test sites were issued manually.\n\nTo me, none of their answers were satisfactory here. Their solution was\neffectively to change from a user interface driving a software, to a user\ninterface driving an API that drives some software. Either way the real issue\nseems that it is Entrust, once again, not understanding what constitutes as a\nproduction system.\n\nAlso, entrust claims:\n\n> Entrust does monitor Mozilla discussions, which may include incident\n> reporting. This monitoring may flag action to improve our deployment of\n> certificate management systems. We will plan to increase our level of\n> monitoring and action.\n\nExcept as I mentioned above, somehow they\u2019ve missed the ocsp_watch tool that\nhas existed for years. Someone should ask them to provide a history of all the\nincidents they\u2019ve monitored & triaged, and what their conclusions were for\nthem.\n\nSIRQ: 1\n\nThis marks the end of part 1 of this saga. To summarize:\n\nIn the 14 incidents we\u2019ve analyzed, Entrust created timely incident responses\nexactly once, with 1559376.\n\nIn the case of the IP in dnsName issue, Entrust went back and forth and back\nand forth, and took over a year to implement pre-issuance linting. Linting\nthat somehow didn\u2019t make it\u2019s way to the last two incidents we discussed\nbecause they were \u201cnon production\u201d.\n\nOut of these 14 incidents, Entrust discovered the issue on their own in only\nfour of the incidents. Out of the remaining 10, one of them was discovered\nthrough Audit, 8 of them were from reports sent to them about misissuances.\nThe last of them (1559376), it was not clear how Entrust actually found out\nabout this incident.\n\nOut of these 14 incidents, Entrust argued about the requirements in some\ncapacity in 8 of them.\n\n### Subscribe to Musings about WebPKI and Public Trust\n\nBy Amir \u00b7 Launched a month ago\n\nA newsletter about the happenings in the world of Public Trust and WebPKI\n\n1 Like\n\nShare this post\n\n#### Entrust considered harmful - Part 1\n\nwebpki.substack.com\n\nShare\n\nEntrust mis-issues a certificate, Refuses To Follow CA/B Rules\n\nExtended Validation certificates are a massive hole in web security\n\nMar 15 \u2022\n\nAmir\n\nShare this post\n\n#### Entrust mis-issues a certificate, Refuses To Follow CA/B Rules\n\nwebpki.substack.com\n\nBeyond Distrust, what can a root program do?\n\nMoving away from the binary trust model for CAs and taking small steps to heal\nthe ecosystem\n\nApr 10 \u2022\n\nAmir\n\nShare this post\n\n#### Beyond Distrust, what can a root program do?\n\nwebpki.substack.com\n\nReady for more?\n\n\u00a9 2024 Amir\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n", "frontpage": false}

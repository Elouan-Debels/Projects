{"aid": "39981064", "title": "Datadog Has a Security Footgun", "url": "https://sheriffcranky.substack.com/p/datadog-has-a-security-footgun", "domain": "sheriffcranky.substack.com", "votes": 2, "user": "tyteen4a03", "posted_at": "2024-04-09 16:25:34", "comments": 0, "source_title": "Datadog has a security footgun", "source_text": "Datadog has a security footgun\n\n# Sheriff Cranky's Musings\n\nShare this post\n\n#### Datadog has a security footgun\n\nsheriffcranky.substack.com\n\n#### Discover more from Sheriff Cranky's Musings\n\nTechnical and Community Lead, Toontown: Corporate Clash. Personal musings\nhere.\n\nContinue reading\n\nSign in\n\n# Datadog has a security footgun\n\n### Bad API design leads to field day for domain-snatching data siphons\n\nSheriff Cranky\n\nand\n\nTimothy Choi\n\nApr 09, 2024\n\nShare this post\n\n#### Datadog has a security footgun\n\nsheriffcranky.substack.com\n\nShare\n\nI\u2019ve just finished dealing with an incident at Corporate Clash (a fan\nreimagination of the defunct Disney MMO, Toontown Online) where a\nmisconfigured Datadog RUM (Real User Monitoring for user sessions tracking)\nconfig led to customer data being sent to an unauthorized 3rd party for a\nweek, whenever a user visited our website at https://corporateclash.net.\n\nThe data, sent by the @datadog/browser-rum package, contained information such\nas:\n\n  * your device make/model\n\n  * location based on your IP address\n\n  * OS/Browser versions\n\n  * approximate internet speed\n\n  * a replay of how users interacted with the website (clicks, scrolls, etc)\n\nThe set of data is comparable to if you took a wrong turn on the internet and\nvisited a site you didn\u2019t mean to visit so the degree of harm is minor, but\nsince this data transmission happened automatically when our users visited our\nsite, we decided to disclose the incident as a security incident.1\nFortunately, we don\u2019t think the domain parking service that picked up the\ndomain was aware of the data, as they likely only went after the NXDOMAINs and\nweren\u2019t interested in the extra Datadog data being transmitted.\n\nI can\u2019t help but feel Datadog is negligent in their API design that made the\nincident possible. Since I emailed them and they don\u2019t consider this to be a\nsecurity vulnerability, I will talk about how it works and how you can take\nadvantage of this by being a savvy domain-snatcher avoid this by reading\nDatadog\u2019s document very, very, very carefully.\n\n#\n\nSo, what\u2019s a Site anyway?\n\nIf I ask you what a \u201csite\u201d is, what would you answer me with? A website? A\nphysical location? If you were given this piece of code with no other context,\nwhat do you think a \u201csite\u201d means here?\n\n>\n>     datadogRum.init({ applicationId: 'APP_ID', clientToken: 'CLIENT_ID',\n> site: 'corporateclash.net', version: \"v1.0.0\", env: \"production\", service:\n> \"website\", });\n\nA normal person would probably assume a site is a website, perhaps a domain.\nIf you ask Datadog though:\n\n> Datadog offers different sites throughout the world. Each site is completely\n> independent, and you cannot share data across sites. Each site gives you\n> benefits (for example, government security regulations) or allows you to\n> store your data in specific locations around the world.\n\nSo... what literally everybody else calls a \u201cregion\u201d. And this became the\nstart of the footgun.\n\nIf you read the Datadog RUM documentation, site looks like a required\nparameter we have to fill in. It\u2019s actually not! The package defaults to the\nUS1 site if you don\u2019t have one filled in, which we relied on as default since\nthe introduction of the package, as we also happen to be on the US1 site. One\nof our developers, when upgrading the Datadog RUM package, noticed the missing\nsite parameter. They made the mistake of thinking it meant \u201cour website\ndomain\u201d, which I hope you agree is a very easy mistake to make, and put in our\nwebsite domain, corporateclash.net, instead of the correct value,\ndatadoghq.com.\n\nDatadog uses the site parameter to figure out the browser intake domain, the\ndomain to send the RUM data to. Here\u2019s the full function source code2, but\nlet\u2019s break it down here.\n\nIt first reads from the configuration what site should be; if site is empty,\nassign it to INTAKE_SITE_US1, a constant equalling datadoghq.com. This is the\nbehaviour we were inadvertently relying on and why RUM wasn\u2019t broken before we\nmade the changes.\n\n    \n    \n    function buildEndpointHost(trackType: TrackType, initConfiguration: InitConfiguration & { usePciIntake?: boolean }) { const { site = INTAKE_SITE_US1, internalAnalyticsSubdomain } = initConfiguration\n\nIf we\u2019re tracking logs and we require PCI Compliance and we are on site US1,\nuse PCI_INTAKE_HOST_US1, equalling pci.browser-intake-datadoghq.com. (Spotted\nanything fishy yet?)\n\n    \n    \n    if (trackType === 'logs' && initConfiguration.usePciIntake && site === INTAKE_SITE_US1) { return PCI_INTAKE_HOST_US1 }\n\nIf we\u2019re tracking internal analytics (for Datadog internal use?), send the\ndata to a subdomain of INTAKE_SITE_US1.\n\n    \n    \n    if (internalAnalyticsSubdomain && site === INTAKE_SITE_US1) { return `${internalAnalyticsSubdomain}.${INTAKE_SITE_US1}` }\n\nIf we\u2019re INTAKE_SITE_FED_STAGING (Government staging environment), send the\ndata to a subdomain of INTAKE_SITE_FED_STAGING.\n\n    \n    \n    if (site === INTAKE_SITE_FED_STAGING) { return `http-intake.logs.${site}` }\n\nFinally, we don\u2019t have a match, so let\u2019s build the domain by splitting the\ndomain, joining the domain parts with hyphens, put the domain extension at the\nend, then append browser-intake- in front of the domain name...?\n\n    \n    \n    const domainParts = site.split('.') const extension = domainParts.pop() return `browser-intake-${domainParts.join('-')}.${extension!}`\n\nHave you spotted the problem yet? Remember, the site at this point is\ncorporateclash.net. It would not have hit any of the above branches and would\nfall straight here, and there is no sanity check on sites that don\u2019t belong to\nDatadog. So the code path happily builds the browser intake domain, which\nis....\n\nbrowser-intake-corporateclash.net.\n\nA real domain, a domain we did not expect, and a domain we did not own.\n\nA third party.\n\nThe change was put in place on 24th December, 2023, and since nobody expected\nthe domain to exist, the request silently failed for a few months before a\ndomain parking company noticed the NXDOMAINs and registered the domain on 29th\nMarch, 2024. We were very lucky that somebody3 alerted us to the issue on 4th\nApril, 2024, about a week after the domain\u2019s registration. Had it not been\nspotted, we likely would not have noticed it and malicious actors might have\nhad a chance to siphon our traffic data.4\n\nWe rectified the config error immediately, but 12 hours later, we made the\ndecision to remove Datadog RUM from our website altogether. I don\u2019t think I\u2019m\nalone in the site confusion either - I\u2019m terrible at GitHub search but I found\nat least 1 example where another person thought DD_SITE meant something other\nthan how Datadog defines sites.\n\n#\n\nHow we could have prevented the incident on our part\n\nThis is where I admit we had failures on our part that could have prevented\nthe incident. Namely, monitoring and CSP.\n\nWe should have monitored the rollout of the package after the change was\npushed, both in terms of checking the Networking tab in the browser, and\nchecking our RUM data, which would have blanked This would have been caught\nstraight away, and given that it took months for domain scrapers to notice, it\nwould not have blown up like this.\n\nWe should have implemented CSP. It would have prevented the footgun from\nmanifesting in browsers because browser-intake-corporateclash.net would not\nhave been in the CSP allowlist. We have since implemented it on our website,\nbut due to the age of the codebase, our CSP doesn\u2019t offer complete protection\nagainst what CSPs can protect users from. We were already in the process of\nreplacing the current website and work will accelerate.\n\nOh, and we should have read the docs.\n\n#\n\nHow I would have prevented the incident on Datadog\u2019s part\n\nIf I were designing this API, I would have done the following to make sure\nthis cannot ever happen:\n\n  1. I would not call regions \u201csites\u201d. Everybody in the industry understands the term \u201cregions\u201d to mean geographically-segregated instances of the service.\n\n  2. If we have to keep calling them \u201csites\u201d, change the parameter from site to ddSite, so it\u2019s harder to confuse for the current site name.\n\n  3. If we have to keep the site parameter name (just to keep the existing instances secure), I would make sure you have to go out of your way to set site to an arbitrary domain. There are a few ways to do this:\n\n    1. Only accept site codes (yes, they have those, such as US1, US5, and AP1) in the site parameter. Throw an exception and refuse to send data if incorrect. This will break BC.\n\n    2. Only accept known-good site values, which are also very handily defined as constants. Throw an exception and refuse to send data if incorrect. This won\u2019t be a BC break except for when rolling out new regions, in which case I don\u2019t think it\u2019s a stretch to tell people to upgrade their package.\n\n    3. For internal development use (or if somebody has created a Datadog API-compatible service?), create a new parameter called ddSiteOverrideDomain which conveys several things: It is a Datadog-related parameter, it relates to Datadog sites, it is an override to the normal behaviour (danger alert!), and it expects a well-formed domain name.\n\n  4. Change the browser intake domain behaviour to always generate a subdomain of the site, instead of allowing it to generate arbitrary, unexpected domains. If the browser intake domain prefix had been browser-intake. (dot) instead of browser-intake- (hyphen), any arbitrary site value would result in a subdomain of the site (i.e. browser-intake.corporateclash.net), not some random domain the programmer likely has no control over (i.e. browser-intake-corporateclash.net). You are already doing it for internal analytics and government staging; why not here?\n\nAs a side note, I don\u2019t think this setup is fooling any Ad Blockers since\nPrivacy Badger is correctly blocking the (mind you, known-good) domain. Can\nsomebody know why they aren\u2019t using a subdomain?\n\nDesigning the API this way is a security footgun. It might not be a\nvulnerability in itself, but honest mistakes can turn it into one (remember\nAcropalypse?)\n\n#\n\nDatadog\u2019s Response (tl;dr: It\u2019s not our problem)\n\nWe reported the footgun to Datadog shortly after we figured out the culprit.\nAfter a weekend of waiting, we got the following response, which I will share\nin full followed by my commentary:\n\n> Thanks for your patience while we looked into this. In regards to the item\n> you mentioned for the Datadog RUM SDK, we\u2019re able to provide some additional\n> information around your concerns:\n>\n> To ensure the proper functioning and security of the Datadog Browser RUM\n> SDK, Datadog provides preconfigured \"site\" values for customers to use\n> during the initialization process of the SDK\u2014more information about those\n> defaults here.\n\nExcept the \u201csite values\u201d are never sanity-checked and look like actual website\ndomains? If you want me to memorise it, at least make it something that\ndoesn\u2019t look like a domain, like us-east-1.\n\n> As part of the shared responsibility between Datadog and our customers, it\n> is the customer\u2019s responsibility to leverage these configurations to\n> maintain the integrity and security of their monitoring setup, as well as\n> maintaining the integrity of code used on their systems.\n\nThis sounds like you are shrouding yourselves from bad API designs.\n\n> Modifying the \"site\" value provided by Datadog in the SDK initialization\n> code could potentially result in data being sent to unintended domains.\n> Therefore, it is important for customers to use the provided values to\n> maintain a secure and reliable monitoring environment. The correlation of\n> \u201csite\u201d values and intake endpoints can be found here.\n\nBut you can sanity-check this, so why don\u2019t you? What do you have to gain from\nnot sanity-checking this?\n\n> Being able to modify the \u201csite\u201d value would indicate that the user has\n> access to the application code itself. As a result, they would also be able\n> to override any validation in place.\n\nThat\u2019s not what I said. I clearly spelled out in the email that \u201csite\noperators\u201d (so, like ourselves) can make this mistake. If a user wants to\nmodify our source code to send their own RUM data to browser-intake-\nistealyourdata.com, more power to them. But that\u2019s not what the report is\nabout.\n\n#\n\nConclusion\n\nYes, we should have read the docs. Yes, we should have enabled CSP. Doing both\nwould have saved us a ton of trouble. But I think Datadog isn\u2019t helping\ncustomers with this footgun, and somebody else making the same mistake that we\ndid can land them in very hot water.\n\nHere\u2019s my ask for Datadog to improve on their API design:\n\n  1. Stop calling your region \u201csites\u201d.\n\n  2. Make it very hard to mistake Datadog sites for actual websites.\n\n  3. Change the browser-intake- (hyphen) datadoghq.com domain to browser-intake. (dot) datadoghq.com.\n\n  4. Treat API footguns as security vulnerabilities.\n\nI hope this post helps someone avoid the footgun, and given my inability to\nbulk-check the existence of domains that start with browser-intake-, I can\nonly hope this has not been abused in the wild.\n\n####\n\nDisclaimers and Advertisements\n\nAs of 8th April, 2024 when this article was published, I own 0.125046 shares\nof Datadog, Inc through Trade Republic.\n\nIf you\u2019ve played Toontown Online as a child, Corporate Clash is a non-profit\nfree-to-play fan reimagination of the defunct Disney MMO, Toontown Online. We\nare on the lookout for all sorts of talent, technical or not, to join our all-\nvolunteer team: https://corporateclash.net/help/apply\n\nI am personally on the job market and am on the hunt for a Senior Full-stack\nDeveloper position; you can find my CV at https://cv.thelastcode.io.\n\n1\n\nWe also notified the authorities of the incident, even if the incident, to the\nbest of our knowledge, did not qualify as a \u201cdata breach\u201d under US laws, where\nour legal entity is based.\n\n2\n\nFor the sake of brevity I won\u2019t list through the whole function call chain,\nbut I verified the source code and I cannot see anywhere where the site\nparameter is sanity-checked before ending up in this function.\n\n3\n\nWhile they were doing a cybersecurity course assignment, no less.\n\n4\n\nFunnily enough, the server that were accepting our false RUM data were not\nresponding to the client\u2019s requests because they had CORS headers in place. Of\ncourse, since the request did get made, we can\u2019t be sure they didn\u2019t actually\nprocess the data, so out of caution we treated the incident as if they had\ningested our data and made it look like they didn\u2019t.\n\n### Subscribe to Sheriff Cranky's Musings\n\nLaunched 5 months ago\n\nTechnical and Community Lead, Toontown: Corporate Clash. Personal musings\nhere.\n\n1 Like\n\nShare this post\n\n#### Datadog has a security footgun\n\nsheriffcranky.substack.com\n\nShare\n\nA guest post by| Timothy Choiwriter of code and words| Subscribe to Timothy  \n---|---  \n  \nComments\n\nNon-profit MMOs Do Make Sense\n\nOr, why I'm not making an original MMO\n\nNov 4, 2023 \u2022\n\nSheriff Cranky\n\nShare this post\n\n#### Non-profit MMOs Do Make Sense\n\nsheriffcranky.substack.com\n\nReady for more?\n\n\u00a9 2024 Sheriff Cranky\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}

{"aid": "39984386", "title": "TIL dynamic libraries are only partially loaded at launch in iOS", "url": "https://diggingdeveloper.blog/2024/04/03/til-dynamic-libraries-are-only-partially-loaded-at-launch-in-ios/", "domain": "diggingdeveloper.blog", "votes": 1, "user": "felicio", "posted_at": "2024-04-09 21:20:31", "comments": 0, "source_title": "TIL dynamic libraries are only partially loaded at launch in iOS", "source_text": "TIL dynamic libraries are only partially loaded at launch in iOS \u2013 Digging\nDeveloper\n\nSkip to content\n\nDigging Developer\n\nShining light on least visible parts of software development for Apple\nplatforms\n\n# TIL dynamic libraries are only partially loaded at launch in iOS\n\nPosted byOleksiiApril 3, 2024April 3, 2024Posted\ninUncategorizedTags:framework, ios, library\n\nRecently I\u2019ve stumbled on the issue that I didn\u2019t receive a \u201cClass is\nimplemented in both\u201d warning message, whereas I should\u2019ve, because I\nreferenced the same static library both from the app and indirectly through my\ncustom dynamic framework.\n\nThe reason was, even though I imported the dynamic framework, I never\nreferenced its symbols.\n\nAFAIK there is no precise doc on how dynamic libraries are loaded in iOS, but\nthere is good investigation in SO answer by Caleb, which particularly\nreferences info from Overview Of Dynamic Libraries, that says:\n\n> The dynamic loader resolves only the undefined external symbols the app\n> actually uses during the launch process. Other symbols remain unresolved\n> until the app uses them.\n\nEven though the article is about OS X, I believe this was the case for me too.\nBy using nm -gu I was able to see which symbols are \u201cexternal\u201d + \u201cundefined\u201d,\nand which are not. The symbols that would lead to \u201cduplicate symbols\u201d issue\nweren\u2019t there, because they were in \u201cs\u201d section of symbol table, symbols of\nwhich probably not loaded unless/until actually referenced in code.\n\nPS: Another fun TIL from today: seems that \u201cDynamic library\u201d is not the same\nas \u201cDynamically loaded library\u201d\n\n> The dynamic loader\u2014in addition to automatically loading dynamic libraries at\n> launch time\u2014loads dynamic libraries at runtime, at the app\u2019s request...\n>\n> ...Dynamic libraries loaded at runtime are known as dynamically loaded\n> libraries.\n>\n> (same Apple library mentioned above)\n\n### Share this:\n\n  * Twitter\n  * Facebook\n\nLike Loading...\n\nReloading existing items when using Diffable Data SourceOctober 26, 2022Liked\nby 1 person\n\nUI Tests are asynchronous and dynamic. Issues and tips.January 18, 2022\n\nAVMutableVideoCompositionLayerInstruction assetTrackMay 26, 2020\n\nPosted byOleksiiApril 3, 2024April 3, 2024Posted\ninUncategorizedTags:framework, ios, library\n\n### Leave a comment Cancel reply\n\nDigging Developer, Blog at WordPress.com.\n\n  * Comment\n  * Reblog\n  * Subscribe Subscribed\n\n    * Digging Developer\n    * Already have a WordPress.com account? Log in now.\n\n  * Privacy\n  *     * Digging Developer\n    * Customize\n    * Subscribe Subscribed\n    * Sign up\n    * Log in\n    * Copy shortlink\n    * Report this content\n    * View post in Reader\n    * Manage subscriptions\n    * Collapse this bar\n\n%d\n\n", "frontpage": false}

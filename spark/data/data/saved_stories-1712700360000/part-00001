{"aid": "39980867", "title": "Node's Complexity Problem", "url": "https://deno.com/learn/nodes-complexity-problem", "domain": "deno.com", "votes": 1, "user": "peter_d_sherman", "posted_at": "2024-04-09 16:05:26", "comments": 0, "source_title": "Node's Complexity Problem", "source_text": "Node's Complexity Problem\n\nSkip to main content\n\n# Node's Complexity Problem\n\nThough Node is ubiquitous on the web today, it was never intended to be the\nruntime for the web. But it did tap into a growing appetite from web\ndevelopers to use JavaScript for everything. In Node\u2019s (and npm\u2019s) ever\nexpanding scope to service these wide ranging use cases, building a simple web\napp became burdened with flaky complex build steps, setting up tooling,\nmanaging dependency discrepancies, and using shims and polyfills to bridge the\ngap between using web standards APIs.\n\nRyan Dahl\u2019s goes over his regrets while building Node that led to its\nunnecessarily complex state today.\n\n## Too much config\n\nStarting a new project in Node.js requires several steps before you can\nactually start programming. Setup TypeScript. Setup your testing framework.\nSetup a formatter. A linter. A type checker. Set up your bundler. Add the\nright plugins. And after selecting your tools, tweak all their config files so\nthey work well together. Some Next.js projects have over 30 config files in\nthem.\n\nProgramming should be just that \u2014 programming \u2014 and not configuring tools\nbefore you write a single line of code.\n\n## Divergence from web standards and browser JavaScript\n\nSince Node.js was created as an event-driven, asynchronous I/O JavaScript\nruntime, web standards and interoperability were not the main focus. As a\nresult, Node.js invented its own set of APIs (e.g. fs, path, to name a few)\nand its flavor of JavaScript diverged from that used in the modern browsers.\nThis led to further complexities when using Node.js to build for the web, as\nyou\u2019re now required to add bundlers, source mappers, transpilers, shims, and\nmore into your workflow.\n\n## Module loading and resolution\n\nNode\u2019s node_modules folder and its \u201cvendor-by-default\u201d strategy massively\ncomplicates the module resolution algorithm. Sometimes different packages\nrequire different versions of other packages, leading to complex dependency\ntrees with circular and peer dependencies requiring a different version of the\nsame dependency. This results in time spent auditing dependencies as well as\nlong build times.\n\nThe scope of npm\u2019s package.json expanded over time and today includes too much\nboilerplate. When creating a JavaScript module, we now need to include\nfrivolous details like LICENSE information. If you want to write and share a\nsingle file JavaScript program, you shouldn\u2019t need to fill out a lengthy\nquestionnaire.\n\n## Deno: a clean start, built for the web\n\nWe recognized these deaths-by-a-thousand-paper-cuts with Node.js and re-\nimagined from the ground up what a modern, productive, and simple approach to\nbuilding web and cloud software could be.\n\nDeno is a single, simple system \u2014 not a myriad of disparate tools like npm,\nnode-gyp, gulp, grunt, jest, etc. \u2014 with the development tools you need\nwithout any config needed so you can jump right into coding.\n\n> Learn more about Deno:\n>\n>   * TypeScript support\n>   * Web standard APIs\n>   * All-in-one development toolchain\n>   * Secure-by-default\n>\n\n## Learn\n\n  * Node's Security Problem\n  * Node's Complexity Problem\n  * Edge is the Future\n\n## Why Deno?\n\n  * TypeScript Support\n  * Web Standard APIs\n  * All-in-one Tooling\n  * Secure-by-default\n\n## Use Cases\n\n  * Scripts and CLIs\n  * API Servers\n  * Sites and Apps\n  * Modules\n  * Serverless Functions\n\n## Products\n\n  * Deno Runtime\n  * Deno Deploy\n  * Deno KV\n  * Deploy Subhosting\n  * Fresh\n  * SaaSKit\n\n## Sources\n\n  * Runtime Manual\n  * Runtime API\n  * Deploy Docs\n  * Standard Library\n  * Third-Party Modules\n  * Examples\n\n## Company\n\n  * Careers\n  * Blog\n  * Pricing\n  * News\n  * Merch\n  * Privacy Policy\n\nGitHubDiscordTwitter or X or whateverYouTubeMastodon\n\nCopyright \u00a9 2024 Deno Land Inc. All rights reserved.\n\nAll systems operational\n\n", "frontpage": false}

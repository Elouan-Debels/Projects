{"aid": "39994583", "title": "Group Decisions", "url": "https://karim.cloud/blog", "domain": "karim.cloud", "votes": 2, "user": "ColinWright", "posted_at": "2024-04-10 19:10:07", "comments": 0, "source_title": "Karim Shehadeh - Blog", "source_text": "Karim Shehadeh - Blog\n\n# Blog\n\n  * ### Group Decisions\n\n2024\n\nCommunicationThinkingPeople\n\nPeople are complicated. Really complicated. Navigating people in an\nenvironment where their motivations (and your own) are subject to a wide\nvariety of ever-changing stimuli and thoughts makes for an exhausting\nexperience. But if you can observe and identify what\u2019s happening, you'll be\nable to rise above the chaos and find your way to a productive outcome.\nMeetings are where most conversations about problems that require decisions\nare discussed. But they are interpersonal communication puzzles ...\n\n  * ### Cataloging Conflict\n\n2024\n\nPeople\n\nI spend a good bit of time in conflict resolution - either my own, people on\nmy team or between groups. I\u2019ve noticed that one of the most helpful things to\ndo in these situations - aside from empathy, which is absolutely crucial - is\nunderstanding the type(s) of conflict being had. A lot of time is spent\ndebating decisions. Each of these decisions has consequences but the nature of\nthose consequences should be clearly understood to better assign value to the\nconflict. Technical conflict h...\n\n  * ### Life of a Project\n\n2024\n\nOrganizationPlanning\n\nProjects pulsate with life. They're conceived, they grow, they mature, and\neventually, they transition into a state of completion. Each stage presents\nits unique challenges and opportunities, necessitating distinct approaches for\noptimal outcomes. This essay delves into the various phases of a project,\nhighlighting their differences and outlining strategies for effective\nmanagement. Ideas are fleeting, yet some are so compelling they demand\nattention. In these nascent stages, the absence of cons...\n\n  * ### Predictability\n\n2024\n\nPlanningOrganization\n\nThe topic of predictability in software engineering is one that comes up often\nat work. Program Increments - a tool used as part of applying agile in large\nteams - is arguably a tool intended to help drive some predictability in an\norganization. But if one purpose of Program Increments is to bring\npredictability to development cycles then it can only be effective if\nunderlying systems have I will start by saying I am no expert on this subject\n- in fact, everything in here is based on my own ...\n\n  * ### Brevity\n\n2024\n\nCommunication\n\nIn the past several months I\u2019ve seen the affect that poor communication has on\nthe efficiency of an organization. It\u2019s not so much that it is the source of\nproblems but it compounds all problems dramatically. Like the relationship\nbetween a spark and a powder keg, the more problematic an organization is, the\nmore sensitive it is to bad communication. In these situations, But what As an\nengineer, if I\u2019m talking about a specific bug that needs to be fixed to a\nstakeholder (say, a product manag...\n\n  * ### Using CloudFlare with Notion\n\n2024\n\nEngineeringCloudflareNotionTypescriptJavascript\n\nWith my website (which uses Notion as its CMS), I ran into a problem caused by\na quirk of Notion\u2019s API. When you upload an image to Notion and then fetch\nthat image as part of a page payload, the image URL is an S3 bucket key that\nexpires after an hour. Which is fine for most use cases but is problematic\nwhen pre-rendering a site - like I do for To solve the problem, I use R2 as a\nrepository for static imagery. When I fetch an image from Notion and it is has\nan expiring URL, I will check to ...\n\n  * ### Notion as a CMS\n\n2024\n\nEngineeringNotionContentJavascriptTypescript\n\nI\u2019ve been tinkering with Notion as a CMS for the last few days and decided it\nchecked all the boxes for a simple site like my own. Below is a high level\nrecap of some of the keys steps. But for more detail, First of all, I chose\nNextJS for this because I\u2019m familiar with it, it has a lot of options for\nswitching between different types of rendering and React is something I\u2019m\ncomfortable with. But, really, this is workable in any static site generator.\nNotion has a very clean integration AP...\n\n  * ### A/B Testing and Feature Flags\n\n2024\n\nEngineeringJavascriptTypescript\n\nLet\u2019s start by defining the difference between A/B testing and feature\nflagging. There is a lot of overlap between the two because the definition of\nboth includes the simultaneous presence of two (or more) different ways of\npresenting a user interface and/or accomplishing a task within an application.\nThe only real difference is the You can use Adobe Target to establish feature\nflags that can then dictate to an application which implementation to use. But\nTarget\u2019s feature set allows for a ri...\n\n  * ### Small Teams Do Better\n\n2024\n\nOrganizationPeople\n\nWith communication as difficult as it is, keeping your development team as\nsmall as possible yields much better outcomes for a lot of reasons. I wanted\nto put together a few thoughts about what the benefits are and why I think\nthey materialize. Scalability and Flexibility Smaller teams offer more\nflexibility in project management, ensuring continuity and flow in the project\nwithout much disruption when changes occur. This is because the members are\nmore acquainted with the full context of the ...\n\n  * ### Ansie\n\n2024\n\nEngineeringToolsLibraries\n\nAnsie is a rich-text terminal rendering package I started this package out of\nfrustration of not having a relatively simple way to output rich text without\nrelying on direct terminal codes which is difficult to parse with the human\neye. Yes, there is With Ansie, there are no dependencies for the library - not\neven chalk. It uses PEGJS to build a parser that will read an XML-based string\nand translate that into terminal codes. For example: This feels better to me,\nas a web developer than the sam...\n\n  * ### Slackbot On The Edge\n\n2023\n\nEngineeringToolsLibraries\n\nWhile there are some examples of how to setup a slackbot that runs on Lambdas,\nthere wasn\u2019t much available for running in an edge environment. The Edge\nRuntime has a few limitations (or differences) - not the least of which is\nthat they often are not using the Node APIs. Rather they will often use v8\ndirectly and make available the Fetch API. When using the app directory, API\nroutes will run in this reduced environment which left me having to implement\na new Slack Bolt Receiver. The example belo...\n\n  * ### Github Webhooks And NextJS\n\n2023\n\nEngineeringGithubNextJS\n\nI recently decided to switch an internal tool from NextJS pages router to app\nrouter. There\u2019s lots of documentation about how to do that but the part that I\nwas surprised would be tricky was getting my api implementation for my Github\napp\u2019s webhook handler working again. As part of the migration I moved my\nwebhooks endpoint for github from its original location In the app dir, route\nhandlers actually take different parameters and export different function. For\none thing, you export a separate h...\n\n## Recent Posts\n\n  * Group Decisions\n  * Cataloging Conflict\n  * Life of a Project\n  * Predictability\n  * Brevity\n  * Using CloudFlare with Notion\n  * Notion as a CMS\n  * A/B Testing and Feature Flags\n  * Small Teams Do Better\n  * Ansie\n\n## Other Things\n\n  * My Blog\n  * My Resume\n  * About Me\n\n\u00a9 2024 Karim Shehadeh\n\n", "frontpage": false}

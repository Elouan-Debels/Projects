{"aid": "39978108", "title": "AutoCodeRover resolves 22% of real-world GitHub issues in SWE-bench lite", "url": "https://github.com/nus-apr/auto-code-rover", "domain": "github.com/nus-apr", "votes": 15, "user": "mechtaev", "posted_at": "2024-04-09 10:56:31", "comments": 8, "source_title": "GitHub - nus-apr/auto-code-rover: Autonomous program improvement", "source_text": "GitHub - nus-apr/auto-code-rover: Autonomous program improvement\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nnus-apr / auto-code-rover Public\n\n  * Notifications\n  * Fork 13\n  * Star 331\n\nAutonomous program improvement\n\n### License\n\nGPL-3.0 license\n\n331 stars 13 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# nus-apr/auto-code-rover\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nyuntongzhangAdd another task listea25a61 \u00b7\n\n## History\n\n27 Commits  \n  \n### app\n\n|\n\n### app\n\n| Replace some legacy env names  \n  \n### conf\n\n|\n\n### conf\n\n| Add another task list  \n  \n### results\n\n|\n\n### results\n\n| Initial commit  \n  \n### scripts\n\n|\n\n### scripts\n\n| Replace some legacy env names  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| Add more deps to Dockerfiles  \n  \n### Dockerfile.experiment\n\n|\n\n### Dockerfile.experiment\n\n| Add more deps to Dockerfiles  \n  \n### Dockerfile.scratch\n\n|\n\n### Dockerfile.scratch\n\n| Add more deps to Dockerfiles  \n  \n### EXPERIMENT.md\n\n|\n\n### EXPERIMENT.md\n\n| Add more notes in EXPERIMENT.md  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| Add more notes in EXPERIMENT.md  \n  \n### environment.yml\n\n|\n\n### environment.yml\n\n| Initial commit  \n  \n### preprint.pdf\n\n|\n\n### preprint.pdf\n\n| Initial commit  \n  \n## Repository files navigation\n\n# AutoCodeRover: Autonomous Program Improvement\n\nArXiv Paper\n\n## \ud83d\udc4b Overview\n\nAutoCodeRover is a fully automated approach for resolving GitHub issues (bug\nfixing and feature addition) where LLMs are combined with analysis and\ndebugging capabilities to prioritize patch locations ultimately leading to a\npatch.\n\nOn SWE-bench lite, which consists of 300 real-world GitHub issues,\nAutoCodeRover resolves ~22% of issues, improving over the current state-of-\nthe-art efficacy of AI software engineers.\n\nAutoCodeRover works in two stages:\n\n  * \ud83d\udd0e Context retrieval: The LLM is provided with code search APIs to navigate the codebase and collect relevant context.\n  * \ud83d\udc8a Patch generation: The LLM tries to write a patch, based on retrieved context.\n\n### \u2728 Highlights\n\nAutoCodeRover has two unique features:\n\n  * Code search APIs are Program Structure Aware. Instead of searching over files by plain string matching, AutoCodeRover searches for relevant code context (methods/classes) in the abstract syntax tree.\n  * When a test suite is available, AutoCodeRover can take advantage of test cases to achieve an even higher repair rate, by performing statistical fault localization.\n\n## \ud83d\uddce arXiv Paper\n\n### AutoCodeRover: Autonomous Program Improvement [arXiv 2404.05427]\n\nFor referring to our work, please cite and mention:\n\n    \n    \n    @misc{zhang2024autocoderover, title={AutoCodeRover: Autonomous Program Improvement}, author={Yuntong Zhang and Haifeng Ruan and Zhiyu Fan and Abhik Roychoudhury}, year={2024}, eprint={2404.05427}, archivePrefix={arXiv}, primaryClass={cs.SE} }\n\n## \u2714\ufe0f Example: Django Issue #32347\n\nAs an example, AutoCodeRover successfully fixed issue #32347 of Django. See\nthe demo video for the full process:\n\n## \ud83d\ude80 Setup & Running\n\nWe recommend running AutoCodeRover in a Docker container. First of all, build\nand start the docker image:\n\n    \n    \n    docker build -f Dockerfile -t acr . docker run -it acr\n\nIn the docker container, set the OPENAI_KEY env var to your OpenAI key:\n\n    \n    \n    export OPENAI_KEY=xx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n### Set up one or more tasks in SWE-bench\n\nIn the docker container, we need to first set up the tasks to run in SWE-bench\n(e.g., django__django-11133). The list of all tasks can be found in\nconf/swe_lite_tasks.txt.\n\nThe tasks need to be put in a file, one per line:\n\n    \n    \n    cd /opt/SWE-bench echo django__django-11133 > tasks.txt\n\nThen, set up these tasks by running:\n\n    \n    \n    cd /opt/SWE-bench conda activate swe-bench python harness/run_setup.py --log_dir logs --testbed testbed --result_dir setup_result --subset_file tasks.txt\n\nOnce the setup for this task is completed, the following two lines will be\nprinted:\n\n    \n    \n    setup_map is saved to setup_result/setup_map.json tasks_map is saved to setup_result/tasks_map.json\n\nThe testbed directory will now contain the cloned source code of the target\nproject. A conda environment will also be created for this task instance.\n\nIf you want to set up multiple tasks together, put their ids in tasks.txt and\nfollow the same steps.\n\n### Run a single task\n\nBefore running the task (django__django-11133 here), make sure it has been set\nup as mentioned above.\n\n    \n    \n    cd /opt/auto-code-rover conda activate auto-code-rover PYTHONPATH=. python app/main.py --enable-layered --model gpt-4-0125-preview --setup-map ../SWE-bench/setup_result/setup_map.json --tasks-map ../SWE-bench/setup_result/tasks_map.json --output-dir output --task django__django-11133\n\nThe output of the run can then be found in output/. For example, the patch\ngenerated for django__django-11133 can be found at a location like this:\noutput/applicable_patch/django__django-11133_yyyy-MM-dd_HH-mm-\nss/extracted_patch_1.diff (the date-time field in the directory name will be\ndifferent depending on when the experiment was run).\n\n### Run multiple tasks\n\nFirst, put the id's of all tasks to run in a file, one per line. Suppose this\nfile is tasks.txt, the tasks can be run with\n\n    \n    \n    PYTHONPATH=. python app/main.py --enable-layered --model gpt-4-0125-preview --setup-map ../SWE-bench/setup_result/setup_map.json --tasks-map ../SWE-bench/setup_result/tasks_map.json --output-dir output --task-list-file tasks.txt\n\nNOTE: make sure that the tasks in tasks.txt have all been set up in SWE-bench.\nSee the steps above.\n\n#### Using a config file\n\nAlternatively, a config file can be used to specify all parameters and tasks\nto run. See conf/vanilla-lite.conf for an example. Also see EXPERIMENT.md for\nthe details of the items in a conf file. A config file can be used by:\n\n    \n    \n    python scripts/run.py conf/vanilla-lite.conf\n\n## Experiment Replication\n\nPlease refer to EXPERIMENT.md for information on experiment replication.\n\n## \u2709\ufe0f Contacts\n\nFor any queries, you are welcome to open an issue.\n\nAlternatively, contact us at: {yuntong,hruan,zhiyufan}@comp.nus.edu.sg.\n\n## Acknowledgements\n\nThis work was partially supported by a Singapore Ministry of Education (MoE)\nTier 3 grant \"Automated Program Repair\", MOE-MOET32021-0001.\n\n## About\n\nAutonomous program improvement\n\n### Resources\n\nReadme\n\n### License\n\nGPL-3.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n331 stars\n\n### Watchers\n\n6 watching\n\n### Forks\n\n13 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 3\n\n  * crhf Haifeng Ruan\n  * yuntongzhang Zhang Yuntong\n  * zhiyufan Zhiyu Fan\n\n## Languages\n\n  * Python 99.8%\n  * Dockerfile 0.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}

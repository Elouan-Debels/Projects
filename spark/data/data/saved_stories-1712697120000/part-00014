{"aid": "39978318", "title": "Show HN: Eventiveness, my new JavaScript framework", "url": "https://github.com/markersunny/eventiveness", "domain": "github.com/markersunny", "votes": 1, "user": "sunnyMark", "posted_at": "2024-04-09 11:29:31", "comments": 0, "source_title": "GitHub - markersunny/eventiveness: A framework for writing accessible and joyfully interactive web applicationa with traditional HTML, CSS and Javascript", "source_text": "GitHub - markersunny/eventiveness: A framework for writing accessible and\njoyfully interactive web applicationa with traditional HTML, CSS and\nJavascript\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmarkersunny / eventiveness Public\n\n  * Notifications\n  * Fork 0\n  * Star 1\n\nA framework for writing accessible and joyfully interactive web applicationa\nwith traditional HTML, CSS and Javascript\n\n1 star 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# markersunny/eventiveness\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n5 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmarkersunnyModified readme.md8ac87a9 \u00b7\n\n## History\n\n19 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Update npm-publish.yml  \n  \n### examples\n\n|\n\n### examples\n\n| Removed large css file  \n  \n### .DS_Store\n\n|\n\n### .DS_Store\n\n| Removed large css file  \n  \n### actribute.js\n\n|\n\n### actribute.js\n\n| First commit  \n  \n### apriori.js\n\n|\n\n### apriori.js\n\n| First commit  \n  \n### arender.js\n\n|\n\n### arender.js\n\n| First commit  \n  \n### domitory.js\n\n|\n\n### domitory.js\n\n| First commit  \n  \n### eventivity.js\n\n|\n\n### eventivity.js\n\n| First commit  \n  \n### package.json\n\n|\n\n### package.json\n\n| Modified readme.md  \n  \n### readme.md\n\n|\n\n### readme.md\n\n| Modified readme.md  \n  \n### sophistry.js\n\n|\n\n### sophistry.js\n\n| First commit  \n  \n## Repository files navigation\n\n# Eventiveness Web Framework\n\nThis is bunch of tiny abstractions created with the goal of simplifying the\ndevelopement of highly interactive web frontends using vanilla HTML, CSS and\nJavascript. Everything is exactly the way they look and there is no hidden\nmagic. The framework consists of 5.5 independent libraries which tackle unique\nconcerns in front-end development. We avoid repeating standard functions in\nthe javascript language and instead focus on new primitives which complement\nand enhance them. After reading this guide to the framework along with their\ninline documentation and the attached examples (2), there is nothing left to\nlearn except more standard HTML, CSS and Javascript.\n\n## The Libraries\n\n  1. Arender\n\nArender is an async templating library which supports promises. Rendering will\nnaturally await all interpolated promises before returning a result.\n\n  2. Apriori\n\nApriori is used to create template DOM trees out of things that can be\nconverted to DOM trees, such as existing trees, markup or promises or\nfunctions that can return them. It is a convenient abstraction for avoiding\nrepetitive coding.\n\n  3. Sophistry\n\nSophistry will help with scoping styles whether or not we use shadow DOM.\n\n  4. Eventivity\n\nThis is the main library of this framework. Eventivity enables simple and\nexplicit reactivity by simply wrapping normal functions and statements with\nappropriate calls. See the usage notes.\n\n  5. Domitory\n\nDomitory exports a set of pragmatic functions (and a class) for enhancing some\ntraditional DOM apparatus. Some of these may likely be assimilated into the\nJavascript standard eventually.\n\n  6. Actribute\n\nActribute provides a more widely supported, flexible and powerful alternative\nto extending built-in HTML elements.\n\n## Installation\n\nnpm install eventiveness\n\n## Usage\n\n  1. Arender\n\n    \n    \n    import { arender } from \"./arender.js\"; const template = arender(\"<div>${arg1}</div>${arg2}\", ['arg1', 'arg2']); const renderedA = template('Arg 1a', Promise.resolve('Arg 2a')); const renderedB = template('Arg 1b', Promise.resolve('Arg 2b'));\n\n  2. Apriori\n\n    \n    \n    import { apriori } from './apriori.js' const viewFactory = await apriori(fetch('html-fragment.html').then(r => r.text())); const differentViews = [viewFactory(), viewFactory()];\n\n  3. Sophistry\n\n    \n    \n    import { sophistry } from '../sophistry.js' const mySophistry = sophistry(); const element = (await apriori(` <div> <p>I have encapsulated styles</p> <style>/* encapsulatedd styles */</style> </div> `)).tree; const styles = mySophistry(element); // the styles get popped here. for (let style of styles) style.style(element);\n\n  4. Eventivity\n\n    \n    \n    import { eventivity } from '../eventivity.js'; const myEventivity = eventivity(); const e = myEventivity.event(); const h = myEventivity.handler(); const handlerFunction = (...args) => 'I reacted!'; h.eventName(handlerFunction); let variable; e.eventName(variable = 'handlerFunction' + 'RunsAfterMe!');\n\n  5. Domitory\n\n    \n    \n    import { Fragment, apply, onEnter, addEventListener } from '../domitory.js'; const = window.myForm; // form with id myForm. apply({ input: input => { onEnter(input, () => login(input.value), true); apply({ '#loginButton': button => { addEventListener(button, 'click', () => login(input.value)); } }, form); } }, form);\n\n  6. Actribute\n\n    \n    \n    import { actribute } from '../actribute.js'; const fallbackProps = {prop1: 'Fallback', prop4: 'Last resort'}; const {comp, act} = actribute(fallbackProps); act.register('comp1', (node, prop1) => node.textContent = prop1); act.register('comp2', (node, prop2) => node.style.left = prop2); // ... other components. delete act.registry.comp2;\n    \n    \n    <main> <section o-comp1=\"prop1\" o-comp2=\"prop2\" > First section </section> <section o-comp3 o-comp4=\"prop2\" > Second section </section> </main>\n\n## Contributing\n\nIf you like the concept and/or the direction of Eventiveness framework, please\ncontribute to this project. Contribution starts with a simple starring of this\nrepository. Next you can start or join discussions about this project, here or\nanywhere. You can contribute some of your use-cases to the list of examples.\nYou can still help improve the documentation, complete the site, consolidate\nfeatures and fix bugs. There is still a long development journey ahead for\nthis library.\n\nAnother really cool way to contribute is to sponsor the project. You can\nsponsor the project as a 'thank you' or as a way of showing your support for\nthe direction we have chosen and giving Eventivity the best opportunity to\nthrive.\n\nThank you for contributing.\n\n## About\n\nA framework for writing accessible and joyfully interactive web applicationa\nwith traditional HTML, CSS and Javascript\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n1 star\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 5\n\nFifth release Latest\n\nApr 9, 2024\n\n\\+ 4 releases\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * JavaScript 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

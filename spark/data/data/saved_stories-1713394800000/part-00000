{"aid": "40067324", "title": "Write Advanced CSS (Not Just HTML) Now Directly in Go", "url": "https://github.com/chasefleming/elem-go/releases/tag/v0.25.0", "domain": "github.com/chasefleming", "votes": 1, "user": "chasef", "posted_at": "2024-04-17 16:57:24", "comments": 0, "source_title": "Release v0.25.0 \u00b7 chasefleming/elem-go", "source_text": "Release v0.25.0 \u00b7 chasefleming/elem-go \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nchasefleming / elem-go Public\n\n  * Notifications\n  * Fork 22\n  * Star 209\n\n# v0.25.0\n\nLatest\n\nLatest\n\nchasefleming released this 05 Apr 15:54\n\n\u00b7 7 commits to main since this release\n\nv0.25.0\n\n3316c9f\n\n# Introducing StyleManager in elem-go\n\nThe latest addition to the elem-go library is here: the StyleManager. This\npowerful feature enhances the management of CSS styles programmatically with\nadvanced capabilities such as pseudo-classes, animations, and media queries,\ndirectly within the Go programming environment. StyleManager is designed to\nstreamline the creation of dynamic and responsive web applications, empowering\ndevelopers with more control and flexibility over their styling strategies.\n\n## StyleManager Features\n\n  * Pseudo-Class Management: Define and apply styles for hover, active, focus, and other pseudo-classes to your HTML elements with ease.\n  * CSS Animations: Keyframe animations can now be created within Go, bringing web pages to life.\n  * Responsive Design Support: Utilize media queries to adjust styles based on device characteristics, improving mobile responsiveness.\n  * Style Deduplication: Optimizes CSS by merging duplicate styles, reducing file size and enhancing load times.\n  * Type-Safe CSS Properties: The integration of Go's type system reduces style definition errors, ensuring powerful and predictable styles.\n\n## Installation\n\nTo incorporate StyleManager into your projects, make sure to have the latest\nversion of elem-go:\n\n    \n    \n    go get -u github.com/chasefleming/elem-go\n\nThen, import the styles package alongside elem-go in your project:\n\n    \n    \n    import ( \"github.com/chasefleming/elem-go\" \"github.com/chasefleming/elem-go/styles\" )\n\n## Usage Examples\n\n### Creating a StyleManager\n\nInitialize StyleManager to start creating your styles:\n\n    \n    \n    styleMgr := styles.NewStyleManager()\n\n### Defining Styles with Pseudo-Classes\n\nEasily apply dynamic hover effects:\n\n    \n    \n    buttonClass := styleMgr.AddCompositeStyle(styles.CompositeStyle{ Default: styles.Props{ styles.BackgroundColor: \"blue\", styles.Color: \"white\", }, PseudoClasses: map[string]styles.Props{ \"hover\": {styles.BackgroundColor: \"darkblue\"}, }, })\n\n### Implementing CSS Animations\n\nBring elements to life with custom keyframe animations:\n\n    \n    \n    animationName := styleMgr.AddAnimation(styles.Keyframes{ \"0%\": {styles.Opacity: \"0\"}, \"100%\": {styles.Opacity: \"1\"}, }) fadeInClass := styleMgr.AddStyle(styles.Props{ styles.AnimationName: animationName, styles.AnimationDuration: \"2s\", })\n\n### Responsive Design via Media Queries\n\nAdapt your styles to different screen sizes:\n\n    \n    \n    responsiveClass := styleMgr.AddCompositeStyle(styles.CompositeStyle{ Default: styles.Props{styles.Display: \"block\"}, MediaQueries: map[string]styles.Props{ \"@media (max-width: 600px)\": {styles.Display: \"none\"}, }, })\n\n### Integration with elem-go\n\nDirectly integrate your styles with elem-go elements:\n\n    \n    \n    html := elem.Div( attrs.Props{attrs.Class: responsiveClass}, elem.Text(\"Responsive Text\"), ) html.RenderWithOptions(elem.RenderOptions{StyleManager: styleMgr})\n\n## Get Started with StyleManager\n\nExplore the documentation and the example application to see StyleManager in\naction. StyleManager opens new possibilities for elem-go projects by offering\nsophisticated styling that aligns with Go's philosophy of simplicity,\nefficiency, and reliability.\n\nDiscover the dynamic and responsive web applications you can create with\nStyleManager. Happy coding!\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

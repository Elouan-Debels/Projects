{"aid": "40001194", "title": "Pylyzer \u2013 A fast static code analyzer and language server for Python", "url": "https://github.com/mtshiba/pylyzer", "domain": "github.com/mtshiba", "votes": 2, "user": "daremocooon", "posted_at": "2024-04-11 11:57:57", "comments": 0, "source_title": "GitHub - mtshiba/pylyzer: A fast static code analyzer & language server for Python", "source_text": "GitHub - mtshiba/pylyzer: A fast static code analyzer & language server for\nPython\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmtshiba / pylyzer Public\n\n  * Sponsor\n  * Notifications\n  * Fork 21\n  * Star 1.4k\n\nA fast static code analyzer & language server for Python\n\nmtshiba.github.io/pylyzer/\n\n### License\n\nMIT license\n\n1.4k stars 21 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# mtshiba/pylyzer\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n6 Branches\n\n52 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmtshibaupdate deps70c2390 \u00b7\n\n## History\n\n262 Commits  \n  \n### .cargo\n\n|\n\n### .cargo\n\n| Update with dependencies  \n  \n### .github\n\n|\n\n### .github\n\n| build: lower minimum version requirements  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| CI: update scripts  \n  \n### crates/py2erg\n\n|\n\n### crates/py2erg\n\n| update deps  \n  \n### docs\n\n|\n\n### docs\n\n| docs: add mkdocs.yml  \n  \n### extension\n\n|\n\n### extension\n\n| extension: remove CheckOnType option  \n  \n### images\n\n|\n\n### images\n\n| minor fix: logo  \n  \n### src\n\n|\n\n### src\n\n| update deps  \n  \n### tests\n\n|\n\n### tests\n\n| update deps  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| fix: display of file names  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| test: fix stack overflow  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| update deps  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| update deps  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| update deps  \n  \n### cargo_publish.ps1\n\n|\n\n### cargo_publish.ps1\n\n| Update cargo_publish.ps1  \n  \n### cargo_publish.sh\n\n|\n\n### cargo_publish.sh\n\n| Update cargo_publish.sh  \n  \n### mkdocs.yml\n\n|\n\n### mkdocs.yml\n\n| docs: add mkdocs.yml  \n  \n### mkdocs_build.bat\n\n|\n\n### mkdocs_build.bat\n\n| docs: add mkdocs.yml  \n  \n### publish.sh\n\n|\n\n### publish.sh\n\n| Create publish.sh  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| build: lower minimum version requirements  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| Update setup.py  \n  \n## Repository files navigation\n\n# pylyzer \u26a1\n\npylyzer is a static code analyzer / language server for Python, written in\nRust.\n\n## Installation\n\n### pip\n\n    \n    \n    pip install pylyzer\n\n### cargo (rust package manager)\n\n    \n    \n    cargo install pylyzer --locked\n\nWarning\n\nCurrently, the stable version of pylyzer cannot be installed with rustc >=\n1.76.0 due to a dependency problem. Ref: RustPython/Parser#114 You can install\nthe latest version from the source.\n\n### build from source\n\n    \n    \n    git clone https://github.com/mtshiba/pylyzer.git cargo install --path .\n\nMake sure that cargo/rustc is up-to-date, as pylyzer may be written with the\nlatest language features.\n\n### GitHub Releases\n\n## What is the advantage over pylint, pyright, pytype, etc.?\n\n  * Performance \ud83c\udf1f\n\nOn average, pylyzer can inspect Python scripts more than 100 times faster than\npytype and pyright ^1. This is largely due to the fact that pylyzer is\nimplemented in Rust.\n\n  * Detailed analysis \ud83e\ude7a\n\npylyzer can do more than the type checking. For example, it can detect out-of-\nbounds accesses to lists and accesses to nonexistent keys in dicts.\n\n  * Reports readability \ud83d\udcd6\n\nWhile pytype/pyright's error reports are illegible, pylyzer shows where the\nerror occurred and provides clear error messages.\n\n### pylyzer \ud83d\ude03\n\n### pyright \ud83d\ude43\n\n  * Rich LSP support \ud83d\udcdd\n\npylyzer as a language server supports various features, such as completion and\nrenaming (The language server is an adaptation of the Erg Language Server\n(ELS). For more information on the implemented features, please see here).\n\n## VSCode extension\n\nYou can install the VSCode extension from the Marketplace or from the command\nline:\n\n    \n    \n    code --install-extension pylyzer.pylyzer\n\n## What is the difference from Ruff?\n\nRuff, like pylyzer, is a static code analysis tool for Python written in Rust,\nbut Ruff is a linter and pylyzer is a type checker & language server. pylyzer\ndoes not perform linting, and Ruff does not perform type checking.\n\n## How it works\n\npylyzer uses the type checker of the Erg programming language internally. This\nlanguage is a transpiled language that targets Python, and has a static type\nsystem.\n\npylyzer converts Python ASTs to Erg ASTs and passes them to Erg's type\nchecker. It then displays the results with appropriate modifications.\n\n## Limitations\n\n  * pylyzer's type inspector only assumes (potentially) statically typed code, so you cannot check any code uses reflections, such as exec, setattr, etc.\n\n  * pylyzer (= Erg's type system) has its own type declarations for the Python standard APIs. Typing of all APIs is not complete and may result in an error that such an API does not exist.\n\n  * Since pylyzer's type checking is conservative, you may encounter many (possibly false positive) errors. We are working on fixing this, but if you are concerned about editor errors, please turn off the diagnostics feature.\n\n## TODOs\n\n  * type checking\n\n    * variable\n    * operator\n    * function/method\n    * class\n  * type inference\n\n    * variable\n    * operator\n    * function/method\n    * class\n  * builtin modules resolving (partially)\n  * local scripts resolving\n  * local packages resolving\n  * collection types\n\n    * list\n    * dict\n    * tuple\n  * typing\n\n    * Union\n    * Optional\n    * Literal\n    * Callable\n    * TypedDict\n    * type variable (TypeVar, Generic)\n    * Protocol\n    * Final\n    * Annotated\n    * TypeAlias\n    * type guard (TypeGuard)\n    * others\n  * collections.abc\n\n    * Iterable\n    * Iterator\n    * Mapping\n    * Sequence\n    * others\n  * type assertion (typing.cast)\n  * type narrowing (is, isinstance)\n\n^1 The performance test was conducted on MacBook (Early 2016) with 1.1 GHz\nIntel Core m3 processor and 8 GB 1867 MHz LPDDR3 memory.\u21a9\n\n## About\n\nA fast static code analyzer & language server for Python\n\nmtshiba.github.io/pylyzer/\n\n### Topics\n\npython rust language-server static-analysis type-checker\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n1.4k stars\n\n### Watchers\n\n16 watching\n\n### Forks\n\n21 forks\n\nReport repository\n\n## Releases 52\n\nv0.0.51 Latest\n\nDec 12, 2023\n\n\\+ 51 releases\n\n## Sponsor this project\n\nmtshiba Shunsuke Shibayama\n\nSponsor\n\nLearn more about GitHub Sponsors\n\n## Contributors 3\n\n  * mtshiba Shunsuke Shibayama\n  * youknowone Jeong, YunWon\n  * FalkWoldmann\n\n## Languages\n\n  * Rust 87.3%\n  * Python 6.5%\n  * TypeScript 3.9%\n  * JavaScript 1.1%\n  * Shell 0.7%\n  * PowerShell 0.5%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

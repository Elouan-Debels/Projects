{"aid": "40004552", "title": "Nile: SaaS Anywhere on Postgres \u2013 For Speed and Compliance", "url": "https://www.thenile.dev/blog/saas-anywhere", "domain": "thenile.dev", "votes": 3, "user": "code_reader", "posted_at": "2024-04-11 17:20:03", "comments": 0, "source_title": "Introducing: SaaS Anywhere on Postgres - for Speed and Compliance", "source_text": "Introducing: SaaS Anywhere on Postgres - for Speed and Compliance\n\nDocsAbout UsCommunityBlogTemplatesPricing\n\nDocsAbout UsCommunityBlogTemplatesPricing\n\n2024-04-10\n\n\u25cf\n\n3 min read\n\n\u25cf\n\nGwen Shapira\n\n## Introducing: SaaS Anywhere on Postgres - for Speed and Compliance\n\nFrom the very early days of Nile, when we were still drawing ideas on a\nwhiteboard and talking to SaaS companies to understand their journey, we knew\nthat geographical distribution was an important requirement for SaaS\nbusinesses at almost every stage and that managing data across geographies is\na recurring pain point. So we weren't surprised when one of the top requests\nfrom our customers was to make Nile available in additional regions.\n\nWhich is why we are excited to announce that today we are making Nile\navailable in additional regions. We started with us-west-2 (Oregon) and you\nnow have the option to also provision a database in eu-central-1 (Frankfurt).\nWe are planning to add new regions in Singapore, Sydney and US East Coast in\nshort order. Need Nile anywhere else? Let us know. We've built an easy-to-\nexpand control plane architecture, so we can spin up a new region in minutes.\nJust say the word.\n\nThere are a few reasons SaaS companies need their databases in different\nregions, long before they reach global scale:\n\n### Latency\n\nThis is probably a bit too obvious, but if your SaaS is serving mostly\ncustomers in the EU, they will experience much better performance if your\napplication and your database is in the EU as well. For SaaS businesses that\nstart out as regional, this is a \u201cno brainer\u201d. While the idea that bringing\nthe data close to customers reduces latency is obvious, developers often\nunderestimate the impact of 100ms latency in each roundtrip on their\napplication. Often applications make multiple database calls while loading a\nsingle page, and these add up.\n\n### Developer productivity\n\nEven if your customers happen to be near Oregon, your developers may be in\nEurope, or all over the world. Customers aren't the only people who enjoy\nfaster performance with a near-by database, so do developers. And developer\nhappiness is important to the success of your SaaS business. With Serverless\nPostgres, you only pay for used capacity, so there is no reason why you\nshouldn't have a near by database for every developer on your team.\n\n### Compliance\n\nThere are many regions with strict data residency regulations: EU, UK, parts\nof Canada, Japan, Australia... and many more. These regulations make it\ndifficult to store data about citizens of a region outside of that region.\nThere are specific rules about where the data can be stored, how it can be\naccessed, and how users can consent to exceptions. To make things more\ncomplicated, these regulations keep changing and evolving.\n\nThese data residency requirements often catch SaaS startups by surprise. With\nself-serve signup, anyone can sign up to any SaaS product, which means that\nyou don't always know in advance when these laws start applying to your\nbusiness. Having databases in the relevant regions make this a lot simpler and\nsafer.\n\n## Using the new regions\n\nCreating a database in a new region is as simple as selecting it in the\ndropdown when creating the database.\n\nThe database connection string in the existing \"settings\" page will have\neverything you need to connect to the new region.\n\nWhen using Nile SDK in your application, you'll want to use the latest SDK\nversion - 2.4.0 or later. We have significantly simplified the configuration\nyou need to use to connect to Nile. In fact, all you need is your database\ncredentials, and the SDK will automatically find your database - anywhere in\nthe world.\n\nDefine your environment variables:\n\n    \n    \n    # get these values from console.thenile.dev credentials NILEDB_USER= NILEDB_PASSWORD=\n\nAnd Nile will automatically configure itself to connect to the right database\nand API in the right region:\n\n    \n    \n    const nile = await Nile();\n\nYou can find additional explanations and examples in our documentation, or you\ncan watch our video tutorial on how to use Nile SDK with any region:\n\n## What's next?\n\nSign up for our waitlist today to start using Nile - anywhere in the world.\nAnd let us know, where you need Nile next.\n\nPostgres built for modern SaaS\n\nor\n\nCopyright \u00a9 2024 Nile\n\nPrivacy policy|Cookie policy\n\nDocumentationQuick Start\n\nBlog\n\nAboutCareersPricing\n\nContact SalesFAQ\n\nAll Systems Operational \u2197\n\n", "frontpage": false}

{"aid": "39984840", "title": "Local Docker registry caches in GitHub Actions", "url": "https://blacksmith.sh/blog/launching-local-docker-registry-mirrors-in-blacksmith", "domain": "blacksmith.sh", "votes": 3, "user": "aayushshah15", "posted_at": "2024-04-09 22:10:14", "comments": 0, "source_title": "Launch: Local Docker registry mirrors in Blacksmith - Blacksmith", "source_text": "Launch: Local Docker registry mirrors in Blacksmith - Blacksmith\n\nBlacksmith\n\n# Launch: Local Docker registry mirrors in Blacksmith\n\nApr 9, 2024\n\nAayush Shah\n\nWe at Blacksmith have the privilege of observing patterns in thousands of\nGitHub Action workflow jobs a day. Docker image pulls are a ubiquitous part of\nmost CI workloads \u2014 running service containers for integration tests, pulling\ndependencies for Docker builds, all pull images from a Docker registry. In a\ntypical GitHub Action workflow, common service container dependencies like\nPostgres, Redis, MySQL, etc are all directly pulled from Docker Hub over the\ninternet.\n\nThis status quo is not great because we have seen our customers run into a few\nissues:\n\n  * In November 2020, Docker Hub started aggressively rate limiting unauthenticated Docker image pulls to a maximum of 100 every 6 hours. Authenticated but free user accounts were rate limited to 200 pulls every 6 hours. For any reasonably sized engineering org, this is untenable.\n\n  * A Pareto distribution emerges in workflow jobs, where 80% of them depend on the same 20% of Docker images, and hitting Docker Hub over the public internet for every invocation is slow and redundant.\n\nGitHub\u2019s official hosted runners for GitHub Actions have a deal with Docker\nHub where they are not subject to these rate limits (or the rate limits are\nhigh enough that no single user is likely to ever hit them). This was a\nproblem for us at Blacksmith, as we provide managed high-performance runners\nfor GitHub Actions \u2014 we had to ask our bigger customers to authenticate with\nDocker Hub to avoid hitting these rate limits.\n\nToday, we\u2019re launching local Docker registry mirrors across our fleet, which\nact as a \u201cpull through\u201d cache for public Docker images. All Docker pulls on\nBlacksmith are routed through these mirrors and they only need to hit Docker\nHub once, to hydrate the cache. This pull hydrates that particular image into\nthe registry mirror and subsequent pulls, across organizations, are served\nthrough a node-local registry that runs on its own dedicated disk. This means\ncommon image pulls are substantially faster.\n\nThe other main benefit is that CI jobs across an organization will now not be\npulling as frequently from the Docker Hub and will therefore not run into\nDocker Hub\u2019s rate limits. Here are the results:\n\n### Before\n\n### After\n\nThis is all happening transparently for our users, with no code changes. If\nyou\u2019re already a Blacksmith customer, you should see your Docker pulls get\nnoticeably faster. If you\u2019re not, consider this an additional reason to become\none! In addition to way better performance, we can cut your CI spending down\nby 50-75%.\n\nReach out to us at hello@blacksmith.sh for all things GitHub Actions and CI.\n\nBlacksmith\n\nTerms of Service\n\n", "frontpage": false}

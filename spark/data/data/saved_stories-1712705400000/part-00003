{"aid": "39981815", "title": "React Server Components in a Nutshell", "url": "https://thenewstack.io/react-server-components-in-a-nutshell/", "domain": "thenewstack.io", "votes": 1, "user": "sandren", "posted_at": "2024-04-09 17:28:12", "comments": 0, "source_title": "React Server Components in a Nutshell", "source_text": "React Server Components in a Nutshell - The New Stack\n\nTNS\n\nSUBSCRIBE\n\nJoin our community of software engineering leaders and aspirational\ndevelopers. Always stay in-the-know by getting the most important news and\nexclusive content delivered fresh to your inbox to learn more about at-scale\nsoftware development.\n\nREQUIRED\n\nIt seems that you've previously unsubscribed from our newsletter in the past.\nClick the button below to open the re-subscribe form in a new tab. When you're\ndone, simply close that tab and continue with this form to complete your\nsubscription.\n\nThe New Stack does not sell your information or share it with unaffiliated\nthird parties. By continuing, you agree to our Terms of Use and Privacy\nPolicy.\n\nWelcome and thank you for joining The New Stack community!\n\nPlease answer a few simple questions to help us deliver the news and resources\nyou are interested in.\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nGreat to meet you!\n\nTell us a bit about your job so we can cover the topics you find most\nrelevant.\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nWelcome!\n\nWe\u2019re so glad you\u2019re here. You can expect all the best TNS content to arrive\nMonday through Friday to keep you on top of the news and at the top of your\ngame.\n\nWhat\u2019s next?\n\nCheck your inbox for a confirmation email where you can adjust your\npreferences and even join additional groups.\n\nFollow TNS on your favorite social media networks.\n\nBecome a TNS follower on LinkedIn.\n\nCheck out the latest featured and trending stories while you wait for your\nfirst TNS newsletter.\n\nPREV\n\n1 of 2\n\nNEXT\n\nVOXPOP\n\nHow to Optimize AI?\n\nWhich is most important for AI workloads: computational performance, cost or\nportability?\n\n\u2713\n\nComputational performance\n\n0%\n\n\u2713\n\nCost\n\n0%\n\n\u2713\n\nPortability\n\n0%\n\n\u2713\n\nNo preference\n\n0%\n\nThanks for your opinion! Subscribe below to get the final results, published\nexclusively in our TNS Update newsletter:\n\nARCHITECTURE\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nENGINEERING\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nOPERATIONS\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nCHANNELS\n\nPodcasts Ebooks Events Newsletter TNS RSS Feeds\n\nTHE NEW STACK\n\nAbout / Contact Sponsors Sponsorship Contributions\n\nPODCASTS EBOOKS EVENTS NEWSLETTER\n\nARCHITECTURE ENGINEERING OPERATIONS\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nThe Open Source Market\u2019s in Flux. How Can IT Managers Cope?\n\nApr 8th 2024 10:57am, by Joe Fay\n\nUse Podman to Create and Work with Virtual Machines\n\nApr 6th 2024 6:00am, by Jack Wallen\n\nKubeCon EU Q&A: Red Hat Engineer Bethany Griggs on Backstage\n\nApr 5th 2024 1:00pm, by Raghavan Srinivas\n\nGolang Variables and Data Types: An Introduction\n\nApr 4th 2024 2:00pm, by Jack Wallen\n\nGolang 1.22 Redefines the For Loop for Easier Concurrency\n\nApr 4th 2024 1:30pm, by Joab Jackson\n\nUse Podman to Create and Work with Virtual Machines\n\nApr 6th 2024 6:00am, by Jack Wallen\n\nPodman 5 Arrives with Multiplatform Images, VM Support\n\nApr 4th 2024 5:00am, by Jack Wallen\n\nChainguard: Outdated Containers Accumulate Vulnerabilities\n\nMar 29th 2024 3:00am, by Joab Jackson\n\nEvolve Manual and Templated Dockerfiles with Automation\n\nMar 26th 2024 10:33am, by Rak Siva\n\nVirtualization and Containers: Better Together\n\nMar 19th 2024 6:18am, by Alex Handy\n\nThe Future of AI: Hybrid Edge Deployments Are Indispensable\n\nMar 22nd 2024 10:00am, by Luis Ceze\n\nHow RapidAI Uses Edge, Kubernetes and AI to Boost Stroke Care\n\nMar 15th 2024 10:30am, by Charles Humble\n\nTrusted Boot: What to Know About Securing Devices at the Edge\n\nMar 14th 2024 7:15am, by Ettore di Giacinto\n\nArchitecting for Industrial IoT Workloads: A Blueprint\n\nJan 31st 2024 7:34am, by Dunith Danushka\n\nEnabling AI in IoT Apps with a Cloud-to-Edge Database\n\nJan 31st 2024 6:11am, by Mark Gamble\n\nAPI Design Is Pretty Bad \u2014 Here's How to Fix It\n\nApr 3rd 2024 6:01am, by Lebin Cheng\n\nWill Spotify Open Source its Microservices Framework?\n\nApr 2nd 2024 7:45am, by Loraine Lawson\n\nEnhancing Business Security and Compliance with Service Mesh\n\nApr 1st 2024 10:00am, by Ninad Desai\n\n10 Ways Kubernetes Observability Boosts Productivity, Cuts Costs\n\nMar 27th 2024 6:08am, by Eric Schabell\n\nEvolve Manual and Templated Dockerfiles with Automation\n\nMar 26th 2024 10:33am, by Rak Siva\n\nHow Observability Is Different for Web3 Apps\n\nMar 15th 2024 12:00pm, by Sarah Morgan\n\nSimplify Kubernetes Hosted Control Planes with K0smotron\n\nMar 11th 2024 10:00am, by Jussi Nummelin\n\nThe Black Hole That Is the Kubernetes Network\n\nMar 4th 2024 6:30am, by Mitch Connors\n\nNetflix Releases bpftop: An eBPF-Based Application Monitor\n\nFeb 27th 2024 8:53am, by Steven J. Vaughan-Nichols\n\nSamba Network Shares for RHEL-Based Linux Distributions\n\nFeb 25th 2024 6:00am, by Jack Wallen\n\nMeet DBOS: A Database Alternative to Kubernetes\n\nMar 12th 2024 4:00am, by Joab Jackson\n\nPulumi Templates for GenAI Stacks: Pinecone, LangChain First\n\nFeb 21st 2024 9:00am, by Joab Jackson\n\nCNCF CloudEvents: A Li'l Message Envelope That Travels Far\n\nJan 31st 2024 4:00am, by Joab Jackson\n\nBringing the AWS Serverless Strategy to Azure\n\nJan 19th 2024 6:00am, by Rak Siva\n\nServerless Computing In 2024: GenAI Influence, Security, 5G\n\nJan 4th 2024 5:00am, by Chris J. Preimesberger\n\nFrom Postgres to ScyllaDB NoSQL, with a 349x Speed Boost\n\nApr 1st 2024 11:27am, by Cynthia Dunlop\n\nThe Architect\u2019s Guide: A Modern Data Lake Reference Architecture\n\nMar 26th 2024 9:17am, by Keith Pijanowski\n\nCloud Data Migration or Cloud Data Tiering?\n\nMar 25th 2024 10:00am, by Kumar Goswami\n\nKubeCon24: MinIO Object Store Equipped with Enterprise Features\n\nMar 19th 2024 2:00pm, by Joab Jackson\n\nArchitect\u2019s Guide to a Reference Architecture for an AI/ML Data Lake\n\nMar 19th 2024 12:09pm, by Keith Pijanowski\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nPlatform Engineering and GenAI: \u2018Get Your House in Order\u2019\n\nApr 9th 2024 5:00am, by Loraine Lawson\n\n2 Ways AI Assistants Are Changing Kubernetes Troubleshooting\n\nApr 8th 2024 12:00pm, by Blair Rampling\n\nWhen (and How) Will Enterprise GenAI Apps Get Real?\n\nApr 8th 2024 8:21am, by Ed Anuff\n\nWho's Using Ruby on Rails Now and Is It AI Panacea for Devs?\n\nApr 8th 2024 2:00am, by Richard MacManus\n\nSimplifying Chatbot Development for the Information Age\n\nApr 5th 2024 12:00pm, by Asmitha Rathis\n\nWhen (and How) Will Enterprise GenAI Apps Get Real?\n\nApr 8th 2024 8:21am, by Ed Anuff\n\nCode in Context: How AI Can Help Improve Our Documentation\n\nApr 8th 2024 7:12am, by Jon Udell\n\nHow to Run a Local LLM via LocalAI, an Open Source Project\n\nApr 6th 2024 4:00am, by David Eastman\n\nJetBrains Launches AI Code Completion on Local Machines\n\nApr 4th 2024 9:00am, by Loraine Lawson\n\nThe Security Risks of Generative AI Package Hallucinations\n\nApr 4th 2024 8:21am, by Jeffrey Burt\n\nReact Server Components in a Nutshell\n\nApr 9th 2024 7:21am, by Paul Scanlon\n\nWho's Using Ruby on Rails Now and Is It AI Panacea for Devs?\n\nApr 8th 2024 2:00am, by Richard MacManus\n\nSimplifying Chatbot Development for the Information Age\n\nApr 5th 2024 12:00pm, by Asmitha Rathis\n\nJetBrains Launches AI Code Completion on Local Machines\n\nApr 4th 2024 9:00am, by Loraine Lawson\n\nDev News: Deno Supports Open Source Repository JSR and an Offline AI\n\nMar 30th 2024 4:00am, by Loraine Lawson\n\nCode in Context: How AI Can Help Improve Our Documentation\n\nApr 8th 2024 7:12am, by Jon Udell\n\nWho's Using Ruby on Rails Now and Is It AI Panacea for Devs?\n\nApr 8th 2024 2:00am, by Richard MacManus\n\nC# Compiler Lead Jared Parsons on 20 Years at Microsoft\n\nApr 7th 2024 6:00am, by David Cassel\n\nHow to Run a Local LLM via LocalAI, an Open Source Project\n\nApr 6th 2024 4:00am, by David Eastman\n\nIf Dev and Ops Had a Baby \u2014 It Would Be Called Winglang\n\nApr 5th 2024 10:00am, by Elad Ben-Israel\n\nHasura Visualizes Data API Integration into a 'Supergraph'\n\nApr 4th 2024 3:00am, by Joab Jackson\n\nAPI Design Is Pretty Bad \u2014 Here's How to Fix It\n\nApr 3rd 2024 6:01am, by Lebin Cheng\n\nUsing AI for Work: New Open Source Gateway Promises Better Control\n\nMar 28th 2024 7:17am, by Loraine Lawson\n\nDev News: WordPress 6.5, Angular Signals and .NET Components\n\nMar 23rd 2024 4:00am, by Loraine Lawson\n\nThe Economics of API Attacks and How Developers Can Stop Them\n\nMar 12th 2024 8:03am, by Loraine Lawson\n\nWhat Are Python Lambda Functions and How Do You Use Them?\n\nApr 1st 2024 5:00am, by Jack Wallen\n\nHow to Build a RAG-Powered LLM Chat App with ChromaDB and Python\n\nMar 29th 2024 7:03am, by Oladimeji Sowole\n\nNVIDIA Wants More Programming Languages to Support CUDA\n\nMar 28th 2024 10:30am, by Agam Shah\n\nPython's Collection Module for Specialized Data Structures\n\nMar 27th 2024 5:00pm, by Jack Wallen\n\nAlgoKit \u2014 Python Toolkit for Blockchain\n\nMar 27th 2024 7:58am, by Jessica Wachtel\n\nDev News: Deno Supports Open Source Repository JSR and an Offline AI\n\nMar 30th 2024 4:00am, by Loraine Lawson\n\nDev News: WordPress 6.5, Angular Signals and .NET Components\n\nMar 23rd 2024 4:00am, by Loraine Lawson\n\nDev News: Android Apps on Rust, Astro DB, and Storybook 8\n\nMar 16th 2024 4:00am, by Loraine Lawson\n\nFree Tool Helps Web Devs with Google's 'Complex' SEO Update\n\nMar 14th 2024 9:25am, by Loraine Lawson\n\nHow to Build Embed Components with Astro, Qwik and StackBlitz\n\nMar 9th 2024 5:00am, by Paul Scanlon\n\nDev News: Deno Supports Open Source Repository JSR and an Offline AI\n\nMar 30th 2024 4:00am, by Loraine Lawson\n\nAdvanced OOP in TypeScript: Interfaces and Abstract Classes\n\nMar 22nd 2024 10:30am, by Bob Reselman\n\nHow to Get Advantages of TypeScript in JavaScript\n\nOct 27th 2023 10:51am, by Phil Nash\n\nDev News: Udemy's New Docker Program, Plus TypeScript Beta\n\nOct 7th 2023 5:01am, by Loraine Lawson\n\nThe Angular Renaissance: Why Frontend Devs Should Revisit It\n\nSep 26th 2023 8:15am, by Loraine Lawson\n\nWhy WASI Preview 2 Makes WebAssembly Production Ready\n\nApr 5th 2024 6:21am, by Oscar Spencer\n\nKubeCon Europe: WebAssembly, eBPF Are Huge for Cloud Native\n\nMar 29th 2024 8:24am, by B. Cameron Gain\n\nFermyon Says WebAssembly on Kubernetes Is Now Doable\n\nMar 28th 2024 6:19am, by B. Cameron Gain\n\nWhy Wasm Wins Where Java Applets Failed\n\nMar 12th 2024 10:22am, by Liam Crilly\n\nAdobe Developers Use WebAssembly to Improve Users\u2019 Lives\n\nMar 8th 2024 6:49am, by B. Cameron Gain\n\nIf Dev and Ops Had a Baby \u2014 It Would Be Called Winglang\n\nApr 5th 2024 10:00am, by Elad Ben-Israel\n\nLack of Data Mobility Is a Root Cause of Cloud Native Ills\n\nApr 5th 2024 9:17am, by B. Cameron Gain\n\nIT and Climate Change: A Startup Builds for a Greener Future\n\nApr 1st 2024 10:06am, by Heather Joslyn\n\nOVHcloud Unveils Roadmap to Take on Hyperscalers from Europe\n\nMar 29th 2024 6:14am, by B. Cameron Gain\n\nCloud Data Migration or Cloud Data Tiering?\n\nMar 25th 2024 10:00am, by Kumar Goswami\n\nSimplifying Chatbot Development for the Information Age\n\nApr 5th 2024 12:00pm, by Asmitha Rathis\n\nLack of Data Mobility Is a Root Cause of Cloud Native Ills\n\nApr 5th 2024 9:17am, by B. Cameron Gain\n\nGolang Variables and Data Types: An Introduction\n\nApr 4th 2024 2:00pm, by Jack Wallen\n\nHasura Visualizes Data API Integration into a 'Supergraph'\n\nApr 4th 2024 3:00am, by Joab Jackson\n\nHow to Use Data Manipulation Language (DML) in SQL\n\nApr 3rd 2024 11:18am, by Gerald Venzl\n\nShifting Left Is Now Mainstream for Developers, or Is It?\n\nApr 5th 2024 7:13am, by Darryl K. Taft\n\nWhy WASI Preview 2 Makes WebAssembly Production Ready\n\nApr 5th 2024 6:21am, by Oscar Spencer\n\nThe Linux xz Backdoor Episode: An Open Source Mystery\n\nApr 4th 2024 8:40am, by Alex Williams\n\nThe Security Risks of Generative AI Package Hallucinations\n\nApr 4th 2024 8:21am, by Jeffrey Burt\n\nUnzipping the XZ Backdoor and Its Lessons for Open Source\n\nApr 4th 2024 7:08am, by David Melamed\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nPlatform Engineering and GenAI: \u2018Get Your House in Order\u2019\n\nApr 9th 2024 5:00am, by Loraine Lawson\n\nHow Platform Engineering Takes on DevOps Challenges\n\nApr 8th 2024 6:49am, by Kenn Hussey\n\nKubeCon EU Q&A: Red Hat Engineer Bethany Griggs on Backstage\n\nApr 5th 2024 1:00pm, by Raghavan Srinivas\n\nHow Intercom Ships Industry-Leading Developer Experience\n\nApr 4th 2024 12:06pm, by Jennifer Riggins\n\nPlatform Engineering: More Teams Now Running 3 or More IDPs\n\nApr 4th 2024 6:57am, by Lawrence E Hecht and Heather Joslyn\n\n2 Ways AI Assistants Are Changing Kubernetes Troubleshooting\n\nApr 8th 2024 12:00pm, by Blair Rampling\n\nHow to Code First with Design-First Benefits\n\nApr 2nd 2024 7:16am, by Rak Siva\n\nLinux: Migrate the Home Directory to Another Drive\n\nMar 30th 2024 6:00am, by Jack Wallen\n\nInfrastructure as Code Is Dead: Long Live Infrastructure from Code\n\nMar 29th 2024 10:00am, by Asif Awan\n\nWhy Observability Can't Measure What Really Matters\n\nMar 29th 2024 9:16am, by Vicki Walker\n\nDevelopers Want Pragmatic GitOps and Better CD Tools\n\nApr 9th 2024 6:30am, by Steve Fenton\n\nBeyond Git: A New Collaboration Model for AI/ML Development\n\nApr 2nd 2024 10:00am, by Gorkem Ercan\n\nStack Exchange Expands Beyond Q&A Format with 'Discussions'\n\nMar 27th 2024 6:00am, by David Cassel\n\nEvolve Manual and Templated Dockerfiles with Automation\n\nMar 26th 2024 10:33am, by Rak Siva\n\nPlatform and Mobile App Engineering: How They Work Together\n\nMar 22nd 2024 9:00am, by Usman Siddiqui\n\nCan Military Veterans Alleviate Your IT Hiring Woes?\n\nMar 28th 2024 9:20am, by Joe Fay\n\nUsing AI to Improve Bad Business Writing\n\nMar 26th 2024 5:00am, by Jon Udell\n\nDevelopers Share What Helped Them Land New Roles\n\nMar 25th 2024 6:45am, by Jeff James\n\nUS Tech Cannot Comprehend the Digital Nomad Way of Life\n\nMar 23rd 2024 3:00am, by Paul Scanlon\n\nTech Works: How to Identify and Address Burnout on Your Team\n\nMar 22nd 2024 5:00am, by Jennifer Riggins\n\nC# Compiler Lead Jared Parsons on 20 Years at Microsoft\n\nApr 7th 2024 6:00am, by David Cassel\n\nCustomer-Obsessed? 4 Steps to Improve Your Culture\n\nApr 5th 2024 8:21am, by Bharani Manapragada\n\nHow Intercom Ships Industry-Leading Developer Experience\n\nApr 4th 2024 12:06pm, by Jennifer Riggins\n\n4 Steps for Getting Over a DevOps Plateau\n\nApr 4th 2024 5:57am, by Andy Corrigan\n\nBreaking the Big Tech Grip: An AI Playing Field for Everyone\u2019s Benefit\n\nApr 3rd 2024 10:00am, by Tim Davis\n\nDevelopers Want Pragmatic GitOps and Better CD Tools\n\nApr 9th 2024 6:30am, by Steve Fenton\n\nPlatform Engineering and GenAI: \u2018Get Your House in Order\u2019\n\nApr 9th 2024 5:00am, by Loraine Lawson\n\nHow Platform Engineering Takes on DevOps Challenges\n\nApr 8th 2024 6:49am, by Kenn Hussey\n\nWhy Flux Isn\u2019t Dying after Weaveworks\n\nApr 8th 2024 5:00am, by B. Cameron Gain\n\nKubeCon EU Q&A: Red Hat Engineer Bethany Griggs on Backstage\n\nApr 5th 2024 1:00pm, by Raghavan Srinivas\n\n2 Ways AI Assistants Are Changing Kubernetes Troubleshooting\n\nApr 8th 2024 12:00pm, by Blair Rampling\n\nWhy Flux Isn\u2019t Dying after Weaveworks\n\nApr 8th 2024 5:00am, by B. Cameron Gain\n\nLack of Data Mobility Is a Root Cause of Cloud Native Ills\n\nApr 5th 2024 9:17am, by B. Cameron Gain\n\nHow Kubernetes Faces a New Reality with the AI Engineer\n\nApr 4th 2024 6:00am, by Alex Williams\n\nKubecost 2.2 Covers Carbon Cost Monitoring (and More)\n\nApr 2nd 2024 3:00am, by Meredith Shubel\n\nWhy Observability Can't Measure What Really Matters\n\nMar 29th 2024 9:16am, by Vicki Walker\n\nLarge Language Model Observability: The Breakdown\n\nMar 28th 2024 1:46pm, by Alex Williams\n\nWill the Real Test Observability Please Stand up?\n\nMar 27th 2024 7:27am, by Ken Hamric\n\n10 Ways Kubernetes Observability Boosts Productivity, Cuts Costs\n\nMar 27th 2024 6:08am, by Eric Schabell\n\n'Observability' Is Not Observability When It Comes to Business KPIs\n\nMar 26th 2024 10:00am, by Eric Futoran\n\nEnhancing Business Security and Compliance with Service Mesh\n\nApr 1st 2024 10:00am, by Ninad Desai\n\nSome Linkerd Users Must Pay: Fear and Anger Explained\n\nFeb 28th 2024 9:21am, by B. Cameron Gain\n\nBuoyant Revises Release Model for the Linkerd Service Mesh\n\nFeb 21st 2024 9:30am, by Joab Jackson\n\nIstio Advisor Plus GPT: Expert System Meets AI for Service Mesh\n\nDec 14th 2023 12:15pm, by Steven J. Vaughan-Nichols\n\nUsing JWTs to Authenticate Services Unravels API Gateways\n\nNov 8th 2023 6:53am, by Christian Posta and Peter Jausovec\n\n2024-04-09 07:21:44\n\nReact Server Components in a Nutshell\n\ntutorial,\n\nFrontend Development\n\n# React Server Components in a Nutshell\n\nPaul Scanlon uses Waku to show how RSCs give React developers access to\nasynchronous server-side requests and data at the component level.\n\nApr 9th, 2024 7:21am by Paul Scanlon\n\nVOXPOP\n\nTry our new 5 second poll. It's fast. And it's fun!\n\nHow to Optimize AI?\n\nWhich is most important for AI workloads: computational performance, cost or\nportability?\n\nComputational performance\n\nCost\n\nPortability\n\nNo preference\n\nWe'd love to hear what you think.\n\nWoah, there\u2019s been a lot of noise about React Server Components (RSCs) lately\nand, for the most part, after reading all the really smart explanations by the\ninternet\u2019s smartest people, I didn\u2019t really understand anything. But I\u2019ve\nsince spent time experimenting with Waku and now I think RSCs are a lot\nsimpler than I first thought.\n\n## What Is Waku?\n\nWaku (wah-ku) or \u308f\u304f means \u201cframework\u201d in Japanese. As a minimal React\nframework, it\u2019s designed to accelerate the work of developers at startups and\nagencies building small to medium-sized React projects. According to the Waku\nwebsite, these include marketing websites, light ecommerce, and web\napplications.\n\nWhat the introduction from the site is missing, however, is that Waku supports\nReact Server Components \u2014 so if you want to try them out for yourself, you\ndon\u2019t need to use Next.js (which I for one am thankful for). It\u2019s worth\nmentioning though that Waku is currently in rapid development and should only\nbe used in non-production projects.\n\n## React Server Components in a Nutshell\n\nSo here\u2019s my take: RSCs give React developers access to asynchronous server-\nside requests and the resulting data, at the component level.\n\nBefore RSCs, frameworks like Next.js, Gatsby, Remix and Astro would require\nyou to make server-side requests at the route level.\n\nHere are some examples of how you\u2019d achieve that in each framework mentioned\nabove.\n\n## Next.js Route (App Router)\n\nWithin this route, there\u2019s a function called getData which makes an\nasynchronous request to the GitHub API and returns the response, which can\nthen be extracted and made available to the route or page using the getData\nfunction.\n\n// app/page.jsx  \n---  \nimport ParentComponent from '../components/parent-component';  \nconst Page = async () => {  \nconst data = await getData();  \nreturn <ParentComponent data={data} />;  \n};  \nasync function getData() {  \nconst response = await fetch('https://api.github.com/repos/vercel/next.js');  \nconst data = await response.json();  \nreturn data;  \n}  \nexport default Page;  \n  \nview raw page.jsx hosted with \u2764 by GitHub\n\n## Next.js Route (Pages Router)\n\nWithin the route, there\u2019s a function called getServerSideProps which makes an\nasynchronous request to the GitHub API and returns the response back to the\nroute or page via the data prop.\n\n// pages/index.js  \n---  \nimport ParentComponent from '../components/parent-component';  \nconst Page = ({ data }) => {  \nreturn <ParentComponent data={data} />;  \n};  \nexport async function getServerSideProps() {  \nconst response = await fetch('https://api.github.com/repos/vercel/next.js');  \nconst data = await response.json();  \nreturn { props: { data } };  \n}  \nexport default Page;  \n  \nview raw index.js hosted with \u2764 by GitHub\n\n## Gatsby Route\n\nWithin this route, there\u2019s a function called getServerData which makes an\nasynchronous request to the GitHub API and returns the response back to the\nroute or page via the data prop.\n\n// src/pages/index.js  \n---  \nimport ParentComponent from '../components/parent-component';  \nconst Page = ({ data }) => {  \nreturn <ParentComponent data={data} />;  \n};  \nexport async function getServerData() {  \nconst response = await fetch('https://api.github.com/repos/gatsbyjs/gatsby');  \nconst data = await response.json();  \nreturn { props: { data } };  \n}  \nexport default Page;  \n  \nview raw index.js hosted with \u2764 by GitHub\n\n## Remix Route\n\nWithin this route, there\u2019s a function called loader which makes an\nasynchronous request to the GitHub API and returns the response, which can\nthen be extracted and made available to the page using the useLoaderData hook.\n\n// app/routes/_index.jsx  \n---  \nimport { useLoaderData } from '@remix-run/react';  \nimport { json } from '@remix-run/node';  \nimport ParentComponent from '../components/parent-component';  \nconst Page = () => {  \nconst { data } = useLoaderData();  \nreturn <ParentComponent data={data} />;  \n};  \nexport const loader = async () => {  \nconst response = await fetch('https://api.github.com/repos/remix-run/remix');  \nconst data = await response.json();  \nreturn json({  \ndata,  \n});  \n};  \nexport default Page;  \n  \nview raw _index.jsx hosted with \u2764 by GitHub\n\n## Astro Route\n\nWithin this route, an asynchronous request is made to the GitHub API from\nwithin Astro\u2019s special \u201cfrontmatter\u201d fences. The data can then be directly\naccessed by the route or page.\n\n// src/pages/index.astro  \n---  \n\\---  \nconst response = await fetch('https://api.github.com/repos/withastro/astro');  \nconst data = await response.json();  \nimport ParentComponent from '../components/parent-component';  \n\\---  \n<ParentComponent data={data} />;  \n  \nview raw index.astro hosted with \u2764 by GitHub\n\n## Prop Drilling\n\nYou\u2019ll notice that with all of these examples, the data is passed down to a\ncomponent named ParentComponent via a prop named data.\n\nTRENDING STORIES\n\n  1. How to Build a Server-Side React App Using Vite and Express\n  2. 5 Dev Tips to Improve Your Largest Contentful Paint (LCP)\n  3. A Showdown Between Express.js and Fastify Web App Frameworks\n  4. Combining AI with React for a Smarter Frontend\n  5. How to Use Astro with a Sprinkling of React\n\n### ParentComponent\n\nThe ParentComponent might look something like this, where the data is passed\ndown again to another component named ChildComponent.\n\n// components/parent-component.js  \n---  \nimport ChildComponent from './child-component';  \nconst ParentComponent = ({ data }) => {  \nreturn <ChildComponent data={data} />;  \n};  \nexport default ParentComponent;  \n  \nview raw parent-component.js hosted with \u2764 by GitHub\n\n### ChildComponent\n\nFinally, in the ChildComponent is where you\u2019ll perhaps want to do something\nwith this data; and as you can see, the data had to go on a little bit of a\njourney before it reached its destination.\n\n// components/child-component.js  \n---  \nconst ChildComponent = ({ data }) => {  \nreturn <pre>{JSON.stringify(data, null, 2)}</pre>;  \n};  \nexport default ChildComponent;  \n  \nview raw child-component.js hosted with \u2764 by GitHub\n\n## Component Level Data Fetching\n\nAs you\u2019ll probably know, if you were to refactor this application, or move the\nParent or Child component, you\u2019d need to also re-wire the data journey.\n\nIt\u2019s not uncommon that over the life of an application, this will happen, and\ndepending on how complex your application is will determine how far down\nyou\u2019ll need to go before your data reaches its intended destination.\n\nThis is where RSCs can really help. Here\u2019s how I\u2019ve approached this using\nWaku.\n\n## Waku Route\n\nUsing Waku I still have a route, but no data fetching happens at this level.\n\n// src/pages/index.jsx  \n---  \nimport ParentComponent from '../components/parent-component.js';  \nconst Page = async () => {  \nreturn <ParentComponent />;  \n};  \nexport default Page;  \nexport const getConfig = async () => {  \nreturn {  \nrender: 'dynamic',  \n};  \n};  \n  \nview raw index.jsx hosted with \u2764 by GitHub\n\n### Waku ParentComponent\n\nThe ParentComponet still imports and returns the ChildComponent, but there are\nno props and nothing is passed down to the ChildComponent.\n\n// src/components/parent-component.jsx  \n---  \nimport ChildComponent from './child-component.js';  \nconst ParentComponent = () => {  \nreturn <ChildComponent />;  \n};  \nexport default ParentComponent;  \n  \nview raw parent-component.jsx hosted with \u2764 by GitHub\n\n### Waku ChildComponent\n\nAnd here\u2019s the ChildComponent; once again, there\u2019s no data passed down via\nprops. Instead, all the data fetching happens within the component, server-\nside.\n\n// src/components/child-component.tsx  \n---  \nconst ChildComponent = async () => {  \nconst response = await fetch('https://api.github.com/repos/dai-shi/waku');  \nconst data = await response.json();  \nreturn <pre>{JSON.stringify(data, null, 2)}</pre>;  \n};  \nexport default ChildComponent;  \n  \nview raw child-component.jsx hosted with \u2764 by GitHub\n\n## Familiar to Some\n\nThis approach of accessing data at the component level might feel familiar to\nsome. It does to me because I was an avid Gatsby user.\n\n### Gatsby\u2019s useStaticQuery hook\n\nIn February 2019 Gatsby introduced the useStaticQuery hook, and whilst the\nmethod for fetching data is vastly different (I\u2019m not trying to compare this\nto RSCs) the theory is kind of similar, and here\u2019s why.\n\n// src/components/child-component.js  \n---  \nimport { useStaticQuery, graphql } from 'gatsby';  \nconst ChildComponent = () => {  \nconst data = useStaticQuery(graphql`  \nquery {  \ngithub {  \nid  \nowner {  \nlogin  \nurl  \n}  \ndescription  \n}  \n}  \n`);  \nreturn <pre>{JSON.stringify(data, null, 2)}</pre>;  \n};  \nexport default ChildComponent;  \n  \nview raw child-component.js hosted with \u2764 by GitHub\n\nIn Gatsby you were never fetching data using GraphQL (a common\nmisunderstanding); instead, you were querying it. The fetching of data\nhappened at build time, but with the useStaticQuery hook you were able to\naccess the data from any component, at any level, without needing to pass it\naround via props.\n\nWith RSCs the data fetching happens at runtime, so while the method for\nfetching data is different between RSCs and Gatsby\u2019s useStaticQuery hook,\nthere is something to be said for the architectural choices you could make\nwhen you were able to access the data from within any component.\n\n## Data Fetching Requires Thought\n\nHowever, with RSCs you will still have to think about in which scenarios it\nmakes sense to perform component-level data fetching, versus route-level data\nfetching.\n\nOn one hand yes, it is convenient to fetch and have access to data right there\nin the component where it\u2019s needed; but on the other hand, if you have several\ncomponents all on the same route that are fetching data independently, would\nthis have a negative impact on performance?\n\nIn some cases, it might still make sense to make a single route-level request\nand pass the resulting data down via props to the components that need it,\nrather than multiple component-level data requests. It\u2019s worth mentioning here\nthat employing sensible caching strategies would likely limit the impact of\nmultiple component-level data requests.\n\n## Final Thoughts\n\nRSCs, in my opinion, are just another option that\u2019s available to you when\nbuilding data-intensive React applications. I don\u2019t think they will solve\nevery use case, nor are they intended to. In many cases, they probably won\u2019t\nbe the right choice, but that\u2019s ok.\n\nAs every developer will have said about any given approach many times in their\ncareer, it depends.\n\nI know from my experience with Gatsby that there are advantages to having data\neasily accessible from within a component. It can really help with\nunderstanding what an application is doing because the logic, data, and the\nresulting user interface elements are neatly co-located in the same file, and\nwhen compared to chasing down props and attempting to follow the data journey,\nthe developer experience is often better.\n\nTo conclude, I really like RSCs and I think in time we\u2019ll all discover best\npractices and things to watch out for when developing. But for now, I think\nthey\u2019re a super cool step forward and I look forward to experimenting further.\nIf you\u2019re interested in experimenting with RSCs yourself, give Waku a try.\n\nPaul is a Senior Software Engineer, Independent Developer Advocate and\nTechnical Writer. More from Paul can be found on his site, paulie.dev.\n\nRead more from Paul Scanlon\n\nSHARE THIS STORY\n\nTRENDING STORIES\n\n  1. How to Build a Server-Side React App Using Vite and Express\n  2. 5 Dev Tips to Improve Your Largest Contentful Paint (LCP)\n  3. A Showdown Between Express.js and Fastify Web App Frameworks\n  4. Combining AI with React for a Smarter Frontend\n  5. How to Use Astro with a Sprinkling of React\n\nSHARE THIS STORY\n\nTRENDING STORIES\n\n  1. How to Build a Server-Side React App Using Vite and Express\n  2. 5 Dev Tips to Improve Your Largest Contentful Paint (LCP)\n  3. A Showdown Between Express.js and Fastify Web App Frameworks\n  4. Combining AI with React for a Smarter Frontend\n  5. How to Use Astro with a Sprinkling of React\n\nInsights From Our Sponsors\n\nTraditional Observability vs. Experience-Centric Observability: Refocusing on\nthe Customer\n\n2 April 2024\n\nOn Demand Webinar: 5 Strategies to Escape the Observability Money Pit and\nBoost User Experience\n\n12 March 2024\n\nOn-Demand Webinar: Solving Cloud-Native Complexity with AIOps for\nObservability\n\n11 March 2024\n\nThe \u201cBig 5\u201d of Azure Infrastructure Optimization\n\n8 April 2024\n\nEmpowering organizations with reliable continuous delivery for Kubernetes\napplications\n\n3 April 2024\n\nFresh from Paris: Platform engineering wisdom from KubeCon\n\n2 April 2024\n\nEvent Catalog: The Tool To Optimize Your Event-Driven Architecture\n\n28 March 2024\n\nMastering Composable Architecture: A Technical Guide for Retail Success\n\n29 February 2024\n\nA Technical Approach to Micro-frontend Orchestration\n\n20 February 2024\n\nTNS DAILY NEWSLETTER Receive a free roundup of the most recent TNS articles in\nyour inbox each day.\n\nThe New Stack does not sell your information or share it with unaffiliated\nthird parties. By continuing, you agree to our Terms of Use and Privacy\nPolicy.\n\nARCHITECTURE\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nENGINEERING\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nOPERATIONS\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nCHANNELS\n\nPodcasts Ebooks Events Newsletter TNS RSS Feeds\n\nTHE NEW STACK\n\nAbout / Contact Sponsors Sponsorship Contributions\n\nroadmap.sh\n\nCommunity created roadmaps, articles, resources and journeys for developers to\nhelp you choose your path and grow in your career.\n\nFrontend Developer Roadmap Backend Developer Roadmap Devops Roadmap\n\n\u00a9 The New Stack 2024\n\nDisclosures Terms of Use Advertising Terms & Conditions Privacy Policy Cookie\nPolicy\n\nFOLLOW TNS\n\nFOLLOW TNS\n\nTNS DAILY\n\nSome TNS posts require third-party cookies to view embedded content (video,\naudio, technical & interactive content).\n\nBy clicking \u201cAccept\u201d you agree to our use of these cookies in accordance with\nour Cookie Notice.\n\nCookie Policy\n\n## The New Stack's Cookies Usage\n\nWhen you visit, the website may store or retrieve information on your browser,\nmostly in the form of cookies. This information might be about you, your\npreferences or your device, but does not usually directly identify you. The\ninformation is mostly used to make the website display the embedded content\nyou expect to see and work the way you expect it to. Cookie Policy\n\n### Manage Consent Preferences\n\n#### Strictly Necessary Cookies\n\nAlways Active\n\nThese cookies are necessary for the website to function and cannot be switched\noff in our systems. They are usually only set in response to actions made by\nyou which amount to a request for services, such as setting your privacy\npreferences, logging in or filling in forms. You can set your browser to block\nor alert you about these cookies, but some parts of the site will not then\nwork. These cookies do not store any personally identifiable information.\n\n#### Functional Cookies\n\nThese cookies enable the website to provide enhanced functionality and\npersonalisation. They may be set by us or by third party providers whose\nservices we have added to our pages. If you do not allow these cookies then\nsome or all of these services may not function properly.\n\n#### Performance Cookies\n\nThese cookies allow us to count visits and traffic sources so we can measure\nand improve the performance of our site. They help us to know which pages are\nthe most and least popular and see how visitors move around the site. All\ninformation these cookies collect is aggregated and therefore anonymous. If\nyou do not allow these cookies we will not know when you have visited our\nsite, and will not be able to monitor its performance.\n\n#### Targeting Cookies\n\nThese cookies may be set through our site by our advertising partners. They\nmay be used by those companies to build a profile of your interests and show\nyou relevant adverts on other sites. If you do not allow these cookies, you\nwill experience less targeted advertising.\n\n### Vendors List\n\nlabel\n\nConsent Leg.Interest\n\nlabel\n\nlabel\n\nlabel\n\n", "frontpage": false}

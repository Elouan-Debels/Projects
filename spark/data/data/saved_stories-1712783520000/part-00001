{"aid": "39991579", "title": "Masking PII with Stateful Service Composition on Fluvio Streams", "url": "https://infinyon.com/blog/2024/04/mask-pii-stateful-streaming/", "domain": "infinyon.com", "votes": 1, "user": "debadyutirc", "posted_at": "2024-04-10 15:10:03", "comments": 0, "source_title": "Masking PII with Stateful Service Composition", "source_text": "Masking PII with Stateful Service Composition\n\nStateful Services (private release) Build composable event-driven data\npipelines in minutes.\n\nRequest access \u2192\n\nInfinyOn\n\nUse Cases\n\nClickstream Analytics IoT Mirroring Stateful Streaming\n\nDocumentation\n\nDocs\n\nBlog Articles\n\nBlog\n\nResources\n\nAbout Careers Press Articles Webinars Videos\n\n# Masking PII with Stateful Service Composition\n\nDeb RoyChowdhury\n\nContributor, InfinyOn\n\n##### SHARE ON\n\n## Masking PII with Stateful Service Composition\n\n  * Introduction\n  * Data privacy use case\n  * Stateful data flow to mask PII\n  * Conclusion\n\n## Introduction\n\nData privacy is a growing concern among individuals. More and more digital\ncitizens are concerned about how businesses use their data. Naturally most\nbusinesses are careful to protect their data and to ensure that it is only\nused for the purpose for which it was collected.\n\nIn this blog, we will demonstrate how to use Stateful Streaming Service\nComposition to mask personally identifiable information (PII) in a streaming\ndata pipeline.\n\n## Data governance use case\n\nBusinesses collect personally identifiable information (PII) like name, email,\naddress, and social security numbers from customers.\n\nBusinesses protect the data by tagging private information, encryption, data\nretention, and data deletion. Masking PII is a basic aspect of a reliable data\ngovernance strategy.\n\nThe goal is to prevent exposing users\u2019 private information externally. PII\nmasking is a critical and ubiquitous need due to the billions of consumers\nusing digital services daily.\n\n## Stateful data flow to mask PII\n\nTypically PII is a part of user interactions and events. For example, on\ninternet websites and mobile apps, users also use PII to identify themselves.\nWhen they interact with government services, tax, insurance, healthcare etc.,\nthey transmit personally identifiable information(PII) as part of on-line\napplications.\n\nTypically the raw data is stored in restricted servers or databases. Workflows\nwith the required access processes the raw data in batches and create\nstandardized datasets. Processing the events in a streaming data flow is a\nneat way to make the workflow easier to manage.\n\nThe data processing to mask PII commonly involves a combination of regex,\nstring manipulation, and encryption. In a streaming data flow, we can use\nStateful Streaming Service Composition to implement this functionality. This\nway the raw stream of data with PII can be processed and masked in a single\npass.\n\nHere the data flow in action. The raw stream of data with PII is received from\nuser-info topic. The data is processed in a stateful service mask-ssn-service\nand the output is sent to masked topic.\n\n### 1\\. Run the Dataflow on SSDK\n\nSSDK looks for the dataflow.yaml in the local directory to run:\n\nHere is the dataflow.yaml file:\n\n    \n    \n    apiVersion: 0.4.0 meta: name: mask-user-info version: 0.1.0 namespace: example imports: - pkg: example/mask-ssn-pkg@0.1.0 path: ../_packages/mask-ssn-pkg functions: - name: mask-ssn config: converter: raw topics: user-info: schema: value: type: string masked: schema: value: type: string services: mask-ssn-service: sources: - type: topic id: user-info transforms: - operator: map uses: mask-ssn sinks: - type: topic id: masked # Development only, it does not get published to hub dev: imports: - pkg: example/mask-ssn-pkg@0.1.0 path: ../_packages/mask-ssn-pkg\n\nIn the dataflow.yaml we simply describe the dataflow by listing the topics,\nservices, and the functions.\n\nThe mask-ssn-service is a stateful service that uses the mask-ssn function\nfrom the mask-ssn-pkg package that has been built and tested independently.\n\nThe mask-ssn function uses regex to mask the SSN. We can run the service with\na single command that builds and runs the dataflow:\n\n    \n    \n    ssdk run\n\n### 2\\. Test data flow\n\nWe test the data flow with a few records and see how the data is processed.\n\nProduce a few records to the user-info topic:\n\n    \n    \n    fluvio produce user-info > {\"name\":\"alice\",\"ssn\":\"123-45-6789\"} Ok! > {\"name\":\"bob\",\"ssn\":\"987-65-4321\"} Ok!\n\nConsume from masked topic:\n\n    \n    \n    fluvio consume masked -Bd {\"name\":\"alice\",\"ssn\":\"***-**-****\"} {\"name\":\"bob\",\"ssn\":\"***-**-****\"}\n\n### 3\\. Check service statistics\n\nWe use show state command in service runtime to display statistics:\n\n    \n    \n    >> show state mask-ssn-service/mask-ssn/metrics --table Key Window succeeded failed stats * 2 0\n    \n    \n    >> show state mask-ssn-service/mask-ssn/metrics --table Key Window succeeded failed stats * 2 0\n\n## Conclusion\n\nJust like that in a few simple steps we were able to mask PII in a streaming\ndata pipeline. Stateful Streaming Service Composition is a powerful tool that\ncan be used to build complex data flows.\n\nThe workflow to build the function package is simple and straightforward.\nDevelopers can publish end to end data flows, functions, schemas, and types on\nInfinyOn Hub and reuse in other similar data flows.\n\nIf you\u2019d like to explore how you can implement stateful streaming data flows\nSetup a 1:1 call with me.\n\n#### Connect with us:\n\nYou can contact us through Github Discussions or our Discord if you have any\nquestions or comments, we welcome your insights on stateful services\n\nSubscribe to our YouTube channel\n\nFollow us on Twitter\n\nFollow us on LinkedIn\n\n## SHARE ON\n\n## AUTHOR\n\nDeb RoyChowdhury\n\nContributor, InfinyOn\n\n## FLUVIO OSS\n\n## INFINYON CLOUD\n\n### Accelerated Onboarding\n\n##### Sign-up for personalized assistance from dedicated InfinyOn architect.\n\n##### Free $3000\n\n###### 2000 credits\n\n## Footer\n\nGitHub Twitter linkedin discord YouTube\n\n### Cloud\n\n  * InfinyOn Cloud\n  * Sign Up\n  * Login\n\n### Product\n\n  * InfinyOn Platform\n  * InfinyOn Hub\n  * Connectors\n  * Webhooks\n  * SmartModules\n  * Event Streams\n  * Stateful Streams\n\n### Solutions\n\n  * IoT Aggregation\n  * Website Monitoring\n  * Microservices Event Bridge\n\n### About\n\n  * Company\n  * Careers\n  * Articles\n  * News\n  * Webinars\n  * Videos\n  * Blog\n\nPrivacy Policy | Security | Terms and Conditions | Cookie Notice\n\n\u00a9 2024 InfinyOn, Inc. All rights reserved.\n\n", "frontpage": false}

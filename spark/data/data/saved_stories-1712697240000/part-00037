{"aid": "39978704", "title": "Show HN: Rx, the Deploy-as-you-save client for the cloud", "url": "https://rx.run", "domain": "rx.run", "votes": 1, "user": "khalidx", "posted_at": "2024-04-09 12:30:11", "comments": 0, "source_title": "rx.run - Deploy-as-you-save client for the cloud", "source_text": "rx.run - Deploy-as-you-save client for the cloud\n\n# Deploy-as-you-save client for the cloud\n\nrx is a lightweight CLI and runtime that lets you deploy any function\ninstantly as you save it in your editor. It\u2019s fast, simple, and takes care of\nsetting up all your cloud infrastructure.\n\nBrought to you by Khalid Zoabi\n\nJun 14, 2023\n\nJun 14, 2023\n\n## Introducing rx\n\nTired of all the scaffolding and roles, buckets, tables, auth, payments, and\neverything else you have to set up every time you start a new project? rx is\nhere for you.\n\nIntroducing rx, a cloud client for getting stuff done. It makes it really easy\nto deploy any TypeScript function to the cloud. You just have to write some\ncode, hit Cmd + S to save in your editor, and your changes are deployed\nautomatically. It redeploys every time you save, usually in under 5 seconds,\nso your changes are live instantly. It has a bunch of stuff built-in and\nnothing to configure. It's just plain functions.\n\nUse the power of the cloud without any new concepts to learn. By the time you\nscroll to the bottom of this document, you'll be an rx expert.\n\n\ud83d\udd25 Bottomless storage \ud83d\udd25 Bottomless secrets storage \ud83d\udd25 Bottomless logs \ud83d\udd25 Free\nauth\n\n### Write functions in TypeScript\n\n    \n    \n    export async function sayHello () { return 'Hello there!' }\n\n### Automatically deploy to the cloud as you save\n\n    \n    \n    rx dev\n\n### Create environments with a single command\n\n    \n    \n    rx deploy prod\n\n### Use virtually infinite secrets, object, and blob storage\n\n    \n    \n    const user = context.storage.get('some-user-id-key') const apiKey = context.secrets.get('some-api-key')\n\n### Each function has access to a powerful context object\n\n    \n    \n    context.auth context.functions context.payments context.request context.secrets context.send context.storage\n\n### Call any user's public functions\n\n    \n    \n    const response = context.call({ user: '@someUser', function: 'doStuff' })\n\n### Lookup data from any other user or function's storage\n\n    \n    \n    const user = context.storage.get({ user: '@someUser', function: 'doStuff', key: 'some-user-id-key' })\n\n### Send email and SMS notifications to yourself\n\n    \n    \n    context.email('That was easy!') context.sms('Hey, this is an important alert!')\n\n### Auth is finally easy\n\n    \n    \n    export function doStuff (context: Context) { if (context.hasRole('admin')) { return 'Hey admin!' } if (context.isAnonymous()) { return 'Hey, you might want to sign in for more features!' } return 'Hey user!' }\n\n### Payments, and more, all built right in\n\n    \n    \n    const link = context.payments.createCheckoutLink({ product: { name: 'Fur coat', price: '$249.99' }, discount: { percent: 20 }, link: { expiresIn: '30 minutes' } })\n\n### Coming soon\n\n\u2728 No cold starts \u2728 Scheduled cron jobs \u2728 Deploy in your own cloud account\n(AWS, GCP, Azure, DigitalOcean, Fly, Docker) \u2728 Browse all data in a nice\nspreadsheet-like GUI \u2728 Typed remote function calls \u2728 Share functions publicly\n\u2728 Import packages from any language\n\n### Beta access\n\nExcited to try this out and want to get started right away?\n\nDrop your email to get added to the beta. When accepted, you'll receive an API\nkey and instructions via email.\n\n", "frontpage": false}

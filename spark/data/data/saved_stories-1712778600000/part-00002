{"aid": "39990706", "title": "How Not to Interview Engineers", "url": "https://mutahhir.dev/blog/bad-interviews/", "domain": "mutahhir.dev", "votes": 1, "user": "mutahhir", "posted_at": "2024-04-10 13:48:32", "comments": 0, "source_title": "How to run a bad interview loop for engineers", "source_text": "How to run a bad interview loop for engineers\n\n## mutahhir.dev\n\n# How to run a bad interview loop for engineers\n\nJul 6, 2023\n\nI have a little over two decades as a full stack software engineer. During\nthat time, I\u2019ve held multiple positions of varying seniority as a software\nengineer.\n\nEach job I got, I\u2019ve been asked to do this thing called an \u2018interview loop\u2019.\nNot as much fun as a roller coaster, but your heart rate goes up all the same.\n\nFunny story, I once interviewed even when I didn\u2019t want a job. Just wanted to\nmove to a different team.\n\nAll that just to say, I\u2019ve been interviewed quite a lot. I\u2019ve also interviewed\nquite a few candidates too. So, I feel like I have the qualifications to write\nabout bad interviews.\n\nI\u2019ve sat through bad interviews, and good interviews. Some interviews were\nbad, because I wasn\u2019t doing well. Others were bad because the interviewer was\nbad. Still others where the interview itself was bad.\n\nThe worst interview I recall was when the interviewer became visibly annoyed\nby my apparently inadequate answers. To a question that was hypothetical.\nSomething like: \u2018how would you roll out a risky release to a large\norganization?\u2019 I instantly questioned all my life choices that led me there,\nand promptly rolled back the release.\n\nThe interviewer\u2019s body language matters a lot in interviews. They might think\nthat it would be deceitful to put up a fake smile. And they\u2019d be right\nusually. But! The interviewer is not there to build a relationship with the\ncandidate. It\u2019s to answer the question: \u2018Should we hire this candidate?\u2019\n\nIn the first couple of minutes the candidate makes up their mind by the\ninterviewer\u2019s demeanor. They know whether they want to be in this room or not.\nTheir stress levels skyrocket, and an already uncomfortable situation is now\nagonizing. Any chance the interviwer had to get data from the candidate has\nnow been tainted. The whole reason the interviewer is sitting there is to\ncollect data about the candidate. Data? Yep, data.\n\nProbably the most important thing I\u2019ve learnt over years of being an\ninterviewer is: The interviwer is there to collect data about the candidate.\nIt might seem odd to reduce a complex human being to data. The alternative is\nworse. It\u2019s worse to have an \u2018intuition about the candidate\u2019. That the\ninterviewer goes by \u2018feel\u2019. That introduces all kinds of biases into the\ninterview, and the team ends up hiring the person they like. Not the person\nwho is most likely to succeed at the role.\n\nI once applied for a position at a company whose product I really liked. I\nwanted to work on that product. It was just so cool, and I was so excited. The\ninterview started, and we introduced ourselves. It was comfortable, the\ninterviewers seemed nice, I was confident. I traditionally do pretty well with\ncoding challenges. Then the problem was presented. It was fairly challenging,\nbut doable; I eventually solved the problem \ud83c\udf89.\n\nThen things got a bit confusing. They didn\u2019t like the solution, they ask if I\ncan improve on it. It works, they say, but it\u2019s not performant enough. No\nproblem, I ask questions about what they want, and they give me some hints. I\nask them why they would like me to do this during the interview. They say it\u2019s\nbecause they\u2019re trying to find candidates that can handle complex problems.\nAnd solve them in a performant fashion. That\u2019s just how daily life is like in\nthe company.\n\nNo problem, I think. I ask questions about what they want, and they give me\nsome hints. Problem is, that I\u2019ve used up most of my time to solve the\nproblem. And it\u2019s a decent solution. There\u2019s definitely a faster solution out\nthere, but this one\u2019s not bad for 20 minutes of work. Coding under scrutiny\nonly exists during these coding loops.\n\nI start thinking, but the answer is going to require me to do it all over\nagain. And even then, I don\u2019t know if the idea will work. I\u2019m also running out\nof time. I\u2019m starting to get a bit stressed, and frustrated.\n\nAfter tearing down the existing solution, and furiously trying to figure out\nthe performant answer, my worst fear is starting to realize. I\u2019m not going to\ndo well on the interview. On the contrary, I\u2019m bombing it.\n\nWe all see the writing on the wall as time starts to run out. I\u2019m stressed,\nembarrassed, and feeling quite dumb. I give an overview about the approach I\nwas taking; Not confident that it would actually solve the problem.\n\nThen they hand over the mic to me, and allow me to ask questions. I ask them\nwhat was the most complex problem they\u2019re solving right now. There were two\nengineers interviewing me. I asked them both separately. I wanted to know what\nthe day to day life was like for this company that I obviously wasn\u2019t going to\nget employed at.\n\nFirst engineer: We\u2019re currently moving from a monolithic architecture to\nmicroservices. Second engineer: I\u2019m between projects, just doing some bug\nfixing.\n\nWell, that was a bit of a let down. Even an algorithmically challenged\nengineer like me could do that. More importantly, why did they want me to\nsolve that problem in that way, then? I thought.\n\nThe best tool to not fall into this interviewing trap, is to ask the following\nquestion: \u2018Can this candidate succeed in the role they\u2019re applying for?\u2019 In\nthe case of my interview, I think my poorly performing solution gave them a\ngood enough idea that I can code. From a coding \u2014 and migration to\nmicroservices stand-point \u2014 that should have been enough data.\n\nSome companies tailor their engineering interviews to find engineers that can\nspit out complex, niche algorithms at the drop of a hat. I don\u2019t see the point\nof that. In my decades long engineering experience, I have never encountered a\nsituation where any engineer had to come up with a complex algorithm in 45\nminutes. So, why are hiring loops like that then? Because someone thought that\ncoding is problem solving, and thus the engineers that can solve the hardest\nproblems are the best engineers?\n\nWhich is probably true. I\u2019m a mediocre engineer at best, I admit.\nUnfortunately, though, modern software engineering is more than coding.\nEngineering is working together with other engineers to solve a big problem.\nEngineering is communicating effectively. Engineering is understanding what\nkind of product to build. There are parts of it where you need that spark of\nbrilliance. But those things are hard, and they take time. Seldom does a\nquestion comes up that requires a nlogn solution to find the smallest three\nnumbers in a 10 Terabyte array.\n\n\u00a9 2024 Mutahhir. All rights reserved.\n\n", "frontpage": false}

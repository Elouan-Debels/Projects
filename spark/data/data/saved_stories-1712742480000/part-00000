{"aid": "39986754", "title": "Fluxzy Desktop: cross-platform HTTP debugger without time, feature restrictions", "url": "https://www.fluxzy.io/resources/blogs/fluxzy-desktop-cross-platform-http-debugger", "domain": "fluxzy.io", "votes": 1, "user": "thunderbong", "posted_at": "2024-04-10 03:46:39", "comments": 0, "source_title": "Fluxzy Desktop: A modern HTTP debugger", "source_text": "Fluxzy Desktop: A modern HTTP debugger\n\n# Finally, a cross-platform HTTP debugger without time and feature\nrestrictions\n\nThe world of HTTP debugger is filled with paid tools.\n\nYou've probably need to use at some point software like Fiddler, Charles,\nBurp, etc. Theses tools are great and may have some advantages and drawbacks\nin some ways but they share one thing in common: you must pay at some point to\naccess all features or to be able to use it on a different platforms/OS.\n\nWe built Fluxzy Desktop to be forever free, unlimited, and fully-featured for\nindie devs and individuals. Unlike several HTTP debuggers, Fluxzy provides all\noffline Fluxzy features included in the Community Edition without any time\nlimitation.\n\nFeatures like breakpoints, live editing, mocking (in every way) load and\nrecord traffic, and more are usually only available in paid versions of other\ntools and available for free in Fluxzy Desktop with a first-class\naccessibility.\n\nActually Fluxzy Desktop is build upon the Fluxzy.Core library, which is\ncompletely open-source, and includes exhaustively all the necessary all\noffline features used by the desktop application.\n\n## So what make this software different?\n\nThere are a few original ideas that is embedded in Fluxzy Desktop we didn't\nfind in other tools. If you are too lazy to browse this website, here's is a\nquick overview of what makes Fluxzy Desktop different from other tools:\n\n### Out-of-the-box PCAP support\n\nFluxzy provides a very simple way to capture raw packets alongside HTTP data\nin a deciphered format across any platform in a consistent way.\n\nPCAP data are a must-have to diagnose network-related issues; however, it's\nnot enough for application layer developers as getting simple information like\na URL path is quite hard when TLS is on. Fluxzy combines the best of both\nworlds and offers it in two ways: the fluxzy archive, which contains both HTTP\nlevel data and raw packets. PCAPNG file can be extracted from this archive and\ncontains only the transport related packets without any noise.\n\nAdditionally, if you choose to use the Bouncy Castle SSL Engine during the\ncapture session, decryption keys are automatically saved within the PCAPNG\nfile, allowing you view the TLS traffic in plain with Wireshark with no\nadditional configuration.\n\n### Declarative traffic alteration\n\nMost tools will provide you a scripting language (usually js) to apply custom\ntraffic alteration. It's fine but it requires you to write code to apply\ntraffic modification. Moreover, it's significantly slower because the script\nhas to be interpreted at runtime.\n\nWith Fluxzy, traffic alteration and manipulation can be done purely with a\nsimple UI. The resulting configuration can be exported later to a YAML file\nand used with the CLI, the docker image, or the .NET library.\n\nThere are already several dozen of custom directives you can use from adding\nsimple headers to complex rules like injecting <script/> on processing HTML\npages.\n\nFor example, the following YAML config will make any html page background red:\n\n    \n    \n    rules: - filter: typeKind: AnyFilter actions: - typeKind: InjectHtmlTagAction tag: head htmlContent: '<style>body { background-color: red !important; }</style>' restrictToHtml: true\n\n### Designed for observability\n\nFluxzy was designed to be the least intrusive as possible and deliver the\nsmoothest synthetic monitoring experience. We have ensured that the core\npipeline process and any built-in directives are fully streamed to produce\nminimal latency and to guarantee predictable memory usage regardless of the\ntraffic volume.\n\nMoreover, we brought performance insight to Fluxzy Desktop to help you quickly\nisolate exchanges having performance bottlenecks and get statistics on\nexchanges by latency, size, and more.\n\n## Is this tool Open Source?\n\nThe core library containing all debugging features (include breakpoints) is\nalready open-source. The front UI just wraps the core library to deliver UI\nExperience for desktop users.\n\n## Give it a try\n\nFluxzy is under constant development, with new features and improvements being\nadded weekly. We strive to keep Fluxzy evolving to meet the dynamic needs of\nthe developer community. We are always open to feedback and suggestions, so\nfeel free to reach out to us with your ideas.\n\nIn this page\n\n  * So what make this software different?\n    * Out-of-the-box PCAP support\n    * Declarative traffic alteration\n    * Designed for observability\n  * Is this tool Open Source?\n  * Give it a try\n\nView all articles\n\n#### Fluxzy\n\n  * Downloads\n  * Pricing\n  * Pricing FAQ\n  * Features\n  * News\n\n#### Resources\n\n  * Getting started\n  * CLI documentation\n  * .NET API reference\n\n#### Legal\n\n  * Privacy\n  * Cookie policy\n  * Terms of Use\n  * Fluxzy Desktop License\n  * Fluxzy Core License\n\n#### The team\n\n  * Contact us\n  * About us\n  * Declare an issue\n  * Github\n\n\ud83c\udf6a Cookie usage\n\nWe're baking some digital cookies on this site to sweeten your browsing! By\ndefault, you're getting the whole batch, but if you're on a 'data diet', feel\nfree to decline!\n\nOK Decline\n\n", "frontpage": false}

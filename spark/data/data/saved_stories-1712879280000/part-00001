{"aid": "40004814", "title": "Hands-off eclipse photography with Ruby and gphoto", "url": "https://yboulkaid.com/2024/04/10/eclipse.html", "domain": "yboulkaid.com", "votes": 1, "user": "yboulkaid", "posted_at": "2024-04-11 17:46:50", "comments": 0, "source_title": "Hands-off eclipse photography with ruby and gphoto", "source_text": "Hands-off eclipse photography with ruby and gphoto | Rubber Ducky\n\n# Hands-off eclipse photography with ruby and gphoto\n\nApril 10, 2024 \u00b7 5 mins read\n\nFor the 2024 eclipse, my wife and I decided to make the trip from Stockholm to\nTexas to get a chance to see it.\n\nBeing a photographer, I also wanted to try my hand at shooting the event. At\nthe same time, I knew that totality would only last for about 3.5 minutes and\nI sure didn\u2019t want to spend all of it staring at my camera. So I decided to\nautomate the process.\n\n## The challenge\n\nWhen you only have three minutes to shoot an event, preparation is key. You\ndon\u2019t have the time to fiddle with settings, everything should be set by the\ntime totality comes.\n\nA challenge when photographing an eclipse is that there is a large difference\nin the brightness between the lightest and darkest parts. The outer ring is\nvery bright (you\u2019re still looking at the sun), but the corona extends pretty\nfar and gets dim. In photography parlance, the scene is said to have high\ndynamic range.\n\nBecause of that, one shot is not enough to capture the full extent of the\nscene. So what you do is you take multiple shots at different levels of\nluminosity to capture details in different aspects of the scene (also called\nbraketing, then you could stitch them together in post-processing. Or just\nselect one that you like best.\n\n## Preparation\n\nMrEclipse.com has an excellent guide to eclipse photography, which includes\ndifferent camera settings to use when bracketing shots.\n\nMy lens had a fixed aperture of f/16, so at ISO 400, looking up the\ninformation in the table, I would need to have exposures from 1/4000 sec to\n4sec.\n\nThe lookup table I used as a reference for the different shutter speeds when\nbracketing\n\n### Automation\n\nI first tried different remote shooting apps but none of them was flexible\nenough to allow for this level of bracketing. Many of them were also unstable\nand and I didn\u2019t want to take the risk of an app crashing on me or losing\nconnection when my phone went to sleep.\n\nThis is when I decided to automate the process myself. After some research, I\nfound gPhoto2 a long-standing library that can talk to cameras and control\nthem remotely. I also found a ruby gem that provides ruby bindings to use it.\n\nAll that was left is to create a ruby script to capture the different\nexposures needed for the bracketing. For safety and to cover for e.g. clouds,\nI made it so that every shot was taken four times, and ran the whole\nbracketing loop four times too.\n\nThe final script looked like this:\n\n    \n    \n    require 'gphoto2' GPhoto2::Camera.first do |camera| speeds = %w[ 1/60 1/4000 1/2000 1/500 1/250 1/15 1/4 1 2 4 ] 4.times do speeds.map do |speed| camera.update(iso: 400, shutterspeed: speed) 4.times do puts \"Taking exposure at #{speed}s\" camera.capture end rescue => e # Cover for unexpected cases when e.g. the camera is busy nil end end end\n\n## Result\n\nOnce totality started, I ran ruby totality.rb, left the laptop and enjoyed the\nmoment with my family.\n\nI returned to it afterwards, and... everything had worked \ud83c\udf89 Though many of the\nshots were black because of cloud coverage, I still got more than enough\nproperly exposed shots to make up for it. And I didn\u2019t need to be at the\ncamera for any of it!\n\nAll the pictures taken by the script\n\nShot at 1/60s\n\nShot at 1/15s\n\nShot at 2sec, you can see the corona extend longer\n\nCopyright \u00a9 Youssef Boulkaid 2024. Have a great day!\n\n", "frontpage": false}

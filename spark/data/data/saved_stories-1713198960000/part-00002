{"aid": "40038712", "title": "The origin and virtues of semicolons in programming languages", "url": "https://ntietz.com/blog/researching-why-we-use-semicolons-as-statement-terminators/", "domain": "ntietz.com", "votes": 2, "user": "nalgeon", "posted_at": "2024-04-15 10:34:32", "comments": 0, "source_title": "The origin and virtues of semicolons in programming languages | nicole@web", "source_text": "The origin and virtues of semicolons in programming languages | nicole@web\n\n# technically a blog\n\nhome | blog / tags | newsletter | projects\n\n# The origin and virtues of semicolons in programming languages\n\nMonday, April 15, 2024\n\nWhile working on the grammar for my programming language, Lilac, I was\nexploring different choices for statement terminators. . is very appealing, or\n!. Ultimately, I might make the \"boring\" choice of using either ; or\nsignificant whitespace.\n\nBut that had me asking: why is it that so many languages use semicolons for\ntheir statement terminators^1? I found some good reading about why we have\nstatement terminators at all, but little discussion on the specific merits of\nsemicolons over other choices.\n\nTo get to the origin of semicolons in our programming languages, I turned to\nhistory. There were very few programming languages in the early days, so it's\nrelatively easy to trace forward and look at all the early languages. If we do\nthis, we find the first language that included semicolons as a statement\nseparator: ALGOL 58.\n\nBefore ALGOL, languages typically used whitespace to mark statements, with\neach being on its own line (or punch card). ALGOL introduced a statement\nseparator which gave the programmer more flexibility to put multiple\nstatements on one line, or spread one statement across multiple lines.\nUnfortunately, when we dig into why the semicolon was used, there's not much\nof an answer! The original papers about it just describe that is the statement\nseparator but not why.\n\nAnd where does that leave us? To good old-fashioned speculation!\n\n# Speculation time\n\nThere are a few reasons why we would have picked up the semicolon, or why it\nwound up somewhere in our languages. This is all speculation, but the\nreasoning is sound.\n\nIt's available. Early computers had very limited character sets, and the\nsemicolon was often available. Some early input devices were adapted from\nRemington keyboards, and those (based on the pictures I can find) did include\na semicolon and colon. This makes sense, because if you want to enter English\ntext you may run into semicolons occasionally! It's not the most oft used\npunctuation, but it's useful^2. Since it was there, it was bound to wind up\nsomewhere in a language, when we have few characters to choose from.\n\nIt's convenient. The semicolon is on the home row without shift on modern\nkeyboards, which I suspect is part of why it continues to be used a lot.\n(That, and momentum.) Being on the home row makes it super easy to type, so in\ncontrast to something like !, which requires two keystrokes and a stretch, you\ncan get a ; with just your right pinky. Speaking of which, isn't it odd that\nthe semicolon is the main one and the more-used colon requires a shift?\n\nThe usage is similar to in English. One of the jobs of the semicolon in\nEnglish is to delimit independent clauses; these are parts of a sentence which\ncould stand alone but are closely related. This is very similar to what a\nstatement separator does. More similar would be a ., as each statement could\nbe thought of as a sentence, but that brings us to another reason to prefer\nsemicolons.\n\nIt's unlikely to conflict. If you use a period, the humble ., you can run into\ndifficulties in parsing if you're not careful. As my friend put it to me\nrecently, the period is such a high value symbol that you have to be choose\nwisely what you use it for. In modern languages, we use it for accessing\nfields and methods, and for defining floating point literals, and it's in\nrange operators and spread operators. In contrast, the semicolon is... nowhere\nelse, except occasionally when used to start comments.\n\nThese are all pretty compelling reasons together to choose a semicolon for a\nstatement separator! What could you choose instead? Running through all the\ncandidates, !@#$%^&*,./;:|-_, I can't think of one of these that's a clearly\nbetter choice! My personal preference is probably for . if you can resolve the\nparsing issues, and ! can be really fun if you want a very excited language,\nbut the humble ; seems to have stuck around for being a solidly good decision\ninstead of just continuity.\n\nAs for what I'm doing in my programming language, Lilac? I'm not entirely sure\nyet! The semicolon is the safe choice, but other choices (or not having one at\nall) have aesthetic appeal. I'd love to hear what you would choose in your\ndream world!\n\nThank you to Mary for the feedback on this post! You said it doesn't have\nenough semicolons in it. Here they are: ;;;;;;;;;;;;;;;;;;;;.\n\n^1\n\nIn some languages, like Pascal, these are statement separators. I'm just going\nto say \"terminators\" here for ease, but this pose applies to both.\n\n\u21a9\n\n^2\n\nOn one paper in high school, my chemistry teacher told me I was using too many\ncommas. Truly, I had far too many, averaging maybe five per sentence. Joke was\non him, though: I used fewer in the next paper by using semicolons instead\n(entirely grammatically correctly).\n\n\u21a9\n\nIf this post was enjoyable or useful for you, please share it! If you have\ncomments, questions, or feedback, you can email my personal email. To get new\nposts and support my work, subscribe to the newsletter. There is also an RSS\nfeed.\n\nWant to become a better programmer? Join the Recurse Center!\n\n", "frontpage": false}

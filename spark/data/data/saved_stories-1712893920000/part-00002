{"aid": "40007206", "title": "Sorting out backup internet #1: recursive DNS", "url": "https://www.earth.li/~noodles/blog/2024/04/backup-internet-rdns.html", "domain": "earth.li", "votes": 1, "user": "JNRowe", "posted_at": "2024-04-11 21:50:52", "comments": 0, "source_title": "Sorting out backup internet #1: recursive DNS", "source_text": "Sorting out backup internet #1: recursive DNS | Noodles\u2019 Emptiness\n\nNoodles' Emptiness\n\n# Sorting out backup internet #1: recursive DNS\n\nApr 11, 2024\n\nI work from home these days, and my nearest office is over 100 miles away, 3\nhours door to door if I travel by train (and, to be honest, probably not a lot\nfaster given rush hour traffic if I drive). So I\u2019m reliant on a functional\ninternet connection in order to be able to work. I\u2019m lucky to have access to\nOpenreach FTTP, provided by Aquiss, but I worry about what happens if there\u2019s\na cable cut somewhere or some other long lasting problem. Worst case I could\ntether to my work phone, or try to find some local coworking space to use\nwhile things get sorted, but I felt like arranging a backup option was a wise\nmove.\n\nStep 1 turned out to be sorting out recursive DNS. It\u2019s been many moons since\nI had to deal with running DNS in a production setting, and I\u2019ve mostly done\nmy best to avoid doing it at home too. dnsmasq has done a decent job at\nproviding for my needs over the years, covering DHCP, DNS (+ tftp for my test\ndevice network). However I just let it slave off my ISP\u2019s nameservers, which\nmeans if that link goes down it\u2019ll no longer be able to resolve anything\noutside the house.\n\nOne option would have been to either point to a different recursive DNS server\n(Cloudfare\u2019s 1.1.1.1 or Google\u2019s Public DNS being the common choices), but\nI\u2019ve no desire to share my lookup information with them. As another approach I\ncould have done some sort of failover of resolv.conf when the primary network\nwent down, but then I would have to get into moving files around based on\nnetworking status and that felt a bit clunky.\n\nSo I decided to finally setup a proper local recursive DNS server, which is\nsomething I\u2019ve kinda meant to do for a while but never had sufficient reason\nto look into. Last time I did this I did it with BIND 9 but there are more\noptions these days, and I decided to go with unbound, which is primarily\nfocused on recursive DNS.\n\nOne extra wrinkle, pointed out by Lars, is that having dynamic name\ninformation from DHCP hosts is exceptionally convenient. I\u2019ve kept dnsmasq as\nthe local DHCP server, so I wanted to be able to forward local queries there.\n\nI\u2019m doing all of this on my RB5009, running Debian. Installing unbound was a\nsimple matter of apt install unbound. I needed 2 pieces of configuration over\nthe default, one to enable recursive serving for the house networks, and one\nto enable forwarding of queries for the local domain to dnsmasq. I originally\nhad specified the wildcard address for listening, but this caused problems\nwith the fact my router has many interfaces and would sometimes respond from a\ndifferent address than the request had come in on.\n\nI then had to configure dnsmasq to not listen on port 53 (so unbound could),\nrespond to requests on the loopback interface (I have dnsmasq restricted to\nonly explicitly listed interfaces), and to hand out unbound as the appropriate\nnameserver in DHCP requests - once dnsmasq is not listening on port 53 it no\nlonger does this by default.\n\nWith these minor changes in place I now have local recursive DNS being handled\nby unbound, without losing dynamic local DNS for DHCP hosts. As an added bonus\nI now get 10/10 on Test IPv6 - previously I was getting dinged on the ability\nfor my DNS server to resolve purely IPv6 reachable addresses.\n\nNext step, actually sorting out a backup link.\n\n## Noodles' Emptiness\n\n  * \u00a9 2003-2024 Jonathan McDowell\n  * noodles-blog@earth.li\n\n  * u1f35c\n  * noodles\n  * noodles\n  * revdenoodles\n\nDude! Sweet!\n\n", "frontpage": false}

{"aid": "40001137", "title": "Insta: Snapshot Testing Tool for Rust", "url": "https://insta.rs/", "domain": "insta.rs", "votes": 2, "user": "tosh", "posted_at": "2024-04-11 11:47:47", "comments": 0, "source_title": "Insta Snapshots", "source_text": "Insta Snapshots\n\nInsta\n\n# Insta Snapshots\n\n### Insta is an enjoyable snapshot testing tool for Rust.\n\nLearn More \u21e3\n\nHello Snapshot Testing\n\nWhat's in the Box?\n\nWhat Does This Look Like?\n\nTest Workflow\n\nLearn More\n\n# Hello Snapshot Testing\n\nSnapshots tests (also sometimes called approval tests) are tests that assert\nvalues against a reference value (the snapshot). Think of it as a supercharged\nversion of assert_eq!. It lets you compare a value against a reference value\nbut unlike simple assertions the reference value is managed by insta for you.\n\n## What's in the Box?\n\n  * Interactive snapshot reviews: with cargo-insta you can perform reviews of all changed snapshots conveniently.\n  * Inline snapshots: insta can store snapshots right within your source file.\n  * External snapshots: it's also possible to store snapshots as separate files.\n  * Redactions: if you have output which can change between test runs (such as random identifiers, timestamps or others) you can instruct insta to redact these parts.\n  * Flexible formats: you can pick between snapshoting into different formats such as JSON, YAML, TOML, CSV or others.\n  * Editor Support: insta also provides a VS Code Extension that lets you review snapshots right from within your editor.\n  * Pretty Diffs: insta renders beautiful snapshot diffs right in your terminal with the help of the similar crate.\n  * Supports older Rust: insta, similar and similar-asserts support Rust down to 1.51.\n  * Apache-2.0 licensed: because the best tools are Open Source under a convenient license.\n\n## What Does This Look Like?\n\nPretty simple. You write a test function where you perform some sort of\ncomputation and then use one of the insta provided assertion macros:\n\n    \n    \n    #[test] fn test_simple() { insta::assert_yaml_snapshot!(calculate_value()); }\n\nNote that no reference value is provided. Instead the reference value is\nplaced on the first test run in a separate snapshot file. Insta will\nautomatically manage that snapshot for you.\n\n## Test Workflow\n\nThis is what this process looks like in an actual example:\n\n## Learn More\n\nWant to learn more?\n\n  * There is a 12 minute introduction screencast that walks you through how it works: Snapshot Testing with Insta\n  * Read the quickstart for more information\n  * Read the API documentation for a deep dive on the API\n\nFound an issue? You can edit this page on GitHub.\n\nCreated by Armin Ronacher Github Issues API Documentation Similar Crate\n\n", "frontpage": false}

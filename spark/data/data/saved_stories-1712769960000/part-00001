{"aid": "39989428", "title": "How to Stay Sane", "url": "https://un.curl.dev/life/stay-sane", "domain": "curl.dev", "votes": 44, "user": "8organicbits", "posted_at": "2024-04-10 11:23:35", "comments": 5, "source_title": "How to stay sane", "source_text": "How to stay sane | Uncurled\n\n# Uncurled\n\n  * README\n\n  * Introduction\n\n    * Resources\n\n    * Terms\n\n    * Uncurled\n\n  * Experience\n\n    * Dancer\n\n    * curl\n\n    * Rockbox\n\n    * c-ares\n\n    * libssh2\n\n    * Firefox\n\n  * Start\n\n    * Your project\n\n    * On license\n\n    * Attracting developers and community\n\n    * Contributing\n\n  * People\n\n    * Negative feedback\n\n    * Insulting attitude\n\n    * People use your code without telling\n\n    * Paid developers ask unpaid volunteers to do work\n\n    * Contributors will not stick around\n\n    * Newcomers can be awesome\n\n    * The know-it-best people\n\n    * People hide their origins\n\n    * People assume everything is well motivated\n\n    * People will contact you privately about the project\n\n    * People will provide feedback on irrelevant places\n\n    * Contributors are mostly male white westerners\n\n    * Lower the bar to attract more contributions\n\n    * Code of Conduct\n\n  * Project\n\n    * Just a bunch of people\n\n    * People come and go\n\n    * Over time, maintenance grows\n\n    * Documentation is never good enough\n\n    * If not alive, it is dead\n\n    * The world is full of projects\n\n    * Old versions never die\n\n    * Keep. On. Improving.\n\n    * Clean up your backyard\n\n    * Help your neighbors\n\n    * Open standards are your friends\n\n    * The project is \"we\"\n\n    * Contributor License Agreement\n\n    * What is success?\n\n    * A good contribution\n\n  * Money\n\n    * Volunteers make things different\n\n    * Companies pay for features\n\n    * Many companies rather not say\n\n    * Donations\n\n    * You get what you pay for\n\n    * Starting to charge is difficult\n\n    * Should companies pay?\n\n    * Rights to the money\n\n  * Source\n\n    * Distributors absorb reports\n\n    * Do not accept undocumented code\n\n    * Many bugfixes address symptoms\n\n    * Only releases get tested\n\n    * Once merged, you own it\n\n    * Given enough eyeballs, all bugs are shallow\n\n    * Code quality\n\n  * Security\n\n    * Security problems will appear\n\n    * Review, test, scan, verify\n\n    * Bug Bounty\n\n    * Responsible disclosure\n\n  * Maintainer\n\n    * BDFL\n\n    * Security issues\n\n    * Release management\n\n    * Website admin\n\n    * Mailing list admin\n\n    * Patch reviewing\n\n    * User support\n\n    * Blogging about it\n\n    * Debugging\n\n    * Merging\n\n    * Feature development\n\n    * Write documentation\n\n    * Event planning\n\n    * Getting stickers\n\n    * Doing talks\n\n    * World monitoring\n\n  * Evolution\n\n    * Production\n\n    * Consumption\n\n    * Infrastructure\n\n    * Tools\n\n    * Languages\n\n    * Funding\n\n  * Life\n\n    * Days are 24 hours for all of us\n\n    * We are all differently privileged\n\n    * Health and life come first\n\n    * How to stay sane\n\n    * How to maintain motivation\n\n  * Emails\n\n    * The Instagram and Spotify hacking ring\n\n    * I have Toyota Corola\n\n    * Drift gamepad on PS5\n\n    * I will slaughter you\n\n    * How I respond\n\n  * Epilogue\n\nPowered by GitBook\n\n# How to stay sane\n\nI have written code that runs in virtually every Internet-connected device in\nexistence. This is a situation that can induce stress into your life.\n\n  * The stress of having billions of users\n\n  * The stress of (many) reported bugs\n\n  * The stress of complaining/abusive users\n\nAll of which can create a psychological burden that can wear you down.\n\nMy methods of handling these different areas of potential stress include:\n\n##\n\nTest cases\n\nWith an increasing number of users, there should be an increasing number of\ntest cases. By adding new test cases for new features and new bugfixes, over\ntime there are many tests and the acts of doing another release or changing\ninternals become less dangerous. The test cases combined with many releases\nover a longer time, can slowly build up a trust-level that the basics work.\nDoing subsequent releases is then less of a nerve-wracking thing. Adding\nanother billion users should be fine. No need to worry.\n\n##\n\nBugs are not that scary\n\nMost bugs can be worked around and users can usually even downgrade to an\nolder version in many cases in case of need. The fact that a user is having\nproblems with your code is rarely a reason for you to stress out, even if that\nuser has a known brand associated with it. Even if that user seems to be upset\nor acts aggressively.\n\nAsk a lot of questions. Figure out how to reproduce. Analyze. Debug. Fix. And\ntake it calm. The code is Open Source, your job \u2013 even as a maintainer \u2013 is\nprimarily to aid your users to debug the problem.\n\n##\n\nAggressive users\n\nThe code is provided as-is without any warranty. Even the people who are\nloudest, shout the most or use the foulest language know this. Users who\ncannot follow the code of conduct should be banned and ignored at once. For\nusers who are annoying but not over the line bad, I try hard to extract their\nactual technical arguments in my mind and talk about those without being\nmisled by insinuations and other bad manners. Also, for my own sanity I tend\nto \"rate-limit\" people I find hard to work with; as long as they are rude I\nrespond with longer and longer intervals.\n\nAlso, a golden rule is of course to never actually send off your reply or\ncomment while feeling upset or angry. It is then better to wait, sleep on it\nand go back and edit it down to the bare minimum the day after.\n\n##\n\nReal life is a great escape\n\nPeople ask me how I get time off from real life to spend on Open Source. While\nthat is a challenge in itself, for me I think \"real life\" as in having a\nfamily with wife and kids and other spare time activities also has served as a\nhealthy \"opposite\" to my Open Source activities.\n\nSpending all time, all days on Open Source eventually make me lose interest\nand energy. I need distraction and variation in my days so spending time away\nfrom the code with my family is not a waste of Open Source time, it is rather\nrecharging time and a necessary break that allows me to come back with more\nenergy and better ideas.\n\nI do not think I need to tell you all that you can still come up with awesome\nideas and solve the trickiest problems, even when you are away from your\nkeyboard at a dinner with your parents in law.\n\nPreviousHealth and life come firstNextHow to maintain motivation\n\nLast updated 1 year ago\n\nOn this page\n\n  * Test cases\n  * Bugs are not that scary\n  * Aggressive users\n  * Real life is a great escape\n\nEdit on GitHub\n\n", "frontpage": true}

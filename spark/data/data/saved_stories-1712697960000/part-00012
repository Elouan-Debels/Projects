{"aid": "39979395", "title": "Fortran and WebAssembly: Bringing Zippy Linear Algebra to Node.js and Browsers", "url": "https://hackaday.com/2024/04/08/fortran-and-webassembly-bringing-zippy-linear-algebra-to-nodejs-browsers/", "domain": "hackaday.com", "votes": 1, "user": "Anon84", "posted_at": "2024-04-09 13:47:48", "comments": 0, "source_title": "Fortran And WebAssembly: Bringing Zippy Linear Algebra To NodeJS & Browsers", "source_text": "Fortran And WebAssembly: Bringing Zippy Linear Algebra To NodeJS & Browsers | Hackaday\n\nSkip to content\n\n# Hackaday\n\n# Fortran And WebAssembly: Bringing Zippy Linear Algebra To NodeJS & Browsers\n\n10 Comments\n\n  * by:\n\nMaya Posch\n\nApril 8, 2024\n\nWith the rise of WebAssembly (wasm) it\u2019s become easier than ever to run native\ncode in a browser. As mostly just another platform to target, it would be\nremiss if Fortran was not a part of this effort, which is why a number of\nprojects have sought to get Fortran supported on wasm.\n\nFor the \u2018why\u2019, [George Stagg] makes the point that software packages like BLAS\nand LAPACK for Fortran are still great for scientific computing, while the\n\u2018how\u2019 is a bit more hairy, but getting better courtesy of the still-in-\ndevelopment LLVM front-end for Fortran (flang-new). Using it for wasm is not\nstraightforward yet, due to the lack of a wasm32 target, but as [George]\ndemonstrates, this is easily patched around.\n\nWe reported on Fortran and wasm back in 2016, with things having changed\nsomewhat in the intervening eight years (yes, that long). The Fortran-to-C\ntranslator utility (f2c) is effectively EOL, while LFortran is coming along\nbut still missing many features. The Dragonegg GCC-frontend-for-LLVM project\nwas the best shot in 2020 for Fortran and WebAssembly, but obsolete now.\nClassic Flang has been in LLVM for a while, but is to be replaced with what is\nnow called flang-new. The wish by [George] is now to find a way to get his\npatched flang-new code for wasm support into the project.\n\nIn the article, the diff for patching the flang-new toolchain to target wasm\nis provided. During compilation of the standard Fortran runtime it was then\nfound that the flang-new code assumes that target system sizeof() results are\nidentical to those of the host system, which of course falls flat for wasm32.\nOne more patch (or hardcoded hack, rather) later the \u2018Hello World\u2019 example in\nFortran was up and running, clearing the way to build the BLAS (Basic Linear\nAlgebra Subprograms) and LAPACK (Linear Algebra Package) libraries and create\na few example projects in Fortran-for-wasm32 which uses them.\n\nThe advantage of being able to use extremely well-optimized software packages\nlike these when limited to a browser environment should be obvious, in\naddition to the benefit of using existing codebases. It is certainly\n[George]\u2019s hope that flang-new will soon officially support wasm (32 and\n64-bit) as targets, and he actively seeks help with making this a reality.\n\nPosted in Software DevelopmentTagged FORTRAN, wasm\n\n## 10 thoughts on \u201cFortran And WebAssembly: Bringing Zippy Linear Algebra To\nNodeJS & Browsers\u201d\n\n  1. Tom says:\n\nApril 8, 2024 at 5:08 am\n\nOh God make it stop WHY WOULD YOU DO THIS?\n\nYet another opportunity to take Fortran behind the garden shed and put it out\nof its misery missed.\n\nReport comment\n\nReply\n\n    1. Beliavsky says:\n\nApril 8, 2024 at 5:26 am\n\nFortran is a good language for linear algebra and scientific computing in\ngeneral. FWIW it\u2019s currently ranked 10th in the Tiobe list. The people using\nit know that C, C++, Python/NumPy, R, Matlab, Julia exist.\n\nReport comment\n\nReply\n\n    2. Joseph Eoff says:\n\nApril 8, 2024 at 5:30 am\n\nYet another opportunity to stop pushing javascript for anything and everything\nmissed. Javascript is the language that ought to be taken out behind the\ngarden shed and put out of my misery.\n\nhttps://www.reddit.com/r/AskProgramming/comments/lwc3gj/why_a_lot_of_software_engineers_say_javascript_is/?rdt=32864\n\nReport comment\n\nReply\n\n      1. rclark says:\n\nApril 8, 2024 at 10:36 am\n\nJS is an ad-hoc language in my mind. The Basic language of the Browser world.\nI much preferred the Java Applet approach back when ... until security\nconcerns killed it. I\u2019ll use JS when needed, but don\u2019t have to like it :) .\n\nReport comment\n\nReply\n\n        1. HaHa says:\n\nApril 8, 2024 at 12:15 pm\n\nJob/contract interview question: Does this company use any JS on the server?\n\nAny answer except \u2018Hell no. Are you crazy?\u2019 you run (don\u2019t walk) right out the\ndoor. Who would want to work for a company that makes that kind of boneheaded\ndecision?\n\nJS lives in the browser ghetto. WebAssembly will save us. JS will never die\nthough. The COBOL of the 24th century, along with COBOL and mainframe DOS of\ncourse.\n\nFORTRAN remains the only language (that I know of) that supports the\ncalculated goto. Goto Intvar. Where Intvar contains a _line_number_.\n\nReport comment\n\nReply\n\n    3. Cryo says:\n\nApril 8, 2024 at 8:43 am\n\nwe will not tolerate anti-FORTRAN speak in this here forum, citizen.\n\nReport comment\n\nReply\n\n    4. rclark says:\n\nApril 8, 2024 at 10:17 am\n\nNothing wrong with Fortran. It isn\u2019t a dead language and there is a \u2018lot\u2019 of\nscientific code still being used. Wasn\u2019t that long ago, I was helping with\nplasma boundary applications (vehicle atmosphere re-entry) \u2014 written in\nFortran. Just because it is perceived as \u2018old\u2019 doesn\u2019t mean it is bad. It\nworks, and works great for what it was designed for. You don\u2019t have to write\nin a \u2018modern\u2019 language to get the job done \u2014 get the right answers :) .\n\nReport comment\n\nReply\n\n    5. Mike says:\n\nApril 8, 2024 at 3:07 pm\n\nFortran will never die.\n\nIt lives on on its own but also within python\u2019s libraries (numpy, scipy, etc).\n\nThis, it will die when python dies.\n\nReport comment\n\nReply\n\n  2. Runge Kutta says:\n\nApril 8, 2024 at 1:45 pm\n\nThere is nothing wrong with Fortran, in the right problem space.\n\nI just can\u2019t wrap my head around why my browser should be running huge linear\nalgebra problems or the like.\n\nReport comment\n\nReply\n\n    1. rclark says:\n\nApril 8, 2024 at 6:10 pm\n\nI would agree ... But you know it seems there is a \u2018push\u2019 that everything has\nto run in a browser and/or in the cloud. So not surprised.... I personally\nwould rather run on \u2018bare-metal\u2019 ... not on a phone with silly apps, or in a\nVM in the cloud working from a thin client. No thank you.\n\nReport comment\n\nReply\n\n### Leave a ReplyCancel reply\n\nPlease be kind and respectful to help make the comments section excellent.\n(Comment Policy)\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## In A Twist, Humans Take Jobs From AI\n\n2 Comments\n\n  * ## Heating Mars On The Cheap\n\n45 Comments\n\n  * ## Where Graph Theory Meets The Road: The Algorithms Behind Route Planning\n\n31 Comments\n\n  * ## Space Mirrors: Dreams Of Turning The Night Into Day Around The Clock\n\n27 Comments\n\n  * ## Mining And Refining: Tungsten\n\n14 Comments\n\nMore from this category\n\n# Our Columns\n\n  * ## Ultimate Power: Lithium-Ion Packs Need Some Extra Circuitry\n\n13 Comments\n\n  * ## Hackaday Links: April 7, 2024\n\n11 Comments\n\n  * ## Understand Your Tools: Finger Exercises\n\n7 Comments\n\n  * ## Fictional Computers: The Three Body Problem\n\n54 Comments\n\n  * ## Hackaday Podcast Episode 265: Behind The Epic SSH Hack, 1980s Cyber Butler, The Story Of Season 7\n\nNo comments\n\nMore from this category\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## In A Twist, Humans Take Jobs From AI\n\n2 Comments\n\n  * ## Heating Mars On The Cheap\n\n45 Comments\n\n  * ## Where Graph Theory Meets The Road: The Algorithms Behind Route Planning\n\n31 Comments\n\n  * ## Space Mirrors: Dreams Of Turning The Night Into Day Around The Clock\n\n27 Comments\n\n  * ## Mining And Refining: Tungsten\n\n14 Comments\n\nMore from this category\n\n# Categories\n\n# Our Columns\n\n  * ## Ultimate Power: Lithium-Ion Packs Need Some Extra Circuitry\n\n13 Comments\n\n  * ## Hackaday Links: April 7, 2024\n\n11 Comments\n\n  * ## Understand Your Tools: Finger Exercises\n\n7 Comments\n\n  * ## Fictional Computers: The Three Body Problem\n\n54 Comments\n\n  * ## Hackaday Podcast Episode 265: Behind The Epic SSH Hack, 1980s Cyber Butler, The Story Of Season 7\n\nNo comments\n\nMore from this category\n\n# Recent comments\n\n  * Ostracus on In A Twist, Humans Take Jobs From AI\n  * SipsTea..... on Fixing An Expensive Smart Toaster Is Worth The Time\n  * Dude on Ultimate Power: Lithium-Ion Packs Need Some Extra Circuitry\n  * Jack Dansen on Bye Bye Green Screen, Hello Monochromatic Screen\n  * Dude on The Rise And Fall Of Silicon Graphics\n  * Jack Dansen on Bye Bye Green Screen, Hello Monochromatic Screen\n  * Clovis Fritzen on In A Twist, Humans Take Jobs From AI\n  * Roger from Fulchester Hackerspace on A Brief History Of Keyboard Encoding\n  * doris on The Rise And Fall Of Silicon Graphics\n  * Garth on PumpkinOS: A Modern Reimplementation Of PalmOS For Today\u2019s Platforms\n\n# Now on Hackaday.io\n\n  * Erlan Rodrigo de Souza Cassiano liked Silly hardware wishlist.\n  * Erlan Rodrigo de Souza Cassiano liked FPGA Bootcamp #0.\n  * Erlan Rodrigo de Souza Cassiano liked Open Source Science Tricorder.\n  * Erlan Rodrigo de Souza Cassiano liked Smart Plant.\n  * Erlan Rodrigo de Souza Cassiano liked B-G431B-ESC Brushless Servo Controller.\n  * Erlan Rodrigo de Souza Cassiano liked ESP32 WiPhone.\n  * Erlan Rodrigo de Souza Cassiano has added a list.\n  * Luke J. Barker has updated components for the project titled Reclaim your Clothes Dryer Heat.\n  * jcv09 liked SLS4All - Affordable SLS 3D Printer.\n  * Luke J. Barker has updated details to Reclaim your Clothes Dryer Heat.\n\n  * Home\n  * Blog\n  * Hackaday.io\n  * Tindie\n  * Hackaday Prize\n  * Video\n  * Submit A Tip\n  * About\n  * Contact Us\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe to Newsletter\n\nCopyright \u00a9 2024 | Hackaday, Hack A Day, and the Skull and Wrenches Logo are Trademarks of Hackaday.com | Privacy Policy | Terms of Service | Digital Services Act Powered by WordPress VIP\n\nBy using our website and services, you expressly agree to the placement of our\nperformance, functionality and advertising cookies. Learn more\n\n", "frontpage": false}

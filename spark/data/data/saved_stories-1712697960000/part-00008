{"aid": "39979357", "title": "Does a Software Engineer Have Scorpion Nature?", "url": "https://ludic.mataroa.blog/blog/does-a-software-engineer-have-scorpion-nature/", "domain": "mataroa.blog", "votes": 3, "user": "chaseha", "posted_at": "2024-04-09 13:43:18", "comments": 0, "source_title": "Does A Software Engineer Have Scorpion Nature? \u2014 Ludicity", "source_text": "Does A Software Engineer Have Scorpion Nature? \u2014 Ludicity\n\nLudicity\n\n# Does A Software Engineer Have Scorpion Nature?\n\nPublished on April 8, 2024\n\n# I.\n\n> A scorpion wants to sell some software but cannot code, so it asks a frog to\n> write the application. The frog hesitates, afraid that the scorpion might\n> start running Scrum, but the scorpion promises not to, pointing out that\n> they would both be out of work if they interfered with the frog's\n> programming. The frog considers this argument sensible and agrees to work\n> for the scorpion. Midway through the project, the scorpion demands the frog\n> write Confluence pages, drowning them both in paperwork. The dying frog asks\n> the scorpion why it did this despite knowing the consequence, to which the\n> scorpion replies: \"I am sorry, but I couldn't resist the urge. It's my\n> character.\"\n>\n> The frog is confused and angry, but most importantly, drowning.\n\nI've been grappling a troubling question, which I trust you'll appreciate that\nI didn't use as a clickbait title. It would have been a banger. Does learning\nanything about software development actually matter? I'm in the strange dual\nposition of working as a software engineer for a few days a week, where it\nisn't obvious that it matters that much, and running a software consultancy...\nwhere it isn't obvious that it matters that much.\n\nOn the surface, this sounds like a spectacularly stupid question. Of course it\nmatters. Software engineering is a craft, and more than that, it's a craft\nthat creates a lot of value, both in monetary and real terms, across the\nworld. This post has been broadcast across the world to arrive in your house\nor on your phone thanks to software development. It's something that I've\nenjoyed for a few years now, and I've learned some incredibly beautiful things\nabout abstraction, thoughtfulness, and design from the practice. And to top it\noff, I've earned what can only be described as an exorbitant wage for someone\nwhose first job in Malaysia paid a measly A$700 per month, and is now choosing\nto fly to Europe to see eight people for coffee. That is expensive coffee.\nGetting better at writing software leads to salvation in the eyes of The God\nof Code, and to the material circumstances that result in everything else in\nlife getting better.\n\nThat's the standard story. But something that needs answering first is \"Does\nit matter in regards to what?\", and things immediately become murky.\n\nI will trivially concede that it matters insofar as we must appease Code God,\nlest They strikes us down with thunderous volleys of blue screens and obscure\nkernel bugs. Perfecting the craft brings the peace of a craft being perfected,\nwhich is no small thing.\n\nBut what about everything else that I might want around my craft? Is getting\nbetter at programming actually a meaningful way to earn more money for my\nprecious pet rabbit, that he may sup upon the finest hay Australia has to\noffer? Or now that I've got the basics down, is that done by repeatedly\nstarting leading projects with expensive enterprise platforms and then leaving\nfor the next victim before you're held accountable?\n\nI've said it before and I'll say it again. I would murder everyone reading\nthis in cold blood to protect a single precious strand of fur on his sweet\nhead, and the only secret Patreon benefit is a painless end. Tricking someone\ninto buying the death-pit that is Informatica is table stakes next to\nhomicide.\n\nAm I going to get more than a pathetic scrap of autonomy and respect by\nreading Designing Data Intensive Applications, or am I actually just going to\nsit here praying that some dickhead in a suit doesn't decide that it's finally\ntime to bring everyone back to the open-floor plan office? I will acknowledge\nthat some teams will benefit immensely from being in the same room together,\nbut if I am going to learn how LZ4 compression works then you need to give me\na door so that I can think in peace, you ratfuck bastards. Plus most companies\nhave cultures that I can only describe as beige, and there is nothing worth\npreserving in that corporate soup anyway.\n\nYesterday I published the second episode of my podcast, with Kijana Woodard as\nthe guest. He recounts an incredible story about management telling everyone\nthey have to work the weekend, but management won't attend because they've got\na family thing on. Do I want to live my life that way if I have a chance at\nsomething else? Hell, I can easily be management because I was born with the\ngrifter gene, and I battle against it every day, like a man who was bitten by\nan unusually large dog last month and now mysteriously gets real worked up\naround the full moon. Am I really okay being the person that says \"The boss\nasked me to sell you all on a return to the office, and I'm going to need you\nin this Saturday too. Everyone, please, stop crying, it's unseemly and your\nkids aren't that great anyway\"?\n\nI mean, is being good at programming even strongly correlated with landing on\na good team? I've been in touch with people around the world, at all sorts of\ncompanies, and I can tell you right now that literally every team and company\nis one change in management or acquisition away from becoming an absolute\nshitshow. To make things worse, I'm still not certain that programming talent\nisn't negatively correlated with good treatment - it seems to select for a\npersonality that is very easy to exploit. In my wildest dreams, I land a\nreasonable position and stay there for ten years, but this isn't in my power\nat all. It seems that I'd be overwhelmingly likely to spend the rest of my\nlife leaping from company to company while the mysterious cocaine-and-supercar\nconnoisseurs play the Game Of Mergers, where you win rich or you lose rich.\n\nUnder the framework of the corporation as experienced by Dietrich in Developer\nHegemony, being good at programming is not an effective way to write good code\neven if that's all you care about. Being an excellent programmer is good, but\nyou aren't a carpenter creating a beautiful chair in the sacred temple of\nwoodwork. At most organizations, a third of the room is interested in making a\ngood chair, another third is hell-bent on removing three of the legs to look\ngood on wood-savings with the intention of leaving for a bigger woodworking\noperation before the whole thing collapses, and the last third have never seen\na chair but nonetheless insist on getting a turn with the hammer. Even if all\nyou want to do is craft beautiful code, it seems that the more important skill\nis to develop the antibodies requires to defend your craftsmanship. I can't do\nmy job if some random guy gets to pick all my fellow carpenters despite the\nfact they aren't one themselves, and decides how long a chair \"should\" take to\nmake as if the reality respects human opinions.\n\nNow the question hopefully makes a lot more sense. It is absolutely not clear\nto me that software engineering excellence matters if you've got serious plans\nto live with some peace.\n\n# II.\n\n> A frog wants to start a business selling software, and looks around for a\n> competitive advantage. The frog notices that every other businesses seems to\n> be run by scorpions that are good at sales but not programming, and decides\n> to compete on engineering quality. After a year of work, the frog's superior\n> product is ignored in favour of a scorpion's terrible product, leaving the\n> frog to starve to death. The dying frog asks the scorpion why this has\n> happened, to which the scorpion replies: \"lol, lmao\".\n>\n> The scorpion stings the frog for good measure, and calls it a nerd.\n\nIt is essentially a clich\u00e9 that sales is the number one problem faced by most\nbusinesses. In fact, it's so common that even people that don't know anything\nabout business will parrot this, so now it's some sort of necessary-but-\ninsufficient condition for being taken seriously.\n\nSometimes people say that \"every business is a software business\", and I have\nconcluded that this is self-aggrandizing nonsense. My business isn't a\ncarpentry business because we need chairs to do our job. I do not need chair\nspecialists, I simply need to work out what the value proposition is of buying\nthe most expensive chairs for the team is, and the only things allowing me\navoid the moral hazard of trading off their long-term spinal health for my own\nwallet are my tenuous grasp of ethics and that I only have equal partners, so\nthey're allowed to buy themselves whatever they want.\n\nEven many companies that ostensibly specialize in software, such as enterprise\ndevelopment companies, do not specialize in software. They specialize in\nenterprise sales, and simply need to produce software that does not collapse\nuntil after the contracts are signed. Then they charge their clients for\nvariations, which I can only describe as some absolute motherfucker behavior.\nThere is value in the software being well-engineered, but you can extract most\nof that value by being able to ship one bug-laden feature every six months.\nIt's the old 80/20 adage - you just need to be able to do work that isn't\ngoing to immediately explode, and I passed that standard approximately one\nyear into my career. Most problems are solved by CRUD apps with some simple\nintegrations, and they really aren't that hard to make \"good enough\", though\nit would take me a lifetime to make them perfect.\n\nThe first piece of software I used in a corporate setting was ResearchMaster,\na piece of crystallized devil-hate so fucking foul that contracts in their\nsystem were allowed to end before they started, which I discovered when I ran\na query on a subset of our data which yielded an average contract length of\nnegative twelve years. This is the competition. By the way, ResearchMaster, I\nhope your product is so unpopular that this blog becomes the first result when\nit gets looked up, you mendacious cockroaches.\n\nAll things being equal in terms of sales, better engineering is... well,\nbetter. But all things aren't equal, and that's why when I pop open the\nfinancial statements of a few publicly traded I.T companies (which is\nextremely enlightening), I see that:\n\n  1. They mostly talk about the acquisition of large-scale contracts, or businesses they've acquired that come with more large-scale contracts\n  2. The majority of the important people at the company come from sales backgrounds\n\nEven presumably exemplary programmers such as the venerated Patrick McKenzie\nand Jason Cohen produce oodles of material on sales and marketing. In fact,\nPatrick McKenzie has an article with early career advice for people titled\nDon't Call Yourself A Programmer, And Other Career Advice.\n\nJust look at that title. The only bit of advice that deserved making it into\nthe title was Don't Call Yourself A Programmer. That is how severe he thinks\nthe tactical mistake of identifying yourself as a programmer is, certainly to\nclients, and I suspect even to yourself. Do I want to be a salesperson? No, I\nwant to relax and write code I enjoy, and I suppose I am free to do that as\nlong as I'm also okay being informed that I must keep doing Scrum, even as I\nwant to hurl myself out of a tenth story window every time stand-up rolls\naround.\n\n# III.\n\n> A frog has worked extremely hard on some software to ensure the well-being\n> of everyone in the company. However, a recession is approaching, and the\n> scorpions in management must make the hard call on who has to leave the\n> company. After extensive deliberation, the scorpions vote that the frog is\n> expendable. The terrified frog asks a scorpion why this has happened, to\n> which the scorpion replies: \"The scorpions have run the numbers, and while\n> we appreciate your valuable contributions to this family, we've concluded\n> that only scorpions are vital in the current economy. Thanks for the code\n> and documentation, moron.\"\n\nMany years ago, when I was first getting into programming, I watched a YouTube\nvideo (that I can no longer find) from the guy that runs\npythonprogramming.net, Sentdex. He was doing some sort of Ask Me Anything, and\nsomeone asked him why he works for himself when he could clearly go get a job\npaying \u221e at Microsoft.\n\nHe confirmed that he does get a lot of job offers from all sorts of high-\nprofile places, so that was certainly in the cards. However, he recounted a\nstory about his first job. The thrust of it was that he worked for a small\nrestaurant. One day, with no warning, he received a letter in the mail saying\nthat the restaurant had shut down, effective tomorrow, due to financial\ndifficulties. And that's one of the reasons that he works for himself -\nthere's a lot of machinery in place at organizations to ensure that you aren't\nreally sure whether you're on the chopping block or not, or even whether the\nentire organization is on the verge of collapse. At least he knows if he's\nabout to be unable to feed himself or his family.\n\nIn some ways, I was fortunate to witness this behavior myself around the time\nCovid rolled around. In 2020, I worked at an organization that was absolutely\nrocked by the international travel closures due to a mixture of genuinely\nunavoidable economic disruption and being a bunch of financially irresponsible\nbuffoons. The first thing management did was send an an ancient lich-executive\nto do the rounds around the floor, noting the empty seats, and joking that\n\"coming into the office is probably safer that staying home, what with all the\nempty trains\", which I choose to interpret as an attempt to reduce headcount\nin extremely permanent fashion.\n\nThe second thing they did was to brutally violently lay off as many people as\nthey could, complete with the whole \"we scheduled fifty HR meetings in one\nday\" setup (but remember, we're a family). I still remember that they laid off\none of the juniors on my team, basically only sparing me because I am, to\nquote a Scottish friend, \"a charismatic son of a bitch\". It is extremely\nunclear if this is a compliment or not when delivered in a Scottish accent.\n\nOf course, the response from the employees was unprecedented, and haunted the\nsociopaths involved for the rest of their days. They - that can't be right.\n\"They forgot about it a year later and continue to say that everyone knows\nit's basically impossible to get laid off.\"\n\nWell, fuck. And the worst part is that the junior they laid off on my team was\nactually a better programmer than me who exclusively focused on writing good\ncode instead of setting aside buy-people-coffee money. Again, if I finish read\nStar Schema: The Complete Reference, am I going to be any safer? Shouldn't I\njust be working on my caffeine tolerance? Do I actually need to step up to\ncocaine so that I can hang with the big dogs?\n\n# IV.\n\n> A frog is looking for work for his frog-friend. However, the generous frog\n> is a lowly individual contributor, and must instead beg his CEO, a scorpion,\n> to employ his friend. The scorpion declines to employ frog-friend, even when\n> he finds out that frog-friend has tadpoles at home. The horrified frog asks\n> the scorpion why they can't hire frog-friend, to which the scorpion replies:\n> \"Well, look, it's just not in the budget for this year, what with the market\n> in decline, and I don't really get to make calls like that. I only have so\n> much political capital to expend this year too. This would have to go to the\n> board.\"\n>\n> The CEO scorpion then hires all his scorpion friends as senior managers. The\n> frog wishes that learning Rust gave it the ability to unilaterally protect\n> its friends.\n\nAll I will say about this is that, for the most part, I and readers here have\nto jump through insane hoops to get friends and fellow travelers hired. We\npray that the company happens to have an opening. We pray that the market is\ngood. We hope that the person on the hiring panel isn't going to give the role\nto a friend (half of my jobs have been promised to me behind the scenes which\nmust have sucked for the other candidates who got fake feedback - I'm\nconvinced that at least 20%+ of roles have this going on too, even ones where\nthis isn't legal behavior such as in government).\n\nBut then my friend Ed Kachelries desperately needed his first job in\nprogramming, so reader Corey Snipes, a certified absolute legend who runs his\nown business, just outright hired him for a small gig.\n\nI would prefer to be in Corey's position, where I've done the hard work of\nmaking a business with enough profitability to help out a person that needs\nit, than to be a beggar and have to tell suffering people \"Sorry, the boss\nsays the market is down\".\n\n# V.\n\n> A frog is looking for work for himself, although many other frogs have been\n> saying that the market is totally dead right now, and most scorpions in\n> recruitment won't even talk to him. The frog takes some time to figure out\n> exactly what the scorpions want to see, and then replaces everything on his\n> CV with the same three buzzwords over and over. Within two weeks, he has two\n> job interviews lined up with less than two hours of work.\n>\n> During the first interview, a suspicious scorpion asks \"You sure that you're\n> a frog?\"\n>\n> \"I have over ten years of industry experience in Frog\", replies the\n> scorpion.\n\nI mentioned in my last post that I would look for less stupid work, even if it\nputs our precious rant sessions in jeopardy. As is my custom when engaging in\nanything serious, I immediately cooled my blood by 10 C\u00b0, carefully considered\nthe state of the industry, then decided to exploit whatever the weakest link\nis (recruiters and people that don't know how to run interviews) with the\nprecision of an orbital tungsten rod bombardment. I took my CV, scrubbed out\nevery indication of a personality, and put the word \"Snowflake\" in it over and\nover because for some reason people think that buying a Snowflake license is\ngoing to fix decades of making terrible decisions with their data. Despite the\nAustralian tech market being extremely bad right now, I've got an interview\nscheduled for Wednesday and finished one last Friday, which I got through\nextremely easily and was offered a A$10K raise over the advertised price.\n\nI'm not really sure what to say about the fact that I found work so easily. I\njust put buzzwords on my CV and added/removed a bit of whitespace to my Seek\nprofile so that I always appears as a recently active candidate. Like, do\npeople think that anyone reads CVs? Recruiters just type in \"React\" or\nwhatever then sort Seek by \"most recently updated\". Hopefully that advice\nhelps someone out there - remove all the parts that sound smart and try that\nfor two weeks. Like, literally make a one-page CV with no personality, where\nyou use only have one tech stack, and that stack is whatever the most popular\nfad is.\n\nIt's just fucking astonishing, right? I could have a CV that says something\nlike \"saved a A$1.2M project, then another A$500K, and oh, and you're looking\nfor communication skills? Well, I just happened to have about a literal\nmillion visits to my blog in 2023, here are the two times I ended up on\nPrimagen's YouTube channel, and every year I help loads of people find better\nwork.\" It turns out that doesn't help at all on the conventional job market no\nmatter what they say they want in candidates - it just makes it harder for\npeople to tell if I'm the type of cog that you can plug into the Snowflake\nteam to make the data go brrrrrrr. The industry just wants to see signs that\nI'm a frog. If you're struggling to find work, there's a chance that you need\nto look more like a frog too. If you're desperate and the bastards want frogs,\ngive them frogs.\n\nThe image is courtesy of Ash, whose LinkedIn appears to say nothing other\nthan:\n\n> Skibadee skibadanger\n>\n> I am the data rearranger\n\nAsh is incidentally one of my co-directors. What have I done?\n\nIn any case, the team I was speaking to seemed decent at software engineering,\nbut I was so disgusted by my strategy immediately working that I declined to\nproceed any further despite being offered more money and the market being in\nthe dumpster. Plus, you know, if I'm going to sell out it's going to be for\nway more money at a company whose CEO isn't the the son of the parent\ncompany's CEO.\n\n# VI.\n\nI've been thinking about this a lot. Firstly, because I will never stop\nfinding this picture funny.\n\nWe've all been that frog in some point in our lives. It is perhaps not quite\naccurate to say that software engineers are the ones getting stung all day at\ncompanies - many people have a lot in life worse than ours - but that doesn't\nmean I have to accept things as they stand anyway.\n\nYou can also tell I've been thinking about it a lot because... well, there's\nthis post, but there's also the fact my podcast is actually called Does A Frog\nHave Scorpion Nature, which is a name so badly optimized for organic growth\nthat you know someone as scorpion-adjacent as me must be deeply, deeply\nenamored by the theme.\n\nI also receive a lot of emails from readers who have been in toxic\nenvironments for many years, and the thing that always springs to mind is the\nold (untrue) story about how you can boil a frog to death as long as you do it\nslowly. We're all that frog at some point in our lives too.\n\nIt's also a play on a version of a Zen koan I heard listening to Henry\nShukman.\n\n> A monk asked Joshu, 'Does even a dog have Buddha Nature?' Joshu said, 'Mu.'\n\nFor some context:\n\n> In the koan, \u201cJ\u00f4sh\u00fb\u2019s Dog\u201d (Mu), Case 1 of The Gateless Gate, a monk asks\n> J\u00f4sh\u00fb if a dog has buddha nature and J\u00f4sh\u00fb answers, \u201cMu.\u201d Mu literally means\n> \u201cnot,\u201d but can also be taken as, \u201cDon\u2019t go there.\u201d \u201cThe more clearly we see\n> what is going on, the more clearly we discover there is only what is going\n> on.\u201d In the practice of Mu we move from there being someone who does the\n> practice, to there being no one doing it \u2014 just Mu, nothing but Mu.\n\nFrom this we can conclude that I have overloaded the term 'frog' so heavily at\nthis point that it means nothing. But I also suspect the answer to \"Does\nstudying programming matter?\" is, essentially, \"Mu\". I have benefited greatly\nfrom privileging the study of programming above other things I could have been\nstudying, but that isn't because programming is intrinsically valuable and I'm\nsimply collecting the salary that is rightfully mine - we just have a society\nright now that demands programmers despite an inability to use them properly.\nIt's nonsense. Sometimes it's useful and sometimes it isn't.\n\nBut the framing of programmers as benign frogs that scorpion managers sting\nisn't quite right. I'm not a scorpion because I worked out how to hack the\nSeek process. Managers get picked on quite a bit too, just for more money. The\nfrog/scorpion dichotomy throws into stark relief the degree to which there\nisn't a frog/scorpion dichotomy. Don't go there, no matter how funny it is or\nhow much we enjoy self-pity. There are people who do view the world this way -\nI sometimes see people respond to my writing with sincere sentiments like \"All\nmanagers are scum\" (they're all scorpions), and I've been in rooms where\nmanagement has hired someone after literally saying \"They seem like a loser\nwho will do shitkicker work without leaving\" (we want a frog), and they're\nfucking miserable. It's all a losing game.\n\nIn fact, I'll go a step further and say that even thinking of myself as a\nsoftware engineer is some sort of internalized violence to shake off. We're\nall just... us, right? Calling myself a data engineer might make sense for\nsome sort of short-term contract, in the same way that calling a plumber\nconveys a lot of useful information when a faucet is leaking, but that isn't\nreally what a permanent office-based role means for most of us. You have to\nbring a lot of yourself to work, especially when you aren't remote, whether\nyou like it or not. And even if you didn't, is it really our first choice to\nnot be ourselves for eight hours a day? Is \"data engineer\" really the\nabstraction I want to present to the world?\n\nI have a serious responsibility to the people that founded my company with me\n- I've asked a lot of close friends to trust me when I say that I'm going to\ntry position them for more authentic work and autonomy. They give me a lot of\ntime and energy, with the sincere belief that I am somehow going to position\nthem so that they can do work they believe in (instead of whatever nonsense\nthe market thinks it wants), for sums of money that afford them and their\nfamilies comfort, with enough reliability that they aren't going to be blown\nout by outlier events. As much as I would love to do nothing other than commit\nto the full year of technical study I had laid out, I'm starting to realize\nthat the most important skill I can cultivate is being totally agnostic as to\nwhatever skills I decide to cultivate, and any other illusion is a luxury\nafforded to me because my day jobs have frequently not mattered or have been\npaid for (sometimes a century ago) by someone that bothered to learn the bits\nthat software engineers are largely convinced are beneath them. I don't think\nthis is actually the case, but it's hard to imagine a more perfect conspiracy\nto keep a lot of inefficient businesses around. A wave of people with holistic\nbusiness acumen that can also single-handedly ship apps would be disastrous\nfor many, many rent-seekers.\n\nIf there is a common failure mode here, it is simply:\n\n> A lot of software engineers (including me) go through phases where we're\n> passionate enough about computing that we try to convince ourselves that\n> it's the pathway to other things we want, because that would be really\n> convenient. Which is, of course, not how the universe works.\n\nFrom there, it was a short step to believing that, even if my company totally\ncollapses, engaging with the job market as a \"software engineer\" seems to be a\nlosing proposition (for me, and I suspect many others). And again, worse, a\nboring proposition. Now that I spend time thinking about the Dark Arts, such\nas branding and how it affects the dynamics of a sales conversation, I've\nrealized that calling yourself a programmer is a career-defining mistake -\noutside of very unique specialties like neurosurgery, being in a position\nwhere my livelihood is dependent on my title rather than a holistic assessment\nof my intelligence and capability is like being two moves from forced\ncheckmate. I can still write as much code as I want to a higher standard that\nI have before, so long as I'm willing to do the work to protect my code.\n\nI've mentioned in previous posts that I'm deeply interested in psychotherapy\nand clinical psychology. Something that comes up frequently when I speak to\nclinicians is that it sucks to work at many (most?) clinics. They force you to\nsee eight clients a day, back-to-back, so that they can crunch as many\nbillable hours out of the clinicians as possible. This is a horrible\nexperience. Most of the clinicians I know that escaped this trap seem have\nstarted private practices, which means learning about taxes, sales, marketing,\nrenting office spaces, managing client relationships, and all those things\nthat people say \"they aren't interested in\" without even taking a stab at it.\nThey run a good business, and this is what gives them the sheer profitability\nrequired to take care of themselves, and their clients. Do you know how many\npeople tell me they hate negotiating salary when the initial offer is \"good\nenough\", then ask me how I afford a three-day work week? Take free money or\ndon't take free money, pick one, but don't complain about it later.\n\nThe space to make specialist decisions and respect the craft to everyone's\nbenefit is what I want software engineers to reclaim for themselves. And the\ngreat news is that because sales books are way more simplistic than\nprogramming books (but you can't hide your embarrassing failures in a private\nrepository, you've got to try on a real person), you can hit the one book\nlevel really quickly!\n\nMost of my working hours these days are structured around:\n\n  1. Writing random stuff for this blog\n  2. Audio editing for the podcast\n  3. Writing more stuff for the company website\n  4. Doing a spectacular amount of work on sales, strategy, and most aspects of whatever you imagine when I say 'business'\n  5. As many calls, coffees, lunches, and dinners as I can possibly handle while still enjoying myself\n\nThen way at the back, having decided that it isn't actually that important:\n\n  1. Reading Designing Data Intensive Applications\n  2. Getting some mentorship from a very generous ex-AWS reader\n\n# VII.\n\nYou know what the strangest thing is, after all of that?\n\nHaving decided that technical study genuinely isn't important for me right now\n(this isn't an instance Betteridge's law where I turn around and say that\nprogramming study is actually the best), I've never enjoyed my time spent\nstudying more, or learned faster.\n\nSubscribe via RSS / via Email.\n\nPowered by mataroa.blog.\n\n", "frontpage": false}

{"aid": "40037872", "title": "How to Add Drag-and-Drop Image Upload with Dropzone in React Using Tailwind CSS", "url": "https://frontendshape.com/post/how-to-add-drag-and-drop-image-upload-with-dropzone-in-react-using-tailwind-css", "domain": "frontendshape.com", "votes": 1, "user": "Web250", "posted_at": "2024-04-15 07:39:09", "comments": 0, "source_title": "How to Add Drag-and-Drop Image Upload with Dropzone in React Using Tailwind CSS", "source_text": "How to Add Drag-and-Drop Image Upload with Dropzone in React Using Tailwind\nCSS - Frontendshape\n\n# How to Add Drag-and-Drop Image Upload with Dropzone in React Using Tailwind\nCSS\n\nFebruary 27, 2024 By Aaronn\n\nIn this tutorial, we'll see how to add drag and drop image file upload with\npreview in React with Tailwind CSS and Dropzone. Before you begin, ensure your\nproject has React, TypeScript, and Tailwind CSS installed and configured.\n\nInstall & Setup Tailwind CSS + React 18+ Typescript + Vite\n\nRun below command to install dropzone in react project.\n\n    \n    \n    npm install --save react-dropzone or: yarn add react-dropzone\n\nBuild an easy drag-and-drop system for uploading images with a preview using\nthe React Dropzone library. Make it happen using React's useCallback and\nuseState hooks, and style it up with Tailwind CSS.\n\n    \n    \n    import { useCallback, useState } from 'react'; import { useDropzone } from 'react-dropzone'; const ImageUpload = () => { const [selectedImage, setSelectedImage] = useState(null); const onDrop = useCallback(acceptedFiles => { const image = acceptedFiles[0]; const reader = new FileReader(); reader.onload = () => { setSelectedImage(reader.result); }; reader.readAsDataURL(image); }, []); const { acceptedFiles, getRootProps, getInputProps } = useDropzone({ onDrop, accept: { 'image/*': [] }, multiple: false, }); console.log('Accepted Files:', acceptedFiles); return ( <div className=\"flex items-center justify-center h-screen\"> <div className=\"bg-white p-8 rounded-lg shadow-md\"> <div {...getRootProps()} className=\"dropzone text-center border-dashed border-2 border-gray-300 p-6 rounded-md\"> <input {...getInputProps()} /> <p className=\"text-gray-600\">Drag 'n' drop an image here, or click to select one</p> </div> {selectedImage && ( <div className=\"mt-4\"> <h2 className=\"text-xl font-semibold mb-2\">Selected Image</h2> <img src={selectedImage} alt=\"Selected\" className=\"max-w-full rounded-md\" /> </div> )} </div> </div> ); }; export default ImageUpload;\n\nreact tailwind dropzone\n\nCreate a quick drag-and-drop image uploader with preview using React,\nTypeScript, and the React Dropzone library. Style it with Tailwind CSS for a\npolished look.\n\n    \n    \n    import { useCallback, useState, FC } from 'react'; import { useDropzone, DropzoneRootProps, DropzoneInputProps, DropzoneState } from 'react-dropzone'; interface ImageUploadProps { // Add any additional props here } const ImageUpload: FC<ImageUploadProps> = () => { const [selectedImage, setSelectedImage] = useState<string | null>(null); const onDrop = useCallback((acceptedFiles: File[]) => { const image = acceptedFiles[0]; const reader = new FileReader(); reader.onload = () => { setSelectedImage(reader.result as string); }; reader.readAsDataURL(image); }, []); const { acceptedFiles, getRootProps, getInputProps, }: { acceptedFiles: File[]; } & DropzoneRootProps & DropzoneInputProps & DropzoneState = useDropzone({ onDrop, accept: { 'image/*': [] }, multiple: false, }); console.log('Accepted Files:', acceptedFiles); return ( <div className=\"flex items-center justify-center h-screen\"> <div className=\"bg-white p-8 rounded-lg shadow-md\"> <div {...getRootProps()} className=\"dropzone text-center border-dashed border-2 border-gray-300 p-6 rounded-md\"> <input {...getInputProps()} /> <p className=\"text-gray-600\">Drag 'n' drop an image here, or click to select one</p> </div> {selectedImage && ( <div className=\"mt-4\"> <h2 className=\"text-xl font-semibold mb-2\">Selected Image</h2> <img src={selectedImage} alt=\"Selected\" className=\"max-w-full rounded-md\" /> </div> )} </div> </div> ); }; export default ImageUpload;\n\nreact tailwind drop and drop with preview\n\nBuild a quick drag-and-drop image uploader with multiple file support and live\npreviews using React, TypeScript, and Tailwind CSS.\n\n    \n    \n    import { useCallback, useState, FC } from 'react'; import { useDropzone, DropzoneRootProps, DropzoneInputProps, DropzoneState } from 'react-dropzone'; interface ImageUploadProps { // Add any additional props here } const ImageUpload: FC<ImageUploadProps> = () => { const [selectedImages, setSelectedImages] = useState<string[]>([]); const onDrop = useCallback((acceptedFiles: File[]) => { // Do something with the uploaded images, for example, display them. const imagePromises: Promise<string>[] = acceptedFiles.map((image) => { return new Promise((resolve) => { const reader = new FileReader(); reader.onload = () => { resolve(reader.result as string); }; reader.readAsDataURL(image); }); }); Promise.all(imagePromises).then((results) => { setSelectedImages(results); }); }, []); const { acceptedFiles, getRootProps, getInputProps, }: { acceptedFiles: File[]; } & DropzoneRootProps & DropzoneInputProps & DropzoneState = useDropzone({ onDrop, accept: { 'image/*': [] }, multiple: true, }); console.log('Accepted Files:', acceptedFiles); return ( <div className=\"flex items-center justify-center h-screen\"> <div className=\"bg-white p-8 rounded-lg shadow-md\"> <div {...getRootProps()} className=\"dropzone text-center border-dashed border-2 border-gray-300 p-6 rounded-md\"> <input {...getInputProps()} /> <p className=\"text-gray-600\">Drag 'n' drop images here, or click to select</p> </div> {selectedImages.length > 0 && ( <div className=\"mt-4\"> <h2 className=\"text-xl font-semibold mb-2\">Selected Images</h2> <div className=\"flex flex-wrap\"> {selectedImages.map((image, index) => ( <img key={index} src={image} alt={`Selected ${index + 1}`} className=\"max-w-full rounded-md m-2\" /> ))} </div> </div> )} </div> </div> ); }; export default ImageUpload;\n\nreact tailwind drop and drop with multiple image\n\n### Related Posts\n\nReact TypeScript Tailwind CSS Popup Modal Tutorial\n\nHow to Use Toastify in React with Tailwind CSS\n\nReact with Tailwind CSS File Upload Example\n\nReact Tailwind CSS Forgot Password Example\n\nCreate a Responsive Navbar React Tailwind CSS TypeScript\n\n## Enter Your Search Query\n\n## Tags\n\nChakra UI MUI 5 Mantine UI NextJS Tailwind CSS Bootstrap 5 Svelte Vite\n\n### Latest Posts\n\n### How to add Tailwind CSS Carousel React (no library)\n\n02/04/2024\n\n### How to Use DataTables in React with Tailwind CSS\n\n10/03/2024\n\n### Create a Responsive Navbar React Tailwind CSS TypeScript\n\n27/02/2024\n\n### React with Tailwind CSS File Upload Example\n\n19/02/2024\n\n### Categories\n\n  * #### HTML/CSS\n\n  * #### Bootstrap 5\n\n  * #### Svelte\n\n  * #### React\n\n  * #### NextJS\n\n", "frontpage": false}

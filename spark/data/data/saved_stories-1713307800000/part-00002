{"aid": "40054283", "title": "Figma launches Code Connect for your design system", "url": "https://www.figma.com/blog/introducing-code-connect/", "domain": "figma.com", "votes": 13, "user": "emilsjolander", "posted_at": "2024-04-16 16:48:50", "comments": 0, "source_title": "The Right Code for Your Design System | Figma Blog", "source_text": "The Right Code for Your Design System | Figma Blog\n\nSkip to main content\n\n### Featured Topics\n\n  * ### Design systems\n\n  * ### Engineering\n\n### Explore topics\n\n  * 3D design\n  * AI\n  * Accessibility\n  * Behind the scenes\n  * Brainstorming\n  * Branding\n  * Career & education\n  * Case study\n  * Collaboration\n  * Config\n  * Culture\n  * Design\n  * Design thinking\n  * Diagramming\n  * Events\n  * Hiring\n  * Infrastructure\n  * Leadership\n  * Localization\n  * Marketing\n  * Meetings\n  * Motion\n  * News\n  * Operations\n  * Plugins & tooling\n  * Portfolio\n  * Product management\n  * Product updates\n  * Productivity\n  * Profiles & interviews\n  * Prototyping\n  * Quality & performance\n  * React\n  * Report\n  * Research\n  * Security\n  * Social impact\n  * Strategy\n  * The Long & Short of It\n  * Thought leadership\n  * Tips & inspiration\n  * Typography\n  * UI/UX\n  * Wireframing\n  * Writing\n\nApril 16, 2024\n\n# The right code for your design system\n\nEmil Sj\u00f6landerSoftware Engineering Manager, Figma\n\nInside FigmaProduct updatesEngineering\n\nToday, we\u2019re announcing beta for Code Connect, a feature built to improve\ndesign system adoption by making code more accessible and useful for\ndevelopers.\n\nDesign systems are one of our most powerful tools for bridging the gap between\ndesign and code. By creating a shared language, they enable designers and\ndevelopers to efficiently collaborate across their respective workflows. We\u2019ve\nbeen working hard to bring design systems closer to code through features like\nauto layout, variables, component props, and Dev Mode which we launched last\nyear.\n\nGet in touch with our Sales team for tailored guidance on how to leverage our\nlatest features for your design system.\n\nDespite these advancements, one major challenge still remains: adoption. As an\nEngineering Manager, I\u2019ve seen this firsthand. When we talk to our customers,\nwe hear the same thing over and over again: \u201cWe built a design system, but\nit\u2019s not being used to its full potential.\u201d Developers may use parts of the\ndesign system, but they often aren't aware of everything it contains. And when\nthey do use it, they may unintentionally misuse components or patterns in ways\nthat don't align with the system's intended guidelines. This is a critical\nproblem, as the success of a design system depends on people not only using\nit, but using it correctly and consistently.\n\nThis is why I\u2019m so excited to introduce Code Connect, a new tool to help\norganizations boost design system adoption by making code more accessible and\nuseful for developers. With Code Connect, you can customize the code snippets\nthat appear in Dev Mode, so developers see your actual design system code\ninstead of auto-generated CSS. The result is faster, more efficient\ndevelopment, higher adoption of your design system across the organization,\nand a reduction in the creation and maintenance of duplicated, one-off\ncomponents.\n\n## Connecting design and code\n\nDesign system adoption at scale is something we\u2019ve been thinking about for a\nlong time. The barrier to adoption isn\u2019t just a matter of individual workflows\nor preference; it\u2019s a testament to the broader disconnect between design and\ncode. As our CEO Dylan Field explains, design and code have traditionally\noccupied different worlds: \u201cThere\u2019s a natural tension between design and code.\nIn the world of design, the focus is deciding what to build\u2014in the world of\ncode, the focus is building it...In practice, they\u2019re partners working to\nbring a product to life.\u201d\n\n> There\u2019s a natural tension between design and code. In the world of design,\n> the focus is deciding what to build\u2014in the world of code, the focus is\n> building it...In practice, they\u2019re partners working to bring a product to\n> life.\n>\n> \u201c There\u2019s a natural tension between design and code. In the world of design,\n> the focus is deciding what to build\u2014in the world of code, the focus is\n> building it...In practice, they\u2019re partners working to bring a product to\n> life. \u201d\n\nDylan Field, Chief Executive Officer, Figma\n\nDesigners and developers work in different tools, with different constraints\nand considerations. Designers optimize for creativity and exploration, while\ndevelopers optimize for structure and maintainability. At Figma, we imagine a\nworld where designers and developers can move seamlessly between freeform\nexploration and structured, systematic implementation. Code Connect is another\nstep in that direction.\n\n## Meeting developers where they are\n\nCode Connect aims to bridge this gap by bringing the power of code into the\ndesign tool. Under the hood, Code Connect is a utility provided through npm\nfor JavaScript and TypeScript projects, as well as Swift Package Manager for\nSwiftUI projects. This allows developers to easily install and use Code\nConnect in their own projects, regardless of the platform they\u2019re working on.\nWith more platform support coming soon, Code Connect aims to meet developers\nwhere they are, integrating seamlessly into their existing tools and\nworkflows.\n\nThe package and setup instructions live in GitHub, and developers can install\nit via a simple command line interface. This maps to the tools and workflows\ndevelopers already know and use.\n\nOnce installed, Code Connect allows design system teams to surface and\ndistribute best practices and documentation for how to use the design system,\ncontextually tied to the mockups. So when a developer clicks on a mockup, they\ndon\u2019t need to search through a bunch of documentation and code to figure out\nhow to build it in the design system. Instead, they just click on it and get\nthe approved, maintained code samples they need, published by the design\nsystems team.\n\nThis has huge benefits: Since developers aren\u2019t rewriting components, there\u2019s\nless code to maintain. By using what\u2019s already there\u2014rather than creating\ncomponents from scratch\u2014developers can work more efficiently and effectively.\nAnd with better adherence to your design system, you can more easily improve\naccessibility and consistency across applications.\n\nHere are some examples of what that looks like to implement Code Connect into\nyour system:\n\nJSX\n\n    \n    \n    1import * as figma from '@figma/code-connect' 2 3figma.connect(Button, 'https://...', { 4 props: { 5 label: figma.string('Text Content'), 6 disabled: figma.boolean('Disabled'), 7 type: figma.enum('Type', { 8 Primary: 'primary', 9 Secondary: 'secondary', 10 }), 11 }, 12 example: ({ disabled, text, type }) => { 13 return ( 14 <Button disabled={disabled} type={type}> 15 {text} 16 </Button> 17 ) 18 }, 19}) 20\n\nSwift\n\n    \n    \n    1import Figma 2 3struct Button_connection : FigmaConnect { 4 let component = Button.self 5 let figmaNodeUrl: String = \"https://...\" 6 7 @FigmaProp(\"Text Content\") 8 var label: String = \"Submit\" 9 10 @FigmaProp(\"disabled\") 11 var disabled: Bool = false 12 13 @FigmaProp( 14 \"Variant\", 15 mapping: [ 16 \"Primary\": ButtonVariant.primary, 17 \"Secondary\": ButtonVariant.secondary, 18 \"Destructive\": ButtonVariant.danger 19 ] 20 ) 21 var type: ButtonType = .primary 22 23 var body: some View { 24 Button(type: self.type, disabled: self.disabled, label: { 25 Text(self.label) 26 }) 27 } 28}\n\n## A more unified workflow\n\nWhen developers use Code Connect, they aren\u2019t generating new code; they\u2019re\naccessing the approved, maintained code samples and documentation that have\nbeen published by the design systems team. This helps to ensure consistency\nand adherence to the design system guidelines, without relying on automated\ncode generation that could introduce errors or inconsistencies. Code Connect\nis about surfacing and distributing existing code and documentation from your\ndesign system. By making the design system the path of least resistance, we\ncan encourage adoption and ensure that everyone is working from the same\nsource of truth.\n\nThis is especially important as teams scale. When you\u2019re a small team, it\u2019s\neasy to keep everyone on the same page. But as you grow, silos start to form.\nDesigners and developers start working in isolation, and the design system\nbecomes more of a loose assemblage of guidelines than a shared standard. With\nCode Connect, we want to make it easy for teams to stay in sync, no matter how\nlarge they get.\n\nBut Code Connect is just the start. Looking ahead, Code Connect unlocks many\nexciting possibilities for further integrating design and development\nworkflows. For example, it could potentially enable automatic audits of design\nsystem usage in both code and design, identifying areas where designs and code\nare out of sync. It might also open up opportunities to provide analytics and\ninsights into design system usage, helping teams to better understand how\ntheir system is being used in practice. Another possibility is the potential\nto enable approval flows between design and engineering for component updates,\nensuring that changes to the design system are properly reviewed and\ncoordinated across teams.\n\nWhile these specific features aren\u2019t currently on our roadmap, having the\nconnection between design and code opens up a whole new world of opportunities\nfor future exploration and innovation. Our vision is to create an even deeper\nconnection between design and code, beyond just design systems or components.\nImagine a future where we have that connection for variables, iconography,\ntypography\u2014all the things involved in a design. Code Connect is laying that\nfoundation, and we\u2019re excited to see how this technology evolves to support\neven more powerful workflows in the future.\n\nCode Connect will be available in beta for Figma Organization and Enterprise\nplans, with general availability planned for later this year. Beta is about\npresenting the idea, testing the waters, and getting feedback from the\ncommunity. We plan to fully integrate Code Connect into the Figma workflow,\nincluding the component playground, with support for additional platforms,\nsuch as Android, and web frameworks.\n\nTo get started with Code Connect, visit our GitHub repo for instructions on\ninstalling and configuring the NPM package, and check out our documentation to\nlearn more.\n\n## Related articles\n\n### What we launched at Framework\n\nBy\n\nJacob Miller\n\nWe announced Code Connect for developers, typography and gradient variables,\nand our Library Analytics API to help you drive design system adoption across\nyour entire organization.\n\nInside FigmaDesign systemsProduct updatesPrototypingEngineering\n\n### Join us for Framework by Figma: Our global design systems event\n\nBy\n\nChris Felix\n\nWe\u2019re bringing together the design systems community on April 16 to share new\nfeatures, best practices, and a peek into what\u2019s coming next.\n\nInside FigmaDesign systemsEngineeringEventsOperationsCollaborationDesignNews\n\n### Making Figma better for developers with Dev Mode\n\nBy\n\nKris Rasmussen\n\nHow can a design tool work better for developers? It\u2019s a question we\u2019ve been\nasking ourselves and our community. Today, we\u2019re excited to introduce Dev\nMode, a new workspace in Figma that\u2019s designed to get developers what they\nneed, when they need it, harnessing the tools they use every day.\n\nInside FigmaProduct updatesConfigEngineeringNewsCollaboration\n\n## Create and collaborate with Figma\n\nGet started for free\n\n## Use Cases\n\n  * UI design\n  * UX design\n  * Wireframing\n  * Diagramming\n  * Brainstorming\n  * Online whiteboard\n  * Team collaboration\n  * Agile workflows\n  * Strategic planning\n  * Mind mapping\n  * Concept mapping\n  * Org charts\n  * Online sticky notes\n  * Templates\n  * Agencies\n  * Figma for education\n\n## Explore\n\n  * Design\n  * Prototyping\n  * Design systems\n  * Development features\n  * Collaboration features\n  * Design process\n  * FigJam\n  * What's new\n  * Releases\n  * Pricing\n  * Enterprise\n  * Organization\n  * Professional\n  * Customers\n  * Security\n  * Integrations\n  * Contact\n\n## Resources\n\n  * Blog\n  * Best practices\n  * Color wheel\n  * Support\n  * Developers\n  * Resource library\n  * Reports & Insights\n  * Webinars\n  * Downloads\n  * Careers\n  * Our story\n  * Affiliate program\n  * Partners\n  * Legal and Privacy\n  * Modern Slavery Statement\n  * Climate Disclosure Statement\n  * Status\n\n## Compare\n\n  * Sketch\n  * Adobe XD\n  * Invision Studio\n  * Framer\n  * Design on Windows\n  * Miro\n\nEnglish\n\n", "frontpage": false}

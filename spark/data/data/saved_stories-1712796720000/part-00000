{"aid": "39994339", "title": "Libgourou: A Free Implementation of Adobe's Adept DRM on ePub/PDF Files", "url": "https://forge.soutade.fr/soutade/libgourou", "domain": "soutade.fr", "votes": 20, "user": "gorky1", "posted_at": "2024-04-10 18:49:47", "comments": 13, "source_title": "libgourou", "source_text": "soutade/libgourou - libgourou - Forge soutade\n\nsoutade\n\n/\n\nlibgourou\n\nFork\n\nYou've already forked libgourou\n\n0\n\nCode Issues 1 Pull Requests Packages Releases 4 Activity\n\n139 Commits 1 Branch 27 Tags 319 KiB\n\nC++ 94.3%\n\nRoff 2.8%\n\nMakefile 1.7%\n\nC 1%\n\nShell 0.2%\n\nBranchesTags\n\nNo results found.\n\nGo to file\n\nCite this repository\n\nGr\u00e9gory Soutad\u00e9 0d77cf55e1 Update version| 2024-03-28 21:58:07 +01:00  \n---|---  \ninclude| Update version| 2024-03-28 21:58:07 +01:00  \nscripts| Use system version of pugixml, not a checkouted one| 2023-01-08\n21:15:33 +01:00  \nsrc| Remove whole EBX objects for PDF when removing DRM| 2024-03-28 21:54:23\n+01:00  \nutils| Fix use after free in DRMProcessorClientImpl::sendHTTPRequest()|\n2024-01-24 19:13:22 +01:00  \n.gitignore| Update .gitignore| 2022-07-03 09:22:06 +02:00  \nLICENSE| Initial commit| 2021-07-03 21:57:53 +02:00  \nMakefile| Fix misuse of DESTDIR and PREFIX in Makefile| 2023-08-08 20:13:03\n+02:00  \nREADME.md| Update README.md| 2023-09-06 21:21:43 +02:00  \n  \n####\n\nREADME.md\n\n## Introduction\n\nlibgourou is a free implementation of Adobe's ADEPT protocol used to add DRM\non ePub/PDF files. It overcome the lacks of Adobe support for Linux platforms.\n\n## Architecture\n\nLike RMSDK, libgourou has a client/server scheme. All platform specific\nfunctions (crypto, network...) has to be implemented in a client class (that\nderives from DRMProcessorClient) while server implements ADEPT protocol. A\nreference implementation using cURL, OpenSSL and libzip is provided (in utils\ndirectory).\n\nMain fucntions to use from gourou::DRMProcessor are :\n\n  * Get an ePub from an ACSM file : fulfill() and download()\n  * Create a new device : createDRMProcessor()\n  * Register a new device : signIn() and activateDevice()\n  * Remove DRM : removeDRM()\n  * Return loaned book : returnLoan()\n\nYou can import configuration from (at least) :\n\n  * Kobo device : .adept/device.xml, .adept/devicesalt and .adept/activation.xml\n  * Bookeen device : .adobe-digital-editions/device.xml, root/devkey.bin and .adobe-digital-editions/activation.xml\n\nOr create a new one. Be careful : there is a limited number of devices that\ncan be created bye one account.\n\nePub are encrypted using a shared key : one account / multiple devices, so you\ncan create and register a device into your computer and read downloaded (and\nencrypted) ePub file with your eReader configured using the same AdobeID\naccount.\n\nFor those who wants to remove DRM without adept_remove, you can export your\nprivate key and import it within Calibre an its DeDRM plugin.\n\n## Dependencies\n\nFor libgourou :\n\nexternals :\n\n  * libpugixml\n\ninternals :\n\n  * uPDFParser\n\nFor utils :\n\n  * libcurl\n  * OpenSSL\n  * libzip\n  * libpugixml\n\nInternal libraries are automatically fetched and statically compiled during\nthe first run. When you update libgourou's repository, don't forget to update\ninternal libraries with :\n\n    \n    \n    make update_lib\n\n## Compilation\n\nUse make command\n\n    \n    \n    make [CROSS=XXX] [DEBUG=(0*|1)] [STATIC_UTILS=(0*|1)] [BUILD_UTILS=(0|1*)] [BUILD_STATIC=(0*|1)] [BUILD_SHARED=(0|1*)] [all*|clean|ultraclean|build_utils|install|uninstall]\n\nCROSS can define a cross compiler prefix (ie arm-linux-gnueabihf-)\n\nDEBUG can be set to compile in DEBUG mode\n\nBUILD_UTILS to build utils or not\n\nSTATIC_UTILS to build utils with static library (libgourou.a) instead of\ndefault dynamic one (libgourou.so)\n\nBUILD_STATIC build libgourou.a if 1, nothing if 0, can be combined with\nBUILD_SHARED\n\nBUILD_SHARED build libgourou.so if 1, nothing if 0, can be combined with\nBUILD_STATIC\n\nother variables are DESTDIR and PREFIX to handle destination install directory\n\n  * Default value\n\n## Utils\n\nFirst, add libgourou.so to your LD_LIBRARY_PATH\n\n    \n    \n    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD\n\nYou can optionaly specify your .adept directory\n\n    \n    \n    export ADEPT_DIR=/home/XXX\n\nThen, use utils as following :\n\nYou can import configuration from your eReader or create a new one with\nutils/adept_activate :\n\n    \n    \n    ./utils/adept_activate -u <AdobeID USERNAME>\n\nThen a /home//.config/adept directory is created with all configuration file\n\nTo download an ePub/PDF :\n\n    \n    \n    ./utils/acsmdownloader <ACSM_FILE>\n\nTo export your private key (for DeDRM software) :\n\n    \n    \n    ./utils/acsmdownloader --export-private-key [-o adobekey_1.der]\n\nTo remove ADEPT DRM :\n\n    \n    \n    ./utils/adept_remove <encryptedFile>\n\nTo list loaned books :\n\n    \n    \n    ./utils/adept_loan_mgt [-l]\n\nTo return a loaned book :\n\n    \n    \n    ./utils/adept_loan_mgt -r <id>\n\nYou can get utils full options description with -h or --help switch\n\n## Docker\n\nA docker image (by bcliang) is available at https://github.com/bcliang/docker-\nlibgourou/\n\n## Copyright\n\nGr\u00e9gory Soutad\u00e9\n\n## License\n\nlibgourou : LGPL v3 or later\n\nutils : BSD\n\n## Special thanks\n\n  * Jens for all test samples and utils testing\n  * Milian for debug & code\n  * Berwyn H for all test samples, feedbacks, patches and kind donation\n\nPowered by Gitea Version: 1.21.1 Page: 476ms Template: 53ms\n\nEnglish\n\nBahasa Indonesia Deutsch English Espa\u00f1ol Fran\u00e7ais Italiano Latvie\u0161u Magyar\nnyelv Nederlands Polski Portugu\u00eas de Portugal Portugu\u00eas do Brasil Suomi\nSvenska T\u00fcrk\u00e7e \u010ce\u0161tina \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438 \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u0641\u0627\u0631\u0633\u06cc \u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02 \u65e5\u672c\u8a9e\n\u7b80\u4f53\u4e2d\u6587 \u7e41\u9ad4\u4e2d\u6587(\u53f0\u7063) \u7e41\u9ad4\u4e2d\u6587(\u9999\u6e2f) \ud55c\uad6d\uc5b4\n\nLicenses API\n\n", "frontpage": true}

{"aid": "40040748", "title": "Fortran Standard Library: release v0.5.0", "url": "https://fortran-lang.discourse.group/t/fortran-standard-library-release-v0-5-0/7827", "domain": "fortran-lang.discourse.group", "votes": 7, "user": "zaikunzhang", "posted_at": "2024-04-15 14:09:00", "comments": 0, "source_title": "Fortran Standard Library: release v0.5.0 - Announcements - Fortran Discourse", "source_text": "Fortran Standard Library: release v0.5.0 - Announcements - Fortran Discourse\n\nSkip to main content\n\n#\n\nFortran Standard Library: release v0.5.0\n\nAnnouncements\n\nYou have selected 0 posts.\n\nselect all\n\ncancel selecting\n\nFedericoPerini\n\n3d\n\nDear Fortran Enthusiasts,\n\nWe\u2019re pleased to announce the release of Fortran Standard Library v0.5.0, a\nsignificant step forward in our efforts to enhance Fortran development tools.\n\nWhat\u2019s New in v0.5.0:\n\n  1. BLAS and LAPACK Support: We are delighted to introduce support for linear algebra BLAS and LAPACK interfaces. This addition lays the groundwork for implementing fast, user-friendly linear algebra APIs, empowering developers to tackle complex numerical computations with ease.\n  2. Compiler Enhancements: We\u2019ve upgraded the Intel-classic compiler in macOS CI, ensuring better performance and compatibility across different environments.\n  3. Continuous Improvement: We\u2019ve made several enhancements and fixes. Notably, state/error handling for linear algebra has been added.\n\nAcknowledgments: A big thank you to @jeremie.vandenplas, @hkvzjal, @certik,\n@gnikit, @everythingfunctional, @Beliavsky and all the contributors for their\ndedication and hard work. We\u2019d also like to express our gratitude to the\nSovereign Tech Fund for their support in making the linear algebra work\npossible.\n\nDetailed Changelog:\n\nGitHub\n\n### Release v0.5.0 \u00b7 fortran-lang/stdlib 81\n\nWhat's Changed Upgrade Intel-classic compiler in macOS CI by @perazz in #777\nProvide BLAS, LAPACK backends and interfaces by @perazz in #772 BLAS, LAPACK:\nRefactor comments for FORD compatibility ...\n\nGet Involved:\n\nWe invite you to explore the latest version of the Fortran Standard Library\nand share your feedback, suggestions, and contributions. Together, we can\ncontinue to advance the capabilities of Fortran and empower developers\nworldwide.\n\nLet\u2019s continue to push the boundaries of Fortran together!\n\nWarm regards, Your Fortran Standard Library Team\n\n  * #### created\n\n3d\n\n  * #### last reply\n\n1d\n\n  * 6\n\n#### replies\n\n  * 1.5k\n\n#### views\n\n  * 4\n\n#### users\n\n  * 46\n\n#### likes\n\n  * 4\n\nvmagnin\n\n2d\n\nFedericoPerini:\n\n> We invite you to explore the latest version of the Fortran Standard Library\n> and share your feedback, suggestions, and contributions. Together, we can\n> continue to advance the capabilities of Fortran and empower developers\n> worldwide.\n\nThe acceleration of stdlib releases (0.3=>0.4=>0.5) since last summer is a\ngreat sign! I plan to start exploring it as I am preparing a French video-\nconference about Fortran-lang activities/tools and Fortran on the 7th June.\n\nR_cubed\n\n2d\n\nI just happened to be looking at FPM stdlib, and other Fortran tools; I see a\nhuge amount of progress compared to when I posted on this last year.\n\nI figured out that:\n\n  1. FPM has a package on Msys2 \u2013 This need to be posted towards the top of all tutorial docs on setting up an environment.\n  2. It looks as if building the bootstrap compiler from source has been integrated into the initial build script.\n  3. Building stdlib with FPM from the git sources is a simple branch switch. This also should be posted towards the top of the docs. Even better, make the FPM build the default branch, and if someone needs to use a different build system, make them switch to that alternate branch. Fortran implemented tools deserve priority whenever possible.\n\nMy naive point of view is that I can download and test rather complicated\nnumerical code in a few seconds. This is very impressive.\n\nFWIW \u2013 I am working on some tutorials that involve tutoring elementary\nmathematics along with programming. I am finding this document on technical\nwriting very useful:\n\ndiataxis.fr\n\n### Di\u00e1taxis 2\n\nThe Di\u00e1taxis framework solves a problem of quality in technical documentation,\ndescribing an information architecture that makes it easier to create,\nmaintain and use.\n\nFedericoPerini\n\n2d\n\nvmagnin:\n\n> The acceleration of stdlib releases\n\nWe\u2019ve marked this new release with a bump in version because we incorporated\nthe huge modernized BLAS and LAPACK backends. Support for external\nimplementations is already available via cpp flags, although some manual\nintervention is still needed because fpm does not resolve that automatically.\n\nFedericoPerini\n\n2d\n\nR_cubed:\n\n> My naive point of view is that I can download and test rather complicated\n> numerical code in a few seconds. This is very impressive.\n\nYes I also find this pretty cool! we will be incorporating high-level algebra\nfunctions in stdlib soon, which means that, if everything goes right, we\u2019ll\nall have a modern Fortran NumPy-like API that supports in a matter of a few\nclicks:\n\n  * fast and GPU backends (openBLAS, Accelerate, MKL,...)\n  * a modern implementation with 128-bit precision support\n\nloiseaujc\n\n2d\n\nThis is exciting ! Do you any idea of what the timeline for the introduction\nof this high-level API ?\n\nFedericoPerini\n\n1d\n\nEnd of the spring is a good guess imho!\n\n### Related Topics\n\nTopic| Replies| Views| Activity  \n---|---|---|---  \nLinear algebra support in stdlibstdlib| 954| Dec 2023  \nFirst release of the Fortran standard libraryAnnouncements| 4.0k| Nov 2021  \nSTF Project: Developer for linear algebra support in stdlibJobs| 379| Aug 2023  \nFortranCon 2020 abstract for stdlibAnnouncements| 437| Jun 2020  \nA Modern Fortran Scientific Programming EcosystemAnnouncements| 1.5k| Oct 2022  \n  \nPowered by Discourse\n\n", "frontpage": true}

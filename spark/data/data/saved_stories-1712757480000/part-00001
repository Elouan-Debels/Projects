{"aid": "39988120", "title": "Acquiring: Call It a Prototype", "url": "https://news.alvaroduran.com/p/acquiring-call-it-a-prototype", "domain": "alvaroduran.com", "votes": 1, "user": "ohduran", "posted_at": "2024-04-10 07:55:48", "comments": 0, "source_title": "Acquiring: Call It a Prototype", "source_text": "Acquiring: Call It a Prototype - by Alvaro Duran\n\n# Money in Transit\n\nShare this post\n\n#### Acquiring: Call It a Prototype\n\nnews.alvaroduran.com\n\n#### Discover more from Money in Transit\n\nBridging the gap between payments strategy and execution\n\nContinue reading\n\nSign in\n\n# Acquiring: Call It a Prototype\n\n### Why Open Source Payment Applications Is An Opportunity Hidden in Plain\nSight\n\nAlvaro Duran\n\nApr 09, 2024\n\nShare this post\n\n#### Acquiring: Call It a Prototype\n\nnews.alvaroduran.com\n\nShare\n\nArticle voiceover\n\n1\u00d7\n\n0:00\n\n-13:06\n\nHow do people develop an obsession?\n\nIn my case, it happens in Hemingway style. Gradually, then suddenly.\n\nI built an open source payment application, acquiring, while preparing my talk\non how to design one. The goal was to show it to fellow engineers and say\n\"this is what I meant, but didn't have the time to show\".\n\nI published the package the day before presenting the talk. At that point, I\nwas positive it would be the last thing I was going to do on that project.\n\nBut the truth is, I haven't stopped thinking, strategizing, and writing code\nfor it ever since. I am obsessed with it.\n\nI even missed last week's post!\n\nI'm a bit shy to write down why I'm still working on an open source payment\napplication project. It would have to compete against multi-billion dollar\ncompanies and hundreds of developers. So why bother?\n\nThing is, I know I can beat them. And I want to dedicate this post to explain\nwhy.\n\nWelcome to Money In Transit, the newsletter bridging the gap between payments\nstrategy and execution. I\u2019m Alvaro Duran.\n\nRecently, we\u2019ve looked at\n\n  * why scalability, not scale, is what matters in payment applications\n\n  * the limitations of building money software on top of relational databases\n\n  * the leaky abstractions of payment orchestration companies\n\nThey\u2019re all free to read.\n\nWant to be notified when there\u2019s a new post? Hit that subscribe button below.\n\nEvery year, thousands of STEM undergraduates learn how to code using a tool\ncalled MATLAB. Back in the day, I was one of them.\n\nI hated MATLAB.\n\nMany others hate it, too:\n\n> In grad school I witnessed no fewer than three separate failed projects in\n> one lab. The common denominator among all of them was that they wanted it to\n> be done in MATLAB.\n>\n> Meanwhile, the thing they all actually wanted already existed.\n>\n> \u2014 Abandon MATLAB\n\nWhat disgusts me the most about MATLAB is that it is a licensed software. You\nhave to pay to use it.\n\nAnd look, if that was the only way I could do what MATLAB allows you to do,\nthen I would be glad it existed. I don't mind paying for a superior product.\nNeither does anybody reasonable.\n\nBut MATLAB isn't the only way you could do scientific computation. In fact,\nMATLAB has shut itself from becoming a superior tool by requiring a license.\n\nIf you want to do state-of-the-art scientific simulations, you should use\nPython instead. Which is free.\n\nNot because it's free as in \"free beer\". You should use Python rather than\nMATLAB because Python is free as in \"you're free to do as you please with it\".\n\nLicensed software like MATLAB isolates its users from the rest. In science,\nthat means isolating \"mere mortal scientists\" from the engineers who are\nactually good at building software.\n\nIt is a vicious cycle. Neither the professor teaching \"Intro to CS\", nor the\nPhysics undergraduates attending know any better.\n\nBut you couldn't care less about MATLAB, can you? It's a tool for PhD\nstudents. Whatever happens to them has no consequences for professionals\nbuilding real world companies.\n\nExcept...yes, it does.\n\nNot MATLAB, of course. But the problems that it embodies are the very same\nproblems that pervade building software that deals with money.\n\nPayments software is licensed software. Closed, within the walls of private\ncompanies, away from the sight of non-certified eyes.\n\nAnd everyone seems to believe that is how it must be.\n\n##\n\nWilliam Gates III Says You Should Give Him More Money\n\nBack in the 1970s, it was absurd to talk about open source software. All\nsoftware was open. What was paid for was the hardware. How to use it was\nfacilitated by a sliver of code that was as valuable as the user manual.\n\nThose early days of software weren't going to last very long.\n\nBill Gates, back when he signed letters as William Gates III and Microsoft was\nstill Micro-soft, put an end to this in 1976. He wrote an open letter to\nhobbyists compelling them to \u201cpay up\u201d. Hobbyists were stealing from him!\n\n> The amount of royalties we have received from sales to hobbyists makes the\n> time spent on Altair BASIC worth less than $2 an hour.\n>\n> Why is this? As the majority of hobbyists must be aware, most of you steal\n> your software.\n>\n> \u2014 Bill Gates, An Open Letter To Hobbyists\n\nHe had a point, though. As hardware was becoming more powerful, it was also\nbecoming much harder to write software for. Gates's insight was that, at some\npoint, even engineers were going to need a layer of complex software to use\nthe computers they were buying.\n\nEveryone was going to need an operating system. So he built one, and licensed\nit.\n\nWhat made Bill Gates richer than Ray Kroc is that, unlike McDonald\u2019s burgers,\nsoftware doesn\u2019t incur marginal costs. Any extra unit you sell, past the cost\nof creating it, costs you nothing.\n\nThe paradox of software is that it is both machine and manual. It gets\nassembled once, but copied endlessly. It gets written, but breaks unless it is\ncarefully designed.\n\nAnd most importantly, you can grab it for yourself and use it, without leaving\nits author worse off.\n\n##\n\nI Would Rather Have A World With Amazon Than One Without It\n\nIn 1994, Linus Torvalds, a university student from Finland, released an open\nsource alternative to Windows called Linux. And that changed...nothing. No\nserious company was going to move away from Oracle or Microsoft.\n\nTorvalds was a nobody, and professionals used certified software.\n\nThe dot com bubble explosion put an end to this way of thinking. Costs must be\naggressively cut, and hobbyist's software was up for grabs.\n\nWhy did hobbyists gave that software for free? Because they were driven by the\nconviction that it is the right of the hardware's owner to have complete\ncontrol over the software that runs it.\n\nThis was risky for professionals, of course. Only 6 years after Torvalds\nreleased Linux, Amazon was betting its existence on it. They just didn\u2019t have\na choice.\n\nOpen source software is what allowed Amazon to survive.\n\n##\n\nThe Economics of Open Source\n\nThe cost of open source is the opportunity cost. The potential sale paid by\nsomeone who, instead, chooses to download the code, productize it and run it\nwithout you.\n\nHere's what Bill Gates never understood about open source: that someone who\ndoesn't pay would have never bought from you anyway.\n\nSoftware is best when given for free to make your product more desirable.\n\nLike Google releasing Android to make their search engine the default option\nin millions of smartphones. Or Facebook offering free Internet to become the\ndefault gateway to being online for millions. Even the AI is how cloud\nproviders are enticing you into using more of their services.\n\nNo one buys the iPhone to use iOS; everyone puts up with iOS because that's\nhow you can use an iPhone.\n\n##\n\nInteroperability Is the Wrong Goal to Aim\n\nIn payments, no one releases their software in the open. There's a widespread\nbelief that, if you do that, then your competitors would jump at the\nopportunity to rip it off and put you out of business.\n\nBut here's the crazy thing: that won't happen. And the reason that won't\nhappen is because your competitor thinks you're an idiot.\n\nNo, really. They wouldn't touch it with a ten-foot pole. They would\nrationalize it, saying things like \"we run higher quality software than this\".\nBut deep down, we all know. It\u2019s because, in their minds, your software was\nbuilt by idiots.\n\nThat's why I am building an open source payment application. Because they,\ntoo, think I'm an idiot.\n\nThis is my opportunity: what financial institutions have tried, and keep\ntrying, is not working.\n\nFor the last decade, we've had something called Open Banking. The idea that we\ncan unlock innovation in payments by forcing banks to give authorized startups\naccess to their customers' data through a common standard.\n\nTen years of this, billions of dollars spent, and what we have to show for is\nthat now you can see your account on Bank A on the mobile app of Bank B.\n\nOpen Banking is failing because the goal is interoperability, and that is the\nwrong goal to aim. Because it never works.\n\nAnd yet, professionals are drawn to it, like Gollum to the ring. To those\nattracted to intellectual purity, One Standard To Rule Them All is very\ncompelling.\n\nThe interoperability route always leads to standard proliferation. Once you've\ndecided that your goal is a common standard, the question is...which standard\nis best?\n\nInteroperability is not the goal; collaboration is.\n\nInteroperability gives you MATLAB licenses. Certified tools you are authorized\nto use, tools nobody can fire you for using.\n\nCollaboration gives you open source. No certified tool will give you\npermission to look inside, to tinker, to be left to your own devices. To\nimprove.\n\nOpenness means not to be forced to use a specific technology. And, to the\nextent that a company doesn\u2019t let anyone else see, let anyone else change, let\nanyone else fix, engineers cannot do their job completely.\n\nWhat engineers need isn\u2019t stamps of approval, but a Build Your Own toolkit.\n\nThe payments industry is missing the DIY ethos, and you may contribute a\nverse. I\u2019m calling it acquiring.\n\nYou can call it a prototype.\n\n### Subscribe to Money in Transit\n\nBy Alvaro Duran \u00b7 Launched 10 months ago\n\nBridging the gap between payments strategy and execution\n\nShare this post\n\n#### Acquiring: Call It a Prototype\n\nnews.alvaroduran.com\n\nShare\n\nComments\n\nAdvice I Wish I Had Known When I Built My First Payment Application\n\nWhat to guard against when building money software for success\n\nFeb 20 \u2022\n\nAlvaro Duran\n\n1\n\nShare this post\n\n#### Advice I Wish I Had Known When I Built My First Payment Application\n\nnews.alvaroduran.com\n\nMust There Be A Payment Platform?\n\nShouldn't Stripe and Adyen Be Figures Of Controversy?\n\nNov 20, 2023 \u2022\n\nAlvaro Duran\n\nShare this post\n\n#### Must There Be A Payment Platform?\n\nnews.alvaroduran.com\n\nGumroad Wallet, A $100M Opportunity\n\nA Case Study on E-commerce Providing a Better Payment Experience\n\nJan 4 \u2022\n\nAlvaro Duran\n\n3\n\nShare this post\n\n#### Gumroad Wallet, A $100M Opportunity\n\nnews.alvaroduran.com\n\nReady for more?\n\n\u00a9 2024 Alvaro Duran Barata\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}

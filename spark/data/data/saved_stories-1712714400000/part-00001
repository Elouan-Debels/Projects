{"aid": "39983586", "title": "Show HN: Syntactic Sugar for Java", "url": "https://github.com/guybedo/sugar", "domain": "github.com/guybedo", "votes": 1, "user": "guybedo", "posted_at": "2024-04-09 19:59:02", "comments": 0, "source_title": "GitHub - guybedo/sugar: syntactic sugar for java", "source_text": "GitHub - guybedo/sugar: syntactic sugar for java\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nguybedo / sugar Public\n\n  * Notifications\n  * Fork 0\n  * Star 2\n\nsyntactic sugar for java\n\n2 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# guybedo/sugar\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nguybedo0.0.1v, README81b5fb0 \u00b7\n\n## History\n\n30 Commits  \n  \n### src\n\n|\n\n### src\n\n| 0.0.1v, README  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| init  \n  \n### README.md\n\n|\n\n### README.md\n\n| 0.0.1v, README  \n  \n### pom.xml\n\n|\n\n### pom.xml\n\n| 0.0.1v, README  \n  \n## Repository files navigation\n\n# Sugar\n\nSyntactic sugar for Java\n\n## What is this?\n\nSugar is a small library providing some static imports to write less verbose\nJava code.\n\nNothing groundbreaking here, just some sugar.\n\nFeatures:\n\n  * Create/Manipulate collections: set, list, map, partition, product, intersect\n  * Collection helpers: first, last, sorted, max, min, mean, sum, prepend, append, concat, zip\n\n# Examples\n\n## Map\n\nBefore\n\n    \n    \n    Map<String, String> newMap = new HashMap<>(); newMap.put(\"key1\", \"value1\"); newMap.put(\"key2\", \"value2\"); newMap.put(\"key3\", \"value3\");\n\nAfter\n\n    \n    \n    Map<String, String> newMap = map(kv(\"key1\", \"value1\"), kv(\"key1\", \"value1\"), kv(\"key1\", \"value1\"));\n\n## List\n\nBefore\n\n    \n    \n    List<Integer> values = new ArrayList(); values.add(1); values.add(2); values.add(3); values.add(4); Integer min = values .stream() .sorted((a, b) -> -a.compareTo(b)) .findFirst() .orElse(null); Integer last = values.get(values.size()-1); Integer one = values .stream() .filter(v -> v == 1) .findFirst() .orElse(null); values = values .stream() .map(v -> v + 1) .collect(Collectors.toList());\n\nAfter\n\n    \n    \n    List<Integer> values = list(1,2,3,4); Integer min = min(values); Integer last = last(values); Integer one = first(filter(values,v -> v == 1)); values = map(values, v -> v + 1);\n\n## POJOs\n\nBefore\n\n    \n    \n    Optional .ofNullable(\"test\") .map(s -> s + \"_ok\") .orElse(null); Optional .ofNullable(\"test\") .ifPresent(s -> System.out.println(s)); LocalDateTime .now() .format(DateTimeFormatter.ISO_DATE_TIME);\n\nAfter\n\n    \n    \n    orElse(\"test\", s -> s + \"_ok\", null); ifPresent(\"test\", s -> System.out.println(s)); isoDateTime(LocalDateTime.now());\n\n## Getting Started\n\n## Maven\n\n    \n    \n    <dependency> <groupId>com.akalea</groupId> <artifactId>sugar</artifactId> <version>0.0.1</version> </dependency>\n\n## Import functions\n\n    \n    \n    import static com.akalea.sugar.Collections.*; import static com.akalea.sugar.Pojos.*;\n\n## About\n\nsyntactic sugar for java\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n2 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Java 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

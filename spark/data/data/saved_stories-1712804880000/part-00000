{"aid": "39995725", "title": "Aider: AI pair programming in your terminal", "url": "https://github.com/paul-gauthier/aider", "domain": "github.com/paul-gauthier", "votes": 38, "user": "tosh", "posted_at": "2024-04-10 21:06:42", "comments": 8, "source_title": "GitHub - paul-gauthier/aider: aider is AI pair programming in your terminal", "source_text": "GitHub - paul-gauthier/aider: aider is AI pair programming in your terminal\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\npaul-gauthier / aider Public\n\n  * Notifications\n  * Fork 837\n  * Star 7.5k\n\naider is AI pair programming in your terminal\n\naider.chat/\n\n### License\n\nApache-2.0 license\n\n7.5k stars 837 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# paul-gauthier/aider\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n19 Branches\n\n50 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nPaul Gauthierfix column order7875418 \u00b7\n\n## History\n\n3,590 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| renamed issue template  \n  \n### _layouts\n\n|\n\n### _layouts\n\n| cleanup  \n  \n### _posts\n\n|\n\n### _posts\n\n| copy  \n  \n### aider\n\n|\n\n### aider\n\n| set version to 0.28.1-dev  \n  \n### assets\n\n|\n\n### assets\n\n| fix column order  \n  \n### benchmark\n\n|\n\n### benchmark\n\n| fix column order  \n  \n### blog\n\n|\n\n### blog\n\n| layout  \n  \n### docker\n\n|\n\n### docker\n\n| Put build-essential back into dockerfile  \n  \n### docs\n\n|\n\n### docs\n\n| copy  \n  \n### examples\n\n|\n\n### examples\n\n| copy  \n  \n### scripts\n\n|\n\n### scripts\n\n| aider: Add logic to compare commit dates of main and origin/main ...  \n  \n### share\n\n|\n\n### share\n\n| aider: The JavaScript code now adds the mdurl as an href on the `...  \n  \n### tests\n\n|\n\n### tests\n\n| Merge remote-tracking branch 'origin/main'  \n  \n### .dockerignore\n\n|\n\n### .dockerignore\n\n| prep docker build to run in github action  \n  \n### .flake8\n\n|\n\n### .flake8\n\n| debug  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| do isort first  \n  \n### CNAME\n\n|\n\n### CNAME\n\n| Create CNAME  \n  \n### HISTORY.md\n\n|\n\n### HISTORY.md\n\n| Updated HISTORY  \n  \n### LICENSE.txt\n\n|\n\n### LICENSE.txt\n\n| Added Apache 2.0 license  \n  \n### MANIFEST.in\n\n|\n\n### MANIFEST.in\n\n| wip  \n  \n### README.md\n\n|\n\n### README.md\n\n| Use gpt4 turbo as the default model  \n  \n### _config.yml\n\n|\n\n### _config.yml\n\n| Added sitemap  \n  \n### dev-requirements.in\n\n|\n\n### dev-requirements.in\n\n| added pre-commit to dev-reqs  \n  \n### dev-requirements.txt\n\n|\n\n### dev-requirements.txt\n\n| Bump all dependencies, to pick up py-tree-sitter-languages 1.9.1 with...  \n  \n### pytest.ini\n\n|\n\n### pytest.ini\n\n| Skip benchmark tests normally  \n  \n### requirements.in\n\n|\n\n### requirements.in\n\n| Use download_pandoc, which works everywhere including arm64  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| Use download_pandoc, which works everywhere including arm64  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| added 3.12 to pypi classifiers  \n  \n## Repository files navigation\n\n# aider is AI pair programming in your terminal\n\nAider is a command line tool that lets you pair program with GPT-3.5/GPT-4, to\nedit code stored in your local git repository. Aider will directly edit the\ncode in your local source files, and git commit the changes with sensible\ncommit messages. You can start a new project or work with an existing git\nrepo. Aider is unique in that it lets you ask for changes to pre-existing,\nlarger codebases.\n\n  * Getting started\n  * Example chat transcripts\n  * Features\n  * Usage\n  * Tutorial videos\n  * In-chat commands\n  * Tips\n  * Installation\n  * Voice-to-code\n  * FAQ\n  * Discord\n  * Blog\n\n## Getting started\n\nSee the installation instructions for more details, but you can get started\nquickly like this:\n\n    \n    \n    $ pip install aider-chat $ export OPENAI_API_KEY=your-key-goes-here $ aider hello.js Using git repo: .git Added hello.js to the chat. hello.js> write a js script that prints hello world\n\n## Example chat transcripts\n\nHere are some example transcripts that show how you can chat with aider to\nwrite and edit code with GPT-4.\n\n  * Hello World Flask App: Start from scratch and have GPT create a simple Flask app with various endpoints, such as adding two numbers and calculating the Fibonacci sequence.\n\n  * Javascript Game Modification: Dive into an existing open-source repo, and get GPT's help to understand it and make modifications.\n\n  * Complex Multi-file Change with Debugging: GPT makes a complex code change that is coordinated across multiple source files, and resolves bugs by reviewing error output and doc snippets.\n\n  * Create a Black Box Test Case: GPT creates a \"black box\" test case without access to the source of the method being tested, using only a high level map of the repository based on tree-sitter.\n\nYou can find more chat transcripts on the examples page.\n\n## Features\n\n  * Chat with GPT about your code by launching aider from the command line with set of source files to discuss and edit together. Aider lets GPT see and edit the content of those files.\n  * GPT can write and edit code in most popular languages: python, javascript, typescript, html, css, etc.\n  * Request new features, changes, improvements, or bug fixes to your code. Ask for new test cases, updated documentation or code refactors.\n  * Aider will apply the edits suggested by GPT directly to your source files.\n  * Aider will automatically commit each changeset to your local git repo with a descriptive commit message. These frequent, automatic commits provide a safety net. It's easy to undo changes or use standard git workflows to manage longer sequences of changes.\n  * You can use aider with multiple source files at once, so GPT can make coordinated code changes across all of them in a single changeset/commit.\n  * Aider can give GPT-4 a map of your entire git repo, which helps it understand and modify large codebases.\n  * You can also edit files by hand using your editor while chatting with aider. Aider will notice these out-of-band edits and keep GPT up to date with the latest versions of your files. This lets you bounce back and forth between the aider chat and your editor, to collaboratively code with GPT.\n  * If you are using gpt-4 through openai directly, you can add image files to your context which will automatically switch you to the gpt-4-vision-preview model\n\n## Usage\n\nRun the aider tool by executing the following command:\n\n    \n    \n    aider <file1> <file2> ...\n\nIf your pip install did not place the aider executable on your path, you can\ninvoke aider like this:\n\n    \n    \n    python -m aider.main <file1> <file2>\n\nReplace <file1>, <file2>, etc., with the paths to the source code files you\nwant to work on. These files will be \"added to the chat session\", so that GPT\ncan see their contents and edit them according to your instructions.\n\nYou can also just launch aider anywhere in a git repo without naming files on\nthe command line. It will discover all the files in the repo. You can then add\nand remove individual files in the chat session with the /add and /drop chat\ncommands described below. If you or GPT mention one of the repo's filenames in\nthe conversation, aider will ask if you'd like to add it to the chat.\n\nThink about the change you want to make and which files will need to be edited\n-- add those files to the chat. Don't add all the files in your repo to the\nchat. Be selective, and just add the files that GPT will need to edit. If you\nadd a bunch of unrelated files, GPT can get overwhelmed and confused (and it\ncosts more tokens). Aider will automatically share snippets from other,\nrelated files with GPT so it can understand the rest of your code base.\n\nAider also has many additional command-line options, environment variables or\nconfiguration file to set many options. See aider --help for details.\n\n## In-chat commands\n\nAider supports commands from within the chat, which all start with /. Here are\nsome of the most useful in-chat commands:\n\n  * /add <file>: Add matching files to the chat session.\n  * /drop <file>: Remove matching files from the chat session.\n  * /undo: Undo the last git commit if it was done by aider.\n  * /diff: Display the diff of the last aider commit.\n  * /run <command>: Run a shell command and optionally add the output to the chat.\n  * /voice: Speak to aider to request code changes with your voice.\n  * /help: Show help about all commands.\n\nSee the full command docs for more information.\n\n## Tips\n\n  * Think about which files need to be edited to make your change and add them to the chat. Aider has some ability to help GPT figure out which files to edit all by itself, but the most effective approach is to explicitly add the needed files to the chat yourself.\n  * Large changes are best performed as a sequence of thoughtful bite sized steps, where you plan out the approach and overall design. Walk GPT through changes like you might with a junior dev. Ask for a refactor to prepare, then ask for the actual change. Spend the time to ask for code quality/structure improvements.\n  * Use Control-C to safely interrupt GPT if it isn't providing a useful response. The partial response remains in the conversation, so you can refer to it when you reply to GPT with more information or direction.\n  * Use the /run command to run tests, linters, etc and show the output to GPT so it can fix any issues.\n  * Use Meta-ENTER (Esc+ENTER in some environments) to enter multiline chat messages. Or enter { alone on the first line to start a multiline message and } alone on the last line to end it.\n  * If your code is throwing an error, share the error output with GPT using /run or by pasting it into the chat. Let GPT figure out and fix the bug.\n  * GPT knows about a lot of standard tools and libraries, but may get some of the fine details wrong about APIs and function arguments. You can paste doc snippets into the chat to resolve these issues.\n  * GPT can only see the content of the files you specifically \"add to the chat\". Aider also sends GPT-4 a map of your entire git repo. So GPT may ask to see additional files if it feels that's needed for your requests.\n  * I also shared some general GPT coding tips on Hacker News.\n\n## Installation\n\nSee the installation instructions.\n\n## FAQ\n\nFor more information, see the FAQ.\n\n## Kind words from users\n\n  * The best AI coding assistant so far. -- Matthew Berman\n  * Hands down, this is the best AI coding assistant tool so far. -- IndyDevDan\n  * Aider ... has easily quadrupled my coding productivity. -- SOLAR_FIELDS\n  * It's a cool workflow... Aider's ergonomics are perfect for me. -- qup\n  * It's really like having your senior developer live right in your Git repo - truly amazing! -- rappster\n  * What an amazing tool. It's incredible. -- valyagolev\n  * Aider is such an astounding thing! -- cgrothaus\n  * It was WAY faster than I would be getting off the ground and making the first few working versions. -- Daniel Feldman\n  * THANK YOU for Aider! It really feels like a glimpse into the future of coding. -- derwiki\n  * It's just amazing. It is freeing me to do things I felt were out my comfort zone before. -- Dougie\n  * This project is stellar. -- funkytaco\n  * Amazing project, definitely the best AI coding assistant I've used. -- joshuavial\n  * I am an aider addict. I'm getting so much more work done, but in less time. -- dandandan\n  * After wasting $100 on tokens trying to find something better, I'm back to Aider. It blows everything else out of the water hands down, there's no competition whatsoever. -- SystemSculpt\n  * Best agent for actual dev work in existing codebases. -- Nick Dobos\n\n## About\n\naider is AI pair programming in your terminal\n\naider.chat/\n\n### Topics\n\ncli command-line openai gpt-3 gpt-4 chatgpt gpt-35-turbo\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\n### Stars\n\n7.5k stars\n\n### Watchers\n\n80 watching\n\n### Forks\n\n837 forks\n\nReport repository\n\n## Releases 35\n\nv0.28.0 Latest\n\nApr 9, 2024\n\n\\+ 34 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 15\n\n## Languages\n\n  * Python 93.5%\n  * Scheme 4.5%\n  * Other 2.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}

{"aid": "39996711", "title": "Livegrep: Interactively Grep Source Code", "url": "https://github.com/livegrep/livegrep", "domain": "github.com/livegrep", "votes": 1, "user": "tosh", "posted_at": "2024-04-10 23:22:12", "comments": 0, "source_title": "GitHub - livegrep/livegrep: Interactively grep source code. Source for http://livegrep.com/", "source_text": "GitHub - livegrep/livegrep: Interactively grep source code. Source for\nhttp://livegrep.com/\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlivegrep / livegrep Public\n\n  * Notifications\n  * Fork 168\n  * Star 1.9k\n\nInteractively grep source code. Source for http://livegrep.com/\n\n### License\n\nView license\n\n1.9k stars 168 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# livegrep/livegrep\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n24 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nnelhageProperly handle selecting backend on page load (#388)0240485 \u00b7\n\n## History\n\n1,572 Commits  \n  \n### .circleci\n\n|\n\n### .circleci\n\n| Attempt to fix both CI jobs (#287)  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Bump github actions versions (#357)  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| Support queries with multiple path: terms (#380)  \n  \n### client/test\n\n|\n\n### client/test\n\n| Bump rules_protobuf  \n  \n### cmd\n\n|\n\n### cmd\n\n| Update head ref patches (#342)  \n  \n### doc/examples/livegrep\n\n|\n\n### doc/examples/livegrep\n\n| Add config option for file extension, language mapping (#369)  \n  \n### docker\n\n|\n\n### docker\n\n| Disable the interactive dialogue in APT (#373)  \n  \n### jsonframe\n\n|\n\n### jsonframe\n\n| Bump rules_protobuf  \n  \n### server\n\n|\n\n### server\n\n| Properly handle selecting backend on page load (#388)  \n  \n### src\n\n|\n\n### src\n\n| Add ignore_symlinks option (default off) (#382)  \n  \n### test\n\n|\n\n### test\n\n| Support queries with multiple path: terms (#380)  \n  \n### third_party\n\n|\n\n### third_party\n\n| Upgrade libgit2  \n  \n### tools\n\n|\n\n### tools\n\n| Support queries with multiple path: terms (#380)  \n  \n### web\n\n|\n\n### web\n\n| Properly handle selecting backend on page load (#388)  \n  \n### .bazelignore\n\n|\n\n### .bazelignore\n\n| Use rules_js instead of org_dropbox_rules_node (#356)  \n  \n### .bazelrc\n\n|\n\n### .bazelrc\n\n| Support queries with multiple path: terms (#380)  \n  \n### .bazelrc.ci\n\n|\n\n### .bazelrc.ci\n\n| Support queries with multiple path: terms (#380)  \n  \n### .bazelrc.circle\n\n|\n\n### .bazelrc.circle\n\n| Attempt to fix both CI jobs (#287)  \n  \n### .bazelversion\n\n|\n\n### .bazelversion\n\n| Upgrade Bazel, rules_go, Go SDK versions (#351)  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add support for walking a custom-ordered subset of filesystem paths (#4)  \n  \n### BUILD\n\n|\n\n### BUILD\n\n| Support queries with multiple path: terms (#380)  \n  \n### COPYING\n\n|\n\n### COPYING\n\n| License under the 2-clause BSD license.  \n  \n### README.md\n\n|\n\n### README.md\n\n| Fix a few references in the README (#352)  \n  \n### WORKSPACE\n\n|\n\n### WORKSPACE\n\n| Support queries with multiple path: terms (#380)  \n  \n### package.sh\n\n|\n\n### package.sh\n\n| CI Updates - Docker Images of livegrep to GHCR & BuildBuddy for Bazel (...  \n  \n### travisdeps.sh\n\n|\n\n### travisdeps.sh\n\n| Add bazel build in Travis  \n  \n## Repository files navigation\n\n# Livegrep\n\nLivegrep is a tool, partially inspired by Google Code Search, for interactive\nregex search of ~gigabyte-scale source repositories. You can see a running\ninstance at http://livegrep.com/.\n\n## Building\n\nlivegrep builds using bazel. You will need to install with a version matching\nthat in .bazelversion. Running bazel via bazelisk will download the right\nversion automatically.\n\nlivegrep vendors and/or fetches all of its dependencies using bazel, and so\nshould only require a relatively recent C++ compiler to build.\n\nOnce you have those dependencies, you can build using\n\n    \n    \n    bazel build //...\n\nNote that the initial build will download around 100M of dependencies. These\nwill be cached once downloaded.\n\n## Invoking\n\nTo run livegrep, you need to invoke both the codesearch backend index/search\nprocess, and the livegrep web interface.\n\nTo run the sample web interface over livegrep itself, once you have built both\ncodesearch and livegrep:\n\nIn one terminal, start the codesearch server like so:\n\n    \n    \n    bazel-bin/src/tools/codesearch -grpc localhost:9999 doc/examples/livegrep/index.json\n\nIn another, run livegrep:\n\n    \n    \n    bazel-bin/cmd/livegrep/livegrep_/livegrep\n\nIn a browser, now visit http://localhost:8910/, and you should see a working\nlivegrep.\n\n## Using Index Files\n\nThe codesearch binary is responsible for reading source code, maintaining an\nindex, and handling searches. livegrep is stateless and relies only on the\nconnection to codesearch over a TCP connection.\n\nBy default, codesearch will build an in-memory index over the repositories\nspecified in its configuration file. You can, however, also instruct it to\nsave the index to a file on disk. This has the dual advantages of allowing\nindexes that are too large to fit in RAM, and of allowing an index file to be\nreused. You instruct codesearch to generate an index file via the -dump_index\nflag and to not launch a search server via the -index_only flag:\n\n    \n    \n    bazel-bin/src/tools/codesearch -index_only -dump_index livegrep.idx doc/examples/livegrep/index.json\n\nOnce codeseach has built the index, this index file can be used for future\nruns. Index files are standalone, and you no longer need access to the source\ncode repositories, or even a configuration file, once an index has been built.\nYou can just launch a search server like so:\n\n    \n    \n    bazel-bin/src/tools/codesearch -load_index livegrep.idx -grpc localhost:9999\n\nThe schema for the codesearch configuration file defined using protobuf in\nsrc/proto/config.proto.\n\n## livegrep\n\nThe livegrep frontend accepts an optional position argument indicating a JSON\nconfiguration file; See doc/examples/livegrep/server.json for an example, and\nserver/config/config.go for documentation of available options.\n\nBy default, livegrep will connect to a single local codesearch instance on\nport 9999, and listen for HTTP connections on port 8910.\n\n## github integration\n\nlivegrep includes a helper driver, livegrep-github-reindex, which can\nautomatically update and index selected github repositories. To download and\nindex all of my repositories (except for forks), storing the repos in repos/\nand writing nelhage.idx, you might run:\n\n    \n    \n    bazel-bin/cmd/livegrep-github-reindex/livegrep-github-reindex -user=nelhage -forks=false -name=github.com/nelhage -out nelhage.idx\n\nYou can now use nelhage.idx as an argument to codesearch -load_index.\n\n## Local repository browser\n\nlivegrep provides the ability to view source files directly in livegrep, as an\nalternative to linking files to external viewers. This was initially\nimplemented by @jboning here. There are a few ways to enable this. The most\nimportant steps are to\n\n  1. Generate a config file that livegrep can use to figure out where your source files are (locally).\n  2. Pass this config file as an argument to the frontend (-index-config)\n\n### Generating index manually\n\nSee doc/examples/livegrep/server.json for an example config file, and\nserver/config/config.go for documentation on available options. To enable the\nfile viewer, you must include an IndexConfig block inside of the config file.\nAn example IndexConfig block can be seen at doc/examples/livegrep/index.json.\n\nTip: For each repository included in your IndexConfig, make sure to include\nmetadata.url_pattern if you would like the file viewer to be able to link out\nto the external host. You'll see a warning in your browser console if you\ndon't do this.\n\n### Generating index with livegrep-github-reindex\n\nIf you are already using the livegrep-github-reindex tool, an IndexConfig\nindex file is generated for you, by default named \"livegrep.json\".\n\nRun the indexer\n\n    \n    \n    bazel-bin/cmd/livegrep-github-reindex/livegrep-github-reindex_/livegrep-github-reindex -user=xvandish -forks=false -name=github.com/xvandish -out xvandish.idx ```\n\nThe indexer will have done these main things:\n\n  1. Clone (or update) all repositories for user=xvandish to/in repos/xvandish\n  2. Create an IndexConfig file - repos/livegrep.json\n  3. Create a code index, this is whats used to search - ./xvandish.idx\n\nHere's an abbreviated version of what your directory might look like after\nrunning the indexer.\n\n    \n    \n    livegrep \u2502 xvandish.idx \u2514\u2500\u2500\u2500repos \u2502 \u2502 livegrep.json \u2502 \u2514\u2500\u2500\u2500xvandish \u2502 \u2514\u2500\u2500\u2500repo1 \u2502 \u2514\u2500\u2500\u2500repo2 \u2502 \u2514\u2500\u2500\u2500repo3\n\n### Using your generated index\n\nNow that you generated an index file, it's time to run livegrep with it.\n\nRun the backend:\n\n    \n    \n    bazel-bin/src/tools/codesearch -load_index xvandish.idx -grpc localhost:9999\n\nRun the frontend in another shell instance with the path to the index file\nlocated at repos/livegrep.json.\n\n    \n    \n    bazel-bin/cmd/livegrep/livegrep_/livegrep -index-config ./repos/livegrep.json\n\nIn a browser, now visit http://localhost:8910 and you should see a working\nlivegrep. Search for something, and once you get a result, click on the file\nname or a line number. You should now be taken to the file browser!\n\n## Docker images\n\nLivegrep's CI builds Docker images into the livegrep organization docker\nrepository on every merge to main. They should be generally usable. For\ninstance, to build+run a livegrep index of this repository, you could run:\n\n    \n    \n    docker run -v $(pwd):/data ghcr.io/livegrep/livegrep/indexer /livegrep/bin/livegrep-github-reindex -repo livegrep/livegrep -http -dir /data docker network create livegrep docker run -d --rm -v $(pwd):/data --network livegrep --name livegrep-backend ghcr.io/livegrep/livegrep/base /livegrep/bin/codesearch -load_index /data/livegrep.idx -grpc 0.0.0.0:9999 docker run -d --rm --network livegrep --publish 8910:8910 ghcr.io/livegrep/livegrep/base /livegrep/bin/livegrep -docroot /livegrep/web -listen=0.0.0.0:8910 --connect livegrep-backend:9999\n\nAnd then access http://localhost:8910/\n\nYou can also find the docker-compose config powering livegrep.com in the\nlivegrep/livegrep.com repository.\n\n## Resource Usage\n\nlivegrep builds an index file of your source code, and then works entirely out\nof that index, with no further access to the original git repositories.\n\nThe index file will vary somewhat in size, but will usually be 3-5x the size\nof the indexed text. livegrep memory-maps the index file into RAM, so it can\nwork out of index files larger than (available) RAM, but will perform better\nif the file can be loaded entirely into memory. Barring that, keeping the disk\non fast SSDs is recommended for optimal performance.\n\n## Regex Support\n\nLivegrep uses Google's re2 regular expression engine, and inherits its\nsupported syntax.\n\nRE2 is mostly PCRE-compatible, but with some mostly-deliberate exceptions\n\n## LICENSE\n\nLivegrep is open source. See COPYING for more information.\n\n## About\n\nInteractively grep source code. Source for http://livegrep.com/\n\n### Resources\n\nReadme\n\n### License\n\nView license\n\nActivity\n\nCustom properties\n\n### Stars\n\n1.9k stars\n\n### Watchers\n\n33 watching\n\n### Forks\n\n168 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 3\n\n  * livegrep/base\n  * livegrep/indexer\n  * livegrep/nginx\n\n## Contributors 50\n\n\\+ 36 contributors\n\n## Languages\n\n  * C++ 50.6%\n  * Go 22.4%\n  * JavaScript 12.5%\n  * Starlark 5.2%\n  * CSS 4.4%\n  * HTML 3.6%\n  * Other 1.3%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

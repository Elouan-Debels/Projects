{"aid": "39996475", "title": "When teaching computer architecture, why are universities using obscure CPUs?", "url": "https://academia.stackexchange.com/questions/209300/when-teaching-computer-architecture-why-are-universities-using-obscure-or-even", "domain": "academia.stackexchange.com", "votes": 12, "user": "redbell", "posted_at": "2024-04-10 22:45:33", "comments": 2, "source_title": "When teaching Computer Architecture, why are universities using obscure or even made-up CPUs? Why not x86, ARM or RISC-V?", "source_text": "When teaching Computer Architecture, why are universities using obscure or\neven made-up CPUs? Why not x86, ARM or RISC-V? - Academia Stack Exchange\n\n#### Stack Exchange Network\n\nStack Exchange network consists of 183 Q&A communities including Stack\nOverflow, the largest, most trusted online community for developers to learn,\nshare their knowledge, and build their careers.\n\nVisit Stack Exchange\n\nTeams\n\nQ&A for work\n\nConnect and share knowledge within a single location that is structured and\neasy to search.\n\nLearn more about Teams\n\n# When teaching Computer Architecture, why are universities using obscure or\neven made-up CPUs? Why not x86, ARM or RISC-V?\n\nAsk Question\n\nAsked 2 days ago\n\nModified today\n\nViewed 42k times\n\nThis question shows research effort; it is useful and clear\n\n34\n\nSave this question.\n\nShow activity on this post.\n\nOn the FERIT University, we are using the PicoBlaze CPU to study Computer\nArchitecture. And the same is true for a university in Argentina that the\nGitHub user agustiza is from. And we ran into a potential problem during\nCOVID: what if physical laboratory exercises are canceled, and students run\ninto technical problems trying to run existing assemblers and emulators for\nPicoBlaze on their computers? That's why my Computer Architecture professor\nasked me to create my PicoBlaze assembler and emulator runnable in a browser.\nHad we used x86 or ARM instead of PicoBlaze, such a problem would be\nimpossible.\n\nOn the Faculty of Electrical Engineering and Computing (Fakultet\nelektrotehnike i ra\u010dunarstva; FER), University of Zagreb, they are using a CPU\ncalled FRISC, which was designed at FER and is even less widely used than\nPicoBlaze.\n\nWhy are universities doing that? Wouldn't that time be better spent teaching\nthe basics of x86 assembly or ARM assembly? Aren't future programmers way more\nlikely to need x86 assembly or ARM assembly than PicoBlaze assembly or FRISC\nassembly?\n\n  * computer-science\n\nShare\n\nCC BY-SA 4.0\n\nImprove this question\n\nFollow this question to receive notifications\n\nedited 10 hours ago\n\nTrunk\n\n4,45899 silver badges2828 bronze badges\n\nasked 2 days ago\n\nFlatAssemblerFlatAssembler\n\n1,22422 gold badges55 silver badges1313 bronze badges\n\n10\n\n  * 57\n\nBecause computer architecture is not computer programming.\n\n\u2013 Jon Custer\n\n2 days ago\n\n  * 6\n\nI learned some reduced MIPS assembler and used a simulator for it. As a bonus,\nwe later created with an actual CPU with a hardware description language and\nran our assembler on an FPGA.\n\n\u2013 usr1234567\n\nyesterday\n\n  * 12\n\nThe early ARM processors were really nice to teach with, but as they have\nbecome more complicated the learning curve is steeper and there is a bigger\ninvestment of time required before you can get into assembly language\nprogramming. It makes sense to start with a simple made up CPU to teach\nprinciples, especially as so few programmers actually do much low level\nprogramming. Having said which, ideally you want an architecture for which\noptimising compilers exist as understanding what the compiler can do is a good\nreason to know some architecture. This is from a CS perspective, rather than\nEE\n\n\u2013 Dikran Marsupial\n\nyesterday\n\n  * 3\n\nI went to the University of Manchester in the UK and we did use ARM to learn\narchitectural principles but I feel this is cheating slightly because our head\nwas Prof Steve Furber who created most of the instruction set.\n\n\u2013 mjaggard\n\nyesterday\n\n  * 15\n\nWhen I was an undergrad, they taught computer architecture with a made-up\nprocessor (I've forgotten its name). In another class, they taught programming\nassembly language with Sun Microsystems' SPARC architecture (a real computing\nplatform at the time). The specifics of both the made-up processor and the\nreal SPARC processor have the same real-world relevance now -- none. It's the\nconcepts learned that have lasting value.\n\n\u2013 Matt\n\nyesterday\n\n| Show 5 more comments\n\n## 15 Answers 15\n\nReset to default\n\nThis answer is useful\n\n105\n\nSave this answer.\n\nShow activity on this post.\n\nComputer architectures fall into a number of different categories, but within\nthese categories, the conceptual differences are not huge. The primary purpose\nin teaching about architectures is to convey the ideas, not the details of an\narchitecture, and so it is not unreasonable to pick one that is \"prototypical\"\nfor a category. Other disciplines do the same: You're not learning English as\na Foreign Language reading Shakespeare or Joyce, but simpler texts. You're not\nlearning calculus starting with partial differential equations. You're not\nlearning mechanics using nonlinear elastoplasticity but point masses in a\npotential field.\n\nTo the specific point of x86: This is not a great architecture to learn from.\nThis is principally related to the fact that it is 50 years old and is\ncarrying around a lot of baggage for backward compatibility. For example, not\nall registers can be used in all instructions, it still has the weird FP\nstack, the FP stack registers are overlaid with the XMM registers, there are\nseveral sets of floating point instructions, etc. If you're new to processor\narchitectures, this is really not the best one to start with. But if you've\nunderstood how CISC architectures work in general, then it will not be very\ndifficult to figure out the differences in assembler syntax, etc. So I think\nit is entirely reasonable to start learning with simpler architectures first\n-- perhaps with ones that are simple because they are academic and do not need\nto address the real world constraints actual processors such as x86 or ARM\nones have to satisfy.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered 2 days ago\n\nWolfgang BangerthWolfgang Bangerth\n\n95.3k88 gold badges207207 silver badges343343 bronze badges\n\n8\n\n  * 10\n\nA lot of these type of classes don't even get into floating point, making all\nthe x86 floating point complexities moot. You can easily teach a reasonable\nsubset of x86 or especially ARM without stepping in that much complexity. One\nmight quibble about other disciplines; nobody teaches Esperanto or Toki Pona\nbefore teaching any other foreign language. You're starting with simple\nEnglish, not a prototypical language.\n\n\u2013 prosfilaes\n\nyesterday\n\n  * 6\n\n@prosfilaes We can say we start learning pidgin english as babies when\nlearning to talk. That's where we are in this comparison with the students.\nAnd why comparisons are inherently flawed.\n\n\u2013 mishan\n\nyesterday\n\n  * 16\n\n\"[...] the FP stack registers are overlaid with the XMM registers.\" Close.\nThey're overlaid with the MMX registers (mm#). The XMM registers (xmm#) came\nwith SSE and are their own thing. Intel is terrible at naming.\n\n\u2013 Cole Tobin\n\nyesterday\n\n  * 3\n\n@ColeTobin Ah, good point. But I think the point I wanted to make still came\nacross.\n\n\u2013 Wolfgang Bangerth\n\n22 hours ago\n\n  * 3\n\nDidn't RISC-V start as an educational architecture to circumvent the\ncomplexities and licensing of other architectures? Now that it is picking up\nsteam, won't adopting it bring the best of both worlds together?\n\n\u2013 HUSMEN\n\n12 hours ago\n\n| Show 3 more comments\n\nThis answer is useful\n\n29\n\nSave this answer.\n\nShow activity on this post.\n\nI did my undergrad and masters at FER (Faculty of Electrotechnics and\nComputing, University of Zagreb, Croatia), and went through my computer\narchitecture course using FRICS. And I have to say, I loved it.\n\nThe reason we were officially given (which is similar in sentiment to the\nspeculations in several answers), is that they are teaching us the basics of\nRISC processors, rather than any one specific instruction set. This manifested\nas a number of practical advantages:\n\n  * The whole FRISC reference manual was 4 pages long. The print version of Wikibooks x86 Assembly has 90 pages. Intel 80286 (processor picked at random) reference manual has 513 pages. We were allowed to have a copy of the manual in the exams, and I had a much easier time searching through a paper copy of 4 pages than 513 (and it was also much lighter to carry around).\n  * The textbook based on FRISC came out in 2002, and a second edition in 2004. The instruction set never changed. x86 was developed based on the Intel 8086 microprocessor, in 1978, and the instruction set underwent constant changes and additions\n  * FRISC will never be out of date -- it will always be a perfectly valid, functional, microprocessor designed primarily for simplicity and teaching purposes. Neither x86 nor ARM assembly have been designed with simplicity in mind; and which ever instruction set you select, there is a good chance you'll be hopelessly out of date in a few years.\n\nWhile I eventually went a different direction, computer architectures was one\nof my favourite subjects during my studies. I'm sure that in good part, that\nis down to how it was implemented. Specifically, after working through a\nnumber of problems and examples in FRISC, I felt ready to tackle any assembly,\nregardless of the length of the manual or size of the instruction set, because\nI understood the governing concepts well.\n\nWe applied the same principle in other courses as well. For example, we also\nworked with our bespoke version of an embedded OS (as part of the \"Embedded\nOperating Systems\" course), which we built from the ground up, rather than\nstudying something off the shelf such as Android. This allowed us to study the\ncore concepts, rather than focusing on specific implementation flavours.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\npenelopepenelope\n\n11.9k11 gold badge4242 silver badges8383 bronze badges\n\n1\n\n  * 1\n\nLast time I looked, the Intel x86-64 architecture reference was ten volumes.\n\n\u2013 Mark\n\n1 hour ago\n\nAdd a comment |\n\nThis answer is useful\n\n20\n\nSave this answer.\n\nShow activity on this post.\n\nThe question is similar to \"when you learn English, why do you read obscure or\neven made-up texts instead of real-world texts like Shakespeare or James\nJoyce?\", or \"when we learn Newtonian mechanics, why do we perform carefully\ncontrolled experiments instead of looking at real-world events?\"\n\nAnd the answer is the same: Real-world texts/CPUs/events are complex, hybrid\nbeasts which defy simple categorization. A professor of mine got almost angry\nat me when I asked him \"and how does the Pentium (yes, it was back then) fit\nin the CISC/RISC scheme?\" because it incorporates elements of both\n(pipelining, prefetch and a complex instruction set): \"It is a hybrid mess and\nwe can learn nothing from it.\"\n\nYou learn concepts first, and then you apply them to the mess you find outside\nthe lab.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\nPeter - Reinstate MonicaPeter - Reinstate Monica\n\n1,43499 silver badges1414 bronze badges\n\n1\n\n  * Except as correctly pointed out in other comments when learning (foreign) languages you do start with English (a comparatively complex language) straight away rather than a simplistic language just to teach the concepts. Not saying that hiding complexity isn't good (just like when you teach English you will still start with teaching patterns, even if those patterns barely hold in the long term), but there are many ways to hide complexity beyond implementing your only idealistic alternative~\n\n\u2013 David Mulder\n\n2 hours ago\n\nAdd a comment |\n\nThis answer is useful\n\n18\n\nSave this answer.\n\nShow activity on this post.\n\nPerhaps... (here comes anecdotal \"evidence\")\n\nWhen personal organizers appeared, a large institution provided \"Palm Pilots\"\nto one half of the staff, giving the other 50% \"Apple Newtons\". Half way\nthrough the trial period, all staff were made to swap and use the other\ndevice.\n\nResults: More than 75% of the staff reported \"the second device was more\ndifficult to understand and to use than the first.\"\n\nLook up \"Familiarity Bias\" and consider its relevance to implementing your\n\"better idea.\"\n\nEDIT: Responding to some comments below, here is a delicious 3 minute\nportrayal of \"Familiarity Bias\". Enjoy.\n\nReligion is not innate; it is acquired. Nondenominational tutorage should be\nconsidered a virtue.\n\nEDIT #2: Making it plain:\n\n> Familiarity bias can lead to biased decision-making, missed opportunities,\n> and limited diversity of thought or experience. It is important to be aware\n> of this bias and to try to base decisions on objective criteria, rather than\n> simply relying on familiarity or comfort.\n\nBy using an artificial teaching tool, perceptive students will be constantly\nreminded that the primary purpose of the tool is to give substance to the\nabstract concepts they are meant to understand. Being aware that the tool is\nartificial, perceptive students will (it is hoped) avoid investing themselves\nin memorising its particulars and peculiarities, focussing their attention on\nthe abstract concepts they are to master. Mastery of those concepts can,\nlater, be applied to whatever implementation they encounter in their career.\n\nIn the anecdote above, the \"guinea pig\" staff invested themselves in mastering\nthe first device in their hands. Although both devices fulfilled the\nrequirements of their purpose, upon finding \"the other\" device required both\n\"unlearning\" and \"learning\", many were more comfortable with and expressed a\npreference for whichever was their first experience of a PDA.\n\n> Our minds want us to stay in the comfort zone and hates a change in\n> scenario.\n\nConsider: \"I find that music genre is not to my taste (although millions of\nothers find that genre appealing.)\"\n\nOr: Schools usually teach only one of several algorithms to compute the\nproduct of two integers. Few individuals, upon discovering that there are\nalternative algorithms, bother to consider them and \"stick with what they\nknow.\" (This is my opinion, only; not founded on any research.)\n\nQuotes borrowed from \"thebehavioralscientist.com\" and \"enrichwise.com\"\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited 1 hour ago\n\nanswered yesterday\n\nFe2O3Fe2O3\n\n36744 bronze badges\n\nNew contributor\n\nFe2O3 is a new contributor to this site. Take care in asking for\nclarification, commenting, and answering. Check out our Code of Conduct.\n\n18\n\n  * 6\n\nSo if the second architecture is going to be more difficult to understand and\nuse than the first, the best course of action would be to first teach the\narchitecture you expect the students to normally use - i.e. x86, ARM etc. Why\nbother with obscure architectures if it's just going to make students' life\nhard later? -- Was that what you're trying to say? If so, it doesn't explain\nthe core question, i.e. why universities use obscure architectures. I'd highly\nrecommend explaining how your answer is relevant, rather than backhandedly\ntelling people \"look it up yourself\".\n\n\u2013 R.M.\n\nyesterday\n\n  * 5\n\n@R.M. The community is Academia. My presumption is that readers are well able\nto do their own research and draw their own conclusions. The \"case study\"\npresents some evidence leading to the observation that \"The First Cut Is The\nDeepest\" (i.e. \"Familiarity Bias\"). I see no need to dumb-down this answer.\nTeaching the concepts based on the OP's suggested \"Made Up\" hardware\nimplementation ensures that students stay focussed on learning the concept,\nand don't get lost \"in the weeds\" of a particular real-world implementation\ntheir career may never include.\n\n\u2013 Fe2O3\n\nyesterday\n\n  * 7\n\n@R.M. (tongue-in-cheek) Why do so many cling to Pi when Tau is a MUCH more\nsensible circle constant? Why do Americans cling to inches, feet, yards and\nmiles when metric measures are so much easier to manipulate? Familiarity,\nperhaps? Avoiding inducing in students a preference for this architecture\ninstead of that architecture seems to me to be a laudable justification.\n\n\u2013 Fe2O3\n\nyesterday\n\n  * 18\n\nIn regular academia the presumption is to clearly lay out your arguments so\nothers can understand them, rather than couch them in coy insinuations. I'm\nnot asking you to dumb down your answer. I'm just asking you to actually\nexplicate the point you're trying to make. -- Teaching concepts and getting\npast architectural preferences does indeed seem a laudable justification, but\nit's a justification you never explicitly say. Instead of being tongue-in-\ncheek in comments, why don't you just clarify in your answer?\n\n\u2013 R.M.\n\nyesterday\n\n  * 6\n\nWhile this is an enlightening anecdote about Familiarity Bias for those who\nhaven't yet familiar (ha!) with it, this does not answer the question. :) It\nis too open ended to be considered containing a claim.\n\n\u2013 justhalf\n\n15 hours ago\n\n| Show 13 more comments\n\nThis answer is useful\n\n15\n\nSave this answer.\n\nShow activity on this post.\n\nBecause real life CPUs tend to be overly complicated due to features market is\npaying for, so it is much easier to learn from a made up architecture to get\nthe principles, then you try to sort out the bane of real life architectures.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\nGabriel DiegoGabriel Diego\n\n28011 silver badge66 bronze badges\n\n1\n\n  * 4\n\nNot just deliberate \"features\", but also weird quirks like x86 memory\nsegmentation or MIPS visible branch delay slots, which get in the programmer's\nway but have to be kept around because of backwards compatibility.\n\n\u2013 dan04\n\n7 hours ago\n\nAdd a comment |\n\nThis answer is useful\n\n9\n\nSave this answer.\n\nShow activity on this post.\n\nKinda surprised how you got so far, but - especially in theoretical subjects\nlike CS - the concrete content of a lecture is often just an example for the\nmore abstract concept(s) that are actually being taught. You're not supposed\nto remember teh solution to specific integrals in calculus. You're supposed to\nrealize how integrals work in general and how they can be used. [Then you MAY\ntake deep dives in specialty classes about it]\n\nSo of course your prof talks about a massively simplified CPU instead of the\nknown-bloated, absurdly complex (and also potentially outdated) x86. Because\nclose to zero programmers will ever need concrete knowledge of x86 commands.\nWhat they need is a rough idea of how assembly works and what it is.\n\nBecause what use are the intricacies of x86 (probably only present due to\nlegacy reasons) when the current trend is ARM anyway? And what use would be\ngoing hard in (for all students) on ARM if that turns out to not be the\nfuture?\n\nInstead, you present a model architecture in which you can clearly and easily\ndemonstrate the abstract ideas that CS students need as a baseline.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\nHobbamokHobbamok\n\n61344 silver badges88 bronze badges\n\n1\n\n  * ne nice thing about using a soft core like a picoblaze for this is that students can easily go on to add the features of a modern processor, caches, branch predictors, deeper pipelines, and then study the tradeoffs by actually running the resulting bitstream on a suitable FPGA. You can tweak the processor to your hearts content and see how the changes impact execution of a test program. One cannot do that with hard IP.\n\n\u2013 Dan Mills\n\n5 hours ago\n\nAdd a comment |\n\nThis answer is useful\n\n7\n\nSave this answer.\n\nShow activity on this post.\n\nThe use of made up/simple CPU's has a long history.\n\nhttps://en.wikipedia.org/wiki/The_Art_of_Computer_Programming was originally\nwritten in MIX https://en.wikipedia.org/wiki/MIX_(abstract_machine) a made up\n6 bit assembly language.\n\nThis has now been replaced by MMIX a made up 64 bit RISC architecture\nhttps://en.wikipedia.org/wiki/MMIX, as Knuth said.\n\n\"MMIX is a computer intended to illustrate machine-level aspects of\nprogramming. In my books The Art of Computer Programming, it replaces MIX, the\n1960s-style machine that formerly played such a role... I strove to design\nMMIX so that its machine language would be simple, elegant, and easy to learn.\nAt the same time I was careful to include all of the complexities needed to\nachieve high performance in practice, so that MMIX could in principle be built\nand even perhaps be competitive with some of the fastest general-purpose\ncomputers in the marketplace.\"\n\nSo the use of made up/simple CPU's has a long history.\n\nThe rationale of creating an easy to use machine language that illustrates the\nprinciples is still there. I think I remember there being a discussion about\nMMIX or ARM for the replacement of MIX, but it was a while ago, and did not\nreally concern me.\n\nA lot of Computer Architecture courses use/used MIPS since it was both real\nworld and one of the original RISC implementations. Stanford MIPS vs Berkley\nRISC. MIPS became a CPU and RISC ended up the name for the family of CPU's.\n\nRISC has less to learn and thus is easier to teach.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited 13 hours ago\n\nTrunk\n\n4,45899 silver badges2828 bronze badges\n\nanswered yesterday\n\nRonald DuncanRonald Duncan\n\n7111 bronze badge\n\nNew contributor\n\nRonald Duncan is a new contributor to this site. Take care in asking for\nclarification, commenting, and answering. Check out our Code of Conduct.\n\nAdd a comment |\n\nThis answer is useful\n\n6\n\nSave this answer.\n\nShow activity on this post.\n\nMany years ago as a student, in addition to the reasons give in other answers,\nI was told one of the reasons the class was taught using MIPS instead of x86\nwas to discourage a specific form of cheating. With x86 it would have been\nrelatively simple to write the assignment in C/C++, run a disassembler on the\noutput and then turn that in as your work.\n\nWith virtualization and cross platform compilers much more widely available\ntoday, I suspect the deterrence value is less than it was. OTOH C and C++ are\nno longer widely used first languages making the other half of the potential\ncheat harder.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\nDan Is Fiddling By FirelightDan Is Fiddling By Firelight\n\n16166 bronze badges\n\nNew contributor\n\nDan Is Fiddling By Firelight is a new contributor to this site. Take care in\nasking for clarification, commenting, and answering. Check out our Code of\nConduct.\n\n3\n\n  * 1\n\nAmusingly, I teach the C++ sequence which leads into our school's architecture\n& assembly course (in MIPS). On the very last day I recommend and show to\nstudents that they can write future assignments in C++, compile, and check\ndisassembly for clues on their later assembly work. But I highly doubt\nanyone's ever followed through with that.\n\n\u2013 Daniel R. Collins\n\n23 hours ago\n\n  * 1\n\n@DanielR.Collins I assume the biggest gotcha would be not getting compiler\nsettings right. Any debug support or optimization would complicate things well\nbeyond the naive easy to understand assembly the students would want.\n\n\u2013 Dan Is Fiddling By Firelight\n\n23 hours ago\n\n  * 1\n\nI'll say that for the guts of a few simple functions I've tested it on (with\nGCC), that hasn't struck me as a problem. Probably identifying what parts of\nthe function boilerplate/setup/return can be elided/ignored strike me as a\nbigger issue.\n\n\u2013 Daniel R. Collins\n\n23 hours ago\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\nThese aren't all fake, frequently a CPU is just no-longer in common use or\nused in unusual applications.\n\nMicro and Pico Blaze CPUs are a real thing. They're a design used often to add\na CPU core to an FPGA project. Similarly MIPS R4000 CPUs were real so all the\ncomputer architecture books that use them are based on a real CPU even if\nclasses do everything in SPIM and MARS now.\n\nBoth of these have significant commonality with modern RISC-V CPUs.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\ndavolfmandavolfman\n\n64111 silver badge55 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\nArchitecture is not the same as assembly language programming.\n\nWhen I used to teach programming at the University of Hertfordshire, UK, the\ncomputer architecture course involved the students building a CPU from the\nground up (using logic gates, but done in a circuit simulator). It was only\npossible because it was a 4 bit CPU with just 16 memory locations (of 4 bits)\nand at most 16 instructions. You couldn't do much with such a machine, but I\nthink they learnt a lot in the process.\n\nOne of the little programming exercises I gave them was to write a software\nsimulation of the instruction set, but even back then (in 1990), most\nprogrammers would never actually write any code in assembly language.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered yesterday\n\nHugheyDrambuieHugheyDrambuie\n\n5122 bronze badges\n\nNew contributor\n\nHugheyDrambuie is a new contributor to this site. Take care in asking for\nclarification, commenting, and answering. Check out our Code of Conduct.\n\n2\n\n  * 1\n\nSame here, but to add insult to injury the simulator was built inside FORTRAN\nV (yes, that's not a typo, Fortran 5), which we all had to learn to do the lab\nexercises. And most of my classmates had never used any version of FORTRAN\nbefore...\n\n\u2013 arp\n\n19 hours ago\n\n  * 2\n\nYou had FORTAN-V? We had to do it in FORTRAN-IV. Wasn't a problem for the\nPDP11 instructions, but Data Structures (linked lists, for example) and\nCompiler Construction were somewhat complicated without pointers or recursion\nsupport.\n\n\u2013 Daniel Glasser\n\n11 hours ago\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\nTo share a slightly different perspective: I used to teach assembly language\nin x86, using Kip Irvine's Assembly Language for Intel-Based Computers. This\nwas about 20 years ago; a few things had become awkward at the time, and\nthey'd be moreso now.\n\nOne is getting access to tools. There was a time when Microsoft Macro\nAssembler (MASM) was a standalone product; this book (4E) came with a CD with\na version for students. Nowadays this isn't an available standalone product,\nand it would be a lot harder to procure and run tools like that.\n\nTwo is that there's a lot of overhead and increasing security barriers to make\nactual native (say) Windows executable programs. Traditionally we'd ramp-up\nstudents by having them make simple Windows .COM files, but that option is no\nlonger available. (So: steeper onramp.)\n\nThree is that the ability to run native code is more and more buried under\ncountless layers of system architecture, virtualization, and so forth. One of\nmy favorite things as a student, and I'd still do it with my students, was to\ntake control, read and write to a floppy disk from assembly. Even at the time\nI was teaching, it was getting hard to dig up old floppy disks that we could\nuse for this exercise. There was an instruction (INT 21h, Function 7305h; see\nIrvine Ch. 14) that would let you read and write disk sectors directly; this\nworked on the Windows 95 line, but was defunct in the Windows NT line with its\ntighter security system.\n\nThat said, I'm not entirely sold on abandoning use of the widely-used x86\narchitecture -- just like I think using a widely-used real-world workplace\nprogramming language is of benefit, while some others differ. When we were\ndiscussing who would take over my current school's architecture course about 6\nyears ago, my instinct was still to use the Irvine text for x86. Another\ninstructor took it using MIPS instead (Patterson text).\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered 23 hours ago\n\nDaniel R. CollinsDaniel R. Collins\n\n36.6k1313 gold badges9999 silver badges143143 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\nIn defense of the instructors, such as tenured/tenure-track professors and\nvisiting/adjunct professors, and teaching assistants (T.A.s), it takes a lot\nof work to create/update a set of presentation slides, lecture notes,\nlaboratory/lab assignments, and course projects for courses on computer\narchitecture, or even their requisite course on computer systems.\n\nThis has to be done in addition to preparing for the lessons that they teach\n(or lectures, if you like), lab sessions that they manage, and\nrecitation/tutorial sessions that they lead/teach. Also, they have to\ncreate/update and grade assignments, course projects, and examinations.\n\nThere is a need to find a working toolchain for the chosen instruction set\narchitecture (I.S.A.) for the computer architecture course.\nCommercial/Proprietary toolchains, such as those commercial electronic design\nautomation (EDA) software, require technical support by the teaching\nassistants/T.A.s. Open-source EDA software can alleviate the problem, but\nstill need more industry buy-in. If a lot of hiring managers create job\ndescriptions that include open-source EDA tools and recently created hardware\ndescription/construction languages (HDLs/HCLs), such as CHisel HDL, PyMTL, and\nPyRTL, a lot of T.A.s would support the use of such open-source EDA tools,\nHDLs, and HCLs.\n\nUsing the x86-64, including Intel 64 (Intel's version of x86-64), as the\nI.S.A. to teach computer architecture is a nightmare. I.S.A.s based on Complex\nInstruction Set Computers (CISC) are much harder to teach than I.S.A.s based\non Reduced Instruction Set Computers (RISC). Hence, using x86 I.S.A. to teach\n32-bit processor architectures is no better.\n\nARM I.S.A. is a RISC I.S.A., but still contains enough complex/complicated\ninstructions that make teaching annoying.\n\nThis leads many professors to choose between ARM I.S.A., which has\nincreasingly been used in embedded systems, and MIPS I.S.A., which is not\nadopted in new products for embedded systems and other computer systems.\n\nThe PicoBlaze I.S.A. is from Xilinx, Inc., and comes with a supported\ntoolchain to help people learn to use it in designing processors on its FPGA\nboards, and develop software in assembly language and compilers.\n\nThis leaves RISC-V I.S.A. as a good option that allows students to share their\nprojects online, which helps reflect the quality of their skill set while\nworking on such projects. RISC-V International (previously RISC-V Foundation)\nhad a Web page that shared university teaching resources for RISC-V and\nassociated toolchains for simulating/emulating RISC-V processors, and\nassembling/compiling computer programs in assembly languages. It also contains\nbenchmark programs for validating implementations of RISC-V processors in\nRegister-Transfer Level (RTL).\n\nBut, it still takes work for instructors and T.A.s to familiarize themselves\nwith a new I.S.A., toolchain or EDA tools, and update course materials for the\nnew I.S.A.. This can be resolved if they are rewarded with grants by their\nacademic departments to do so.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered 23 hours ago\n\nGiovanniGiovanni\n\n4122 bronze badges\n\nNew contributor\n\nGiovanni is a new contributor to this site. Take care in asking for\nclarification, commenting, and answering. Check out our Code of Conduct.\n\nAdd a comment |\n\nThis answer is useful\n\n3\n\nSave this answer.\n\nShow activity on this post.\n\nMy opinion is that it is better to teach computer organization with an\narchitecture that is fully defined and without unanticipated/unknown side\neffects. It reduces the complexity of grading assignments. It also doesn't\nbias the students towards any particular architecture they will encounter in\nthe wild.\n\nWhen the instruction set is easy to decode it is easier to write assemblers\nand disassemblers, which are both common assignments.\n\nOne last thing is that you don't have to deal with copyrights on existing\ninstruction set architectures.\n\nI first learned pdp11 assembly in 1978, then 6502, 8080, pdp8 and TMS1909.\nNever had a problem picking up any other to this day.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered 11 hours ago\n\nDaniel GlasserDaniel Glasser\n\n13122 bronze badges\n\nNew contributor\n\nDaniel Glasser is a new contributor to this site. Take care in asking for\nclarification, commenting, and answering. Check out our Code of Conduct.\n\nAdd a comment |\n\nThis answer is useful\n\n2\n\nSave this answer.\n\nShow activity on this post.\n\nAs an addition to the answer provided by Wolfgang, by using more esoteric\narchitectures, you begin to think critically by figuring out what in a\ncomputer architecture works and what doesn't by giving a comparative analysis\nto a student of the subject whom might otherwise bring in pre-conceived\nnotions about what is good/bad about an architecture. By studying something\nthey are almost certainly unfamiliar with, they can make their own educated\ndecisions about the study.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited 5 hours ago\n\nBuzz\n\n20.4k1414 gold badges6767 silver badges9999 bronze badges\n\nanswered 22 hours ago\n\nSonarSoundProgrammingSonarSoundProgramming\n\n2111 bronze badge\n\nNew contributor\n\nSonarSoundProgramming is a new contributor to this site. Take care in asking\nfor clarification, commenting, and answering. Check out our Code of Conduct.\n\nAdd a comment |\n\nThis answer is useful\n\n1\n\nSave this answer.\n\nShow activity on this post.\n\nOften times such tools are developed mostly with one goal in mind, namely to\nteach you concepts.\n\nYou can look at it from a different angle. What if indeed you go along with a\npopular architecture? You might get so accustomed to it, that you will fail to\ngrasp key concepts just because what you have picked has them in a specific\nway or maybe hides something for the sake of convenience.\n\nYou can observe this with many self-taught software developers - they go for\nlanguage X, get familiar with what it offers but once they have to switch to\nsomething very different, their stellar programming skills get demolished. Try\nswitching between C, Haskell, VHDL and Java and see what happens. This is\nbecause they know the syntax, they also know many of the functionalities the\nlanguage offers but they don't really know what exactly happens underneath.\nPerfect example for this is web development in general. While creating a\nsimple button with React or whatever and showing on the screen does give you\ninstant results, many forget that this button is running inside a web browser\non an operating system. Alone the web browser is a very complex piece of\nsoftware not to mention everything around it. And the button itself follows a\nspecific set of design decisions made by the people behind the library you are\nusing. If you don't have UI and UX expertise, yes, you will be able to create\nsomething by stitching things together but you will probably never be able to\ncome up with something very unique.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered 7 hours ago\n\nrbaleksandarrbaleksandar\n\n13511 bronze badge\n\nAdd a comment |\n\n## You must log in to answer this question.\n\nHighly active question. Earn 10 reputation (not counting the association\nbonus) in order to answer this question. The reputation requirement helps\nprotect this question from spam and non-answer activity.\n\n##\n\nNot the answer you're looking for? Browse other questions tagged\n\n  * computer-science\n\n.\n\n  * Featured on Meta\n  * Upcoming initiatives on Stack Overflow and across the Stack Exchange network\n\n  * New Focus Styles & Updated Styling for Button Groups\n\n#### Related\n\n3\n\nWhy are some computer science conferences not included in the CORE ranking?\n\n2\n\nWhy are computer science conference steering committees generally not elected\nby the community?\n\n#### Hot Network Questions\n\n  * Re-selecting best sales forecasting model each month. Is this overfitting?\n\n  * I need a word for the atmosphere between two people\n\n  * Split String Function Implementation in Python\n\n  * Weird expression: \u3007\u30fb\u4e00\u79d2\n\n  * Can you use existing in home coax cables to connect a Leaf antenna to TV?\n\n  * Do Trump's lawyers have a fiduciary duty to delay the proceedings?\n\n  * Why did Nicaragua file a case against only Germany at the ICJ?\n\n  * First mention of Einstein in Science Fiction?\n\n  * Extreme anxiety before boarding a plane\n\n  * How do 'zip' recursively but exclude files of a certain name wherever it appear in any subfolder?\n\n  * How to equally split college fund between 2 children going to college 5 years apart?\n\n  * Cheapest unstoppable, mandatory infinite loops in Magic the Gathering\n\n  * The dimension of the Clifford algebra for the Dirac equation\n\n  * How precise are future Solar eclipse timing, path and dates, what could change timing/path?\n\n  * No stomach, how do I eat?\n\n  * When teaching Computer Architecture, why are universities using obscure or even made-up CPUs? Why not x86, ARM or RISC-V?\n\n  * What do I do if my players are acting in a way that is meta-gaming and are refusing to accept my decision?\n\n  * Is the EUPL circumventable?\n\n  * Help in understanding the evaluation inside Plot\n\n  * Is Johnson Graph J(N, 2) circulant?\n\n  * Almost sure probability in convergence, versus 0 probability in reality\n\n  * Can You Train A Neural Network By Simply Giving It Ratings Each Time It Runs?\n\n  * What is the difference between mind and consciousness?\n\n  * What's the name of the room where you watch a movie inside the movie theater?\n\nQuestion feed\n\n# Subscribe to RSS\n\n  * Blog\n  * Facebook\n  * Twitter\n  * LinkedIn\n  * Instagram\n\nSite design / logo \u00a9 2024 Stack Exchange Inc; user contributions licensed\nunder CC BY-SA. rev 2024.4.8.7402\n\n## We Care About Your Privacy\n\nWe and our 4 partners store and/or access information on a device, such as\nunique IDs in cookies to process personal data. You may accept or manage your\nchoices by clicking below, including your right to object where legitimate\ninterest is used, or at any time in the privacy policy page. These choices\nwill be signaled to our partners and will not affect browsing data.\n\nCookie Policy.\n\n### We and our partners perform the following based on your settings:\n\nUse precise geolocation data. Actively scan device characteristics for\nidentification. Understand audiences through statistics or combinations of\ndata from different sources. Store and/or access information on a device.\nDevelop and improve services. Create profiles to personalise content. Measure\ncontent performance. Use limited data to select content. Measure advertising\nperformance. Use limited data to select advertising. Create profiles for\npersonalised advertising. Use profiles to select personalised advertising. Use\nprofiles to select personalised content.\n\n## About Your Privacy\n\nWe process your data to deliver content or advertisements and measure the\ndelivery of such content or advertisements to extract insights about our\nwebsite. We share this information with our partners on the basis of consent\nand legitimate interest. You may exercise your right to consent or object to a\nlegitimate interest, based on a specific purpose below or at a partner level\nin the link under each purpose. These choices will be signaled to our vendors\nparticipating in the Transparency and Consent Framework. Cookie Policy\n\n### Manage Consent Preferences\n\n#### Strictly Necessary Cookies\n\nAlways Active\n\nThese cookies are necessary for the website to function and cannot be switched\noff in our systems. They are usually only set in response to actions made by\nyou which amount to a request for services, such as setting your privacy\npreferences, logging in or filling in forms. You can set your browser to block\nor alert you about these cookies, but some parts of the site will not then\nwork. These cookies do not store any personally identifiable information.\n\n  * ##### Deliver and present advertising and content 3 partners can use this purpose\n\nlabel\n\nCertain information (like an IP address or device capabilities) is used to\nensure the technical compatibility of the content or advertising, and to\nfacilitate the transmission of the content or ad to your device.\n\n  * ##### Ensure security, prevent and detect fraud, and fix errors 3 partners can use this purpose\n\nlabel\n\nYour data can be used to monitor for and prevent unusual and possibly\nfraudulent activity (for example, regarding advertising, ad clicks by bots),\nand ensure systems and processes work properly and securely. It can also be\nused to correct any problems you, the publisher or the advertiser may\nencounter in the delivery of content and ads and in your interaction with\nthem.\n\n  * ##### Identify devices based on information transmitted automatically 3 partners can use this purpose\n\nlabel\n\nYour device might be distinguished from other devices based on information it\nautomatically sends when accessing the Internet (for instance, the IP address\nof your Internet connection or the type of browser you are using) in support\nof the purposes exposed in this notice.\n\n#### Functional Cookies\n\nThese cookies enable the website to provide enhanced functionality and\npersonalisation. They may be set by us or by third party providers whose\nservices we have added to our pages. If you do not allow these cookies then\nsome or all of these services may not function properly.\n\n  * ##### Use precise geolocation data 2 partners can use this purpose\n\nWith your acceptance, your precise location (within a radius of less than 500\nmetres) may be used in support of the purposes explained in this notice.\n\n  * ##### Link different devices 3 partners can use this purpose\n\nAlways Active\n\nIn support of the purposes explained in this notice, your device might be\nconsidered as likely linked to other devices that belong to you or your\nhousehold (for instance because you are logged in to the same service on both\nyour phone and your computer, or because you may use the same Internet\nconnection on both devices).\n\n#### Performance Cookies\n\nThese cookies allow us to count visits and traffic sources so we can measure\nand improve the performance of our site. They help us to know which pages are\nthe most and least popular and see how visitors move around the site. All\ninformation these cookies collect is aggregated and therefore anonymous. If\nyou do not allow these cookies we will not know when you have visited our\nsite, and will not be able to monitor its performance.\n\n  * ##### Store and/or access information on a device 4 partners can use this purpose\n\nCookies, device or similar online identifiers (e.g. login-based identifiers,\nrandomly assigned identifiers, network based identifiers) together with other\ninformation (e.g. browser type and information, language, screen size,\nsupported technologies etc.) can be stored or read on your device to recognise\nit each time it connects to an app or to a website, for one or several of the\npurposes presented here.\n\n  * ##### Develop and improve services 3 partners can use this purpose\n\nInformation about your activity on this service, such as your interaction with\nads or content, can be very helpful to improve products and services and to\nbuild new products and services based on user interactions, the type of\naudience, etc. This specific purpose does not include the development or\nimprovement of user profiles and identifiers.\n\n  * ##### Measure content performance 0 partners can use this purpose\n\nInformation regarding which content is presented to you and how you interact\nwith it can be used to determine whether the (non-advertising) content e.g.\nreached its intended audience and matched your interests. For instance,\nwhether you read an article, watch a video, listen to a podcast or look at a\nproduct description, how long you spent on this service and the web pages you\nvisit etc. This is very helpful to understand the relevance of (non-\nadvertising) content that is shown to you.\n\n  * ##### Measure advertising performance 4 partners can use this purpose\n\nInformation regarding which advertising is presented to you and how you\ninteract with it can be used to determine how well an advert has worked for\nyou or other users and whether the goals of the advertising were reached. For\ninstance, whether you saw an ad, whether you clicked on it, whether it led you\nto buy a product or visit a website, etc. This is very helpful to understand\nthe relevance of advertising campaigns.\n\n#### Targeting Cookies\n\nThese cookies are used to make advertising messages more relevant to you and\nmay be set through our site by us or by our advertising partners. They may be\nused to build a profile of your interests and show you relevant advertising on\nour site or on other sites. They do not store directly personal information,\nbut are based on uniquely identifying your browser and internet device.\n\n  * ##### Understand audiences through statistics or combinations of data from different sources 2 partners can use this purpose\n\nReports can be generated based on the combination of data sets (like user\nprofiles, statistics, market research, analytics data) regarding your\ninteractions and those of other users with advertising or (non-advertising)\ncontent to identify common characteristics (for instance, to determine which\ntarget audiences are more receptive to an ad campaign or to certain contents).\n\n  * ##### Create profiles to personalise content 1 partners can use this purpose\n\nInformation about your activity on this service (for instance, forms you\nsubmit, non-advertising content you look at) can be stored and combined with\nother information about you (such as your previous activity on this service or\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (which might for example include possible\ninterests and personal aspects). Your profile can be used (also later) to\npresent content that appears more relevant based on your possible interests,\nsuch as by adapting the order in which content is shown to you, so that it is\neven easier for you to find content that matches your interests.\n\n  * ##### Use limited data to select advertising 4 partners can use this purpose\n\nAdvertising presented to you on this service can be based on limited data,\nsuch as the website or app you are using, your non-precise location, your\ndevice type or which content you are (or have been) interacting with (for\nexample, to limit the number of times an ad is presented to you).\n\n  * ##### Create profiles for personalised advertising 3 partners can use this purpose\n\nInformation about your activity on this service (such as forms you submit,\ncontent you look at) can be stored and combined with other information about\nyou (for example, information from your previous activity on this service and\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (that might include possible interests and\npersonal aspects). Your profile can be used (also later) to present\nadvertising that appears more relevant based on your possible interests by\nthis and other entities.\n\n  * ##### Use profiles to select personalised advertising 4 partners can use this purpose\n\nAdvertising presented to you on this service can be based on your advertising\nprofiles, which can reflect your activity on this service or other websites or\napps (like the forms you submit, content you look at), possible interests and\npersonal aspects.\n\n  * ##### Use profiles to select personalised content 1 partners can use this purpose\n\nContent presented to you on this service can be based on your content\npersonalisation profiles, which can reflect your activity on this or other\nservices (for instance, the forms you submit, content you look at), possible\ninterests and personal aspects, such as by adapting the order in which content\nis shown to you, so that it is even easier for you to find (non-advertising)\ncontent that matches your interests.\n\n### Cookie List\n\nlabel\n\nConsent Leg.Interest\n\nlabel\n\nlabel\n\nlabel\n\n", "frontpage": true}

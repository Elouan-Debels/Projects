{"aid": "39993898", "title": "Test Cloud Deployments Locally", "url": "https://noop.dev/blog/test-cloud-deployments-locally/", "domain": "noop.dev", "votes": 1, "user": "noop_joe", "posted_at": "2024-04-10 18:08:01", "comments": 0, "source_title": "Test Cloud Deployments Locally", "source_text": "Test Cloud Deployments Locally\n\nnoop_\n\nBlog Docs Community Changelog Log in\n\n  * Blog\n  * Docs\n  * Community\n  * Changelog\n  * Log in\n\n#### Recent posts\n\n  * Blog\n\nTest Cloud Deployments Locally 2024-04-10\n\n  * Blog\n\nHTTPS Traffic Routing for Localhost 2024-03-27\n\n  * Blog\n\nBuild Apps Not Infrastructure 2024-03-20\n\n  * Blog\n\nAnnouncing Workshop 2024-02-28\n\n  * Guide\n\nLaunch a Rails App 2024-01-26\n\n  * All posts \u2192\n\nBlog\n\nApril 10, 2024\n\n# Test Cloud Deployments Locally\n\nJoe Kendall\n\nSave time by testing operational aspects of your application locally.\n\nOne of the more time consuming parts of application development is getting an\napp from a local development environment to a deployed one.\n\nIf you\u2019re using Noop that transition happens without effort. But Noop Workshop\ncan make the transition easier, even if you\u2019re deploying elsewhere.\n\nOperational concepts available locally on Noop Workshop include:\n\n  * HTTPS endpoints without sending traffic over the internet\n  * Complete CI/CD pipeline\n  * Resource Dependencies: Block storage (Amazon S3 compatible API), Databases (PostgreSQL, MySQL and Amazon Dynamo DB), Caching (Redis)\n  * Private APIs\n  * Cron Jobs (Tasks)\n  * Migration Tasks\n\n## Local HTTPS\n\nWorkshop uses local HTTPS endpoints, mirroring the security characteristics of\nmost deployed environments. Local HTTPS eliminates one of the more common\ndivergences between local dev and production deployments, enabling the\ndevelopment of OAuth flows, setting secure cookies, connecting to secure APIs,\netc.\n\n## CI/CD\n\nFor any reasonably complicated app, it\u2019s hard to predict the exact build and\nruntime procedure, it\u2019s something developed through iteration. Progress is\nmade by executing a pipeline or deployment process (often triggered by a code\nchange published to source control) running in a cloud platform. It takes\ntime, and lots of it.\n\nWorkshop allows developers to experiment with the deployment pipeline locally:\nrefine the build process, run one-off migrations, establish the runtime\nconfiguration without sending code to a cloud platform. The result of this\niterative development is a locally-running application.\n\n## Resource Dependencies\n\nAnother challenge that presents itself once an app gets deployed is its\nconnection to Resources (databases, block storage, caches, etc.). Workshop\ncan\u2019t help set up your specific resource connections outside Noop. But while\nusing Workshop it\u2019s straightforward to make those connections, thus allowing\nyou to focus on more important parts of application development.\n\nWhen you develop using Workshop and deploy to Noop Cloud you can guarantee the\nresource connections will remain consistent and secure (locally and deployed).\n\n## Private APIs\n\nPrivate APIs (or Service Components) are one of Noop\u2019s killer features. The\nidea is simple: an API accessible only to other components of an application.\nIt\u2019s a no-extra-effort way to reduce the attack surface area of your apps \u2014\nand it\u2019s possible to set up and test locally.\n\nIn Noop Traffic gets to your application via an Endpoint. The Endpoint decides\nwhat application Environment to forward the request to. Once the request\narrives at an application environment, the environment will route the request\naccording to the Blueprint route configuration . If the Blueprint doesn\u2019t\nallow public traffic then requests coming from the Endpoint will not resolve.\nHowever, as long as the private component has a route, it is available to\nother components within the same application via the http://localstack\nhostname.\n\n## Cron Jobs (Tasks)\n\nIn Noop they\u2019re called Tasks \u2014 they function much like a cron job, with some\nextra abilities. A Task is scheduled in an application Blueprint. Tasks run\nalongside all your other application code, so it\u2019s possible to test how the\ntask and the running software function together, again nothing needs to get\ndeployed.\n\nTwo other Task callouts:\n\n  * Their execution is private. They don\u2019t require a public API endpoint to run. Private execution is a benefit over third-party scheduling services that require a public API endpoint to execute the job.\n  * They can also run in response to deployment lifecycle events, BeforeServices and BeforeTraffic. These events trigger tasks before new services are created in a deployment and before traffic is routed to the services, respectively.\n\n## Migration Tasks\n\nAs mentioned above, Tasks can run in response to deployment lifecycle events.\nThese events are appropriate times to make database migrations or otherwise\nprepare a new release for receiving user traffic.\n\nWorkshop makes it possible to observe these deployment behaviors without\ndeploying code to a cloud platform. It\u2019s a low-risk way to validate database\nupdates and ensure zero-downtime deployments.\n\n## Reducing Operational Effort\n\nThe goal of Noop is to make deploying and running software as close to zero-\neffort as possible. We believe one way to achieve that is to incorporate some\nof the operational setup into the local development process.\n\nThe concepts above are a start. Our changelog is a good place to hear about\nour progress. Or start developing with Workshop and let us know how we can\nimprove your development process!\n\nDownload our desktop app (which includes Workshop) with the button below. See\nour intro guide to get started.\n\nDownload Noop\n\nReleases\n\n### Be the first to know!\n\nThe requested platform isn't available today, but we are working on it.\n\n## On this page\n\n  1. Local HTTPS\n\n  2. CI/CD\n\n  3. Resource Dependencies\n\n  4. Private APIs\n\n  5. Cron Jobs (Tasks)\n\n  6. Migration Tasks\n\n  7. Reducing Operational Effort\n\n## Footer\n\n### Support\n\n  * Documentation\n  * Community\n  * Help and Advice\n\n### Company\n\n  * Blog\n  * Changelog\n\n### Legal\n\n  * Privacy\n  * Terms\n  * License\n\nInstagram X.com GitHub\n\n\u00a9 2024 Noop, Inc. All rights reserved.\n\nThis website uses cookies to collect visitor analytics data (Google Analytics)\nand provide interactive support through our chat widget (Intercom). See our\nPrivacy Policy.\n\n", "frontpage": false}

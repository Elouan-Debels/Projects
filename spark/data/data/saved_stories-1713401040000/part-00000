{"aid": "40068596", "title": "Putting the Serverless in Server-Sent Events", "url": "https://blog.vsahni.me/posts/putting-the-serverless-in-server-sent-events", "domain": "vsahni.me", "votes": 1, "user": "sharma-arjun", "posted_at": "2024-04-17 18:42:48", "comments": 0, "source_title": "Putting the Serverless in Server-Sent Events", "source_text": "Putting the Serverless in Server-Sent Events - Varun Sahni\n\n# Putting the Serverless in Server-Sent Events\n\nA solution to sending Server-Sent Events from serverless platforms\n\nPublished on 17th April 2024\n\nFor my last few projects, my tech stack has been very consistent: Astro,\nTurso, and Tailwind - hosted on Cloudflare Workers. More than once, a problem\nI've faced is streaming one-way data to clients from serverless environments.\nThis is due to the short run durations and limits imposed by serverless\nplatforms. This problem can be a major roadblock, especially when the\napplication requires real-time data streaming.\n\n### The Problem with Serverless and Data Streaming\n\nOne-way data streaming, which is a fairly common requirement in many\napplications, has proven to be particularly challenging on serverless\nplatforms. Traditional solutions are often convoluted and complicated to\nimplement. They often involve setting up additional infrastructure, which can\nintroduce more points of failure and complexity. This situation is far from\nideal and it begs for a simpler solution.\n\n### Introducing Flux: A Simple Solution for Data Streaming\n\nThe solution to this problem comes in the form of Flux, a simple HTTP proxy\nspecifically designed for data-streaming. Flux is created using Hono, a\nlightweight framework, running on Bun. It acts as a bridge between the\nserverless function and the client, allowing for seamless data streaming over\nServer-Sent Events (SSE). Essentially, Flux acts as a middleman; the server\nsends data to Flux, which then forwards it to the client as a stream.\n\nFlux is self-hostable: you can deploy it on your own infrastructure as long as\nit supports Bun.\n\n### Getting Started with Flux\n\nFlux is entirely open-source and available for anyone to use. A public\ninstance with some documentation is available at https://flux.vsahni.me.\nInstructions for self-hosting or contributing to the project are available on\nthe GitHub repository at https://github.com/notskamr/flux.\n\n", "frontpage": false}

{"aid": "40003068", "title": "HTTP/2 CONTINUATION Flood", "url": "https://nowotarski.info/http2-continuation-flood/", "domain": "nowotarski.info", "votes": 1, "user": "mooreds", "posted_at": "2024-04-11 15:13:38", "comments": 0, "source_title": "HTTP/2", "source_text": "HTTP/2 CONTINUATION Flood - nowotarski.info\n\nnowotarski.info\n\n# HTTP/2 CONTINUATION Flood\n\nPosted on April 3, 2024 by Bartek Nowotarski\n\ntl;dr: The CONTINUATION Flood is a class of vulnerabilities within numerous\nHTTP/2 protocol implementations. In many cases, it poses a more severe threat\ncompared to the Rapid Reset: a single machine (and in certain instances, a\nmere single TCP connection or a handful of frames) has the potential to\ndisrupt server availability, with consequences ranging from server crashes to\nsubstantial performance degradation. Remarkably, requests that constitute an\nattack are not visible in HTTP access logs.\n\n# What is the CONTINUATION Flood?\n\nIt is a new class of vulnerabilities in multiple implementations of HTTP/2\nprotocol. The root cause is an incorrect handling of HEADERS and multiple\nCONTINUATION frames which ultimately leads to Denial of Service.\n\nThe outcome depends on the implementation but ranges from instant crash after\nsending a couple of HTTP/2 frames, Out Of Memory crash, to CPU exhaustion\naffecting server availability.\n\nMore technical details can be found in HTTP/2 CONTINUATION Flood: Technical\nDetails post.\n\n# Affected projects\n\nThe maintainers of the following projects confirmed vulnerability\n(alphabetical order). Check respective security advisories for more\ninformation.\n\nShow projects which inherited the vulnerabilityHide projects which inherited\nthe vulnerability: projects using affected server or importing an affected\npackage. The list is not comprehensive.\n\nProject| Confirmed| Affected Versions| CVE ID| Links  \n---|---|---|---|---  \namphp/http| 2024-03-11| >= 2.0.0 && <= 2.1.0, <= 1.7.2| CVE-2024-2653|\nAdvisory  \nApache HTTP Server (httpd)| 2024-02-23| 2.4.17-2.4.58| CVE-2024-27316|\nAdvisory  \nApache Tomcat| 2024-01-25| <=11.0.0-M16, <=10.1.18, <=9.0.85, 8.5.0-8.5.98|\nCVE-2024-24549| Advisory*  \n\u21b3 cPanel| 2024-04-05| Forum  \n\u21b3 Easy Apache| 2024-04-09| Advisory  \n\u21b3 IBM| 2024-04-05| Advisory  \n\u21b3 NetApp| 2024-04-03| Advisory  \nApache Traffic Server| 2024-03-29| 8.0.0-8.1.9, 9.0.0-9.2.3| CVE-2024-31309|\nAdvisory  \nEnvoy proxy (oghttp)| 2024-02-27| 1.29.0, 1.29.1| CVE-2024-27919| Advisory  \nEnvoy proxy (nghttp2)| 2024-02-27| <=1.29.2| CVE-2024-30255| Advisory  \n\u21b3 Arista| 2024-04-03| Advisory  \nGolang| 2024-01-10| <=1.20, <=1.21.8, <=1.22.1| CVE-2023-45288**| Advisory  \n\u21b3 Arista| 2024-04-03| Advisory  \n\u21b3 Caddy| 2024-04-04| Issue  \n\u21b3 etcd| 2024-04-04| Issue  \n\u21b3 Gitea| 2024-04-05| PR  \n\u21b3 Google Cloud| 2024-04-03| Advisory  \n\u21b3 Moby| 2024-04-04| Commit  \n\u21b3 Kubernetes| 2024-04-03| Issue  \nh2 Rust crate| 2024-03-04| Advisory  \nnghttp2| 2024-03-08| <=1.60.0| CVE-2024-28182| Advisory  \n\u21b3 Arista| 2024-04-03| Advisory  \nNode.js| 2024-01-15| <=18.20.0, <=20.12.0, <=21.7.1| CVE-2024-27983| Advisory  \nTempesta FW| 2024-03-16| 0.7.0| CVE-2024-2758  \n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ***| 2024-04-04| CVE-2024-XXXX  \n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2024-04-04| CVE-2024-XXXX  \n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| -| -| -  \n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| -| -| -  \n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| -| -| -  \n  \n* Apache Tomcat issue was not directly related to CONTINUATION Flood but was revealed by an exploit for this vulnerability. Because of this Tomcat team decided to publish a new release before embargo end date. ** Golang team used an allocated-but-unused CVE ID left over from 2023, probably by mistake. *** Projects affected that have not publicly confirmed it yet are currently hidden.\n\nNOT affected: Nginx, Jetty, HAProxy, NetScaler, Varnish.\n\n# Mitigation\n\nUpgrade affected software to the latest version that contains the fix for this\nvulnerability. If no fix is available consider temporarily disabling HTTP/2 on\nthe server.\n\n# Comparison to HTTP/2 Rapid Reset\n\nSimilarly to HTTP/2 Rapid Reset, CONTINUATION Flood can cause Denial of\nService on an affected server. There are, however, a lot of differences which\nmake CONTINUATION Flood a more severe attack technique:\n\n  * Rapid Reset used a combination of HEADERS (with END_STREAM and END_HEADERS flags set) and RST_STREAM frames which means that standard mitigations like rate limiting could at least limit the damage. Also, the server admin would see a lot of inbound server requests and be alerted. During CONTINUATION Flood attack not a single request is made (no END_HEADERS flag)! Admins do not see any requests in the logs!\n  * In many implementations just one TCP connection was enough to crash the server (and in some cases with a very small amount of data sent) during the CONTINUATION Flood attack. On contrary, Rapid Reset was used in DDoS attacks (in most cases using a botnet was required for an attack to be successful).\n  * Rapid Reset was exploited in the wild (check Cloudflare and Google posts). The CONTINUATION Flood was reported to CERT/CC so vendors were able to coordinate code fixes to prevent serious damage.\n\nComparison to older HTTP/2 vulnerabilities can be found in HTTP/2 CONTINUATION\nFlood: Technical Details post.\n\n# Is it a bug in HTTP/2 protocol?\n\nIt is implementation bug in multiple HTTP/2 implementations. RFC9113 in\nsection \u201c10.5.1. Limits on Field Block Size\u201d mentions multiple security issues\nthat may arrise if CONTINUATION frames are not handled correctly. At the same\ntime, it does not mention a specific case in which CONTINUATION frames are\nsent without final END_HEADERS flag which can have repercussions on affected\nservers.\n\n# Timeline\n\n  * 2024-01-05: Issue discovered by Bartek Nowotarski.\n  * 2024-01-08: Multiple reports sent to vendors.\n  * 2024-01: Confirmations from Golang, Node.js, Apache Tomcat teams.\n  * 2024-01-25: Report sent to CERT/CC.\n  * 2024-02-14: Invitation to participate in vulnerability coordination from CERT/CC. Multiple vendors join.\n  * 2024-02: Confirmations from Apache httpd, Envoy teams.\n  * 2024-03: Confirmations from Apache Traffic Server, nghttp2, amphp, Tempesta teams.\n  * 2024-04-03: Embargo on vulnerability information ends.\n\n    * 17:20 UTC: CERT/CC publishes a Vulnerability Note.\n    * 20:06 UTC: Topic started on oss-sec mailing list.\n  * 2024-04-04: National CERTs/CSIRTs (Spain, Romania, Italy, Japan, Belgium, Singapore, France) warn about the vulnerability.\n\n# Technical Details\n\nMore technical details can be found in HTTP/2 CONTINUATION Flood: Technical\nDetails post.\n\n# In the news\n\n  * Hacker News - #1 link for hours, thank you!\n  * Cup o\u2019 Go podcast - great explanation of the bug in less than 10 minutes.\n  * SecurityWeek\n  * Bleeping Computer\n\nSubscribe to be notified about new articles!\n\nNo more than 1 email per month!\n\nPowered by EmailOctopus\n\n2024 \u00a9 Bartek Nowotarski | Archie Theme | Built with Hugo\n\n", "frontpage": false}

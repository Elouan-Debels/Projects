{"aid": "40040534", "title": "Investigating a Traditional Codec: SVT-AV1", "url": "https://deeprender.ai/blog/investigating-traditional-codec-svt-av1", "domain": "deeprender.ai", "votes": 1, "user": "peutetre", "posted_at": "2024-04-15 13:49:48", "comments": 0, "source_title": "Investigating a Traditional Codec: SVT-AV1", "source_text": "DeepRender - Investigating a Traditional Codec: SVT-AV1\n\nTechnology\n\n### Investigating a Traditional Codec: SVT-AV1\n\n  * ALEX SHAW 06 Feb\n\nPart of the journey to build the best video codec involves diving deep into\nthe competition. AOMedia Video 1 (AV1) created by the Alliance of Open Media\n(AOM) is regarded as one of the best codecs available today, and unlike\ncomparable codecs, AV1 is royalty-free and open-source.\n\nIf AV1 is so good, why are H.264/AVC and H.265/HEVC much more common? Well,\nthe pre-existing encoder for AV1 called libaom was too slow for most use\ncases. Scalable Video Technology AV1 (SVT-AV1) drastically reduced encoding\ntime compared to libaom, making AV1 a candidate for use in real-time\nstreaming. With the SVT-AV1 encoder, the AV1 codec is an enticing codec choice\nfor many in the video industry going forward.\n\nWith that in mind, this blog explores the performance of SVT-AV1 and walks\nthrough its capabilities in different use cases. We will match encoding\nsettings to different use cases, show some benefits and drawbacks of the\ndifferent choices we can make, and explain some video codec benchmarking\ntechniques.\n\n#### Choosing between Modes\n\nWithin SVT-AV1 there are two main modes: low-delay and random access. Each\nmode is designed for a specific use case.\n\nLow-delay mode is used for many applications like video conferencing, cloud\ngaming, and screen casting. In low-delay mode, the sender encodes videos frame\nby frame at a rate faster than the playback speed (e.g. >30 frames per second\nfor a 30FPS video stream). Generally, the encoder only uses previous frames to\nencode the next. This limits the video quality for a given bitrate, but makes\nreal-time encoding possible, as the recipient can receive each frame in order\nand immediately display it once decoded.\n\nRandom access mode is best suited for the Video-on-Demand setting, where\nvideos only need to be encoded once. This means encoding time can be\narbitrarily long and the goal is to get the best resulting video for a given\namount of compression. Random access mode references both previous and future\nframes during encoding, resulting in a lower bitrate. However, this also means\nthat random access mode can\u2019t be used in a low-latency live streaming setting\nbecause the future frames are unknown.\n\nIn the still image shown above, this parrot is in the middle of abruptly\nmoving its head. In low-delay mode, the encoder only has access to the\nprevious location of the head, resulting in a worse image with some pixels out\nof place to the left of the beak. On the other hand, in random access mode,\nthe location of the bird\u2019s head in the next frame can be used to make the\nmotion look smoother, removing these artefacts.\n\n#### Rate-Distortion Tradeoff\n\nDistortion refers to the difference between the compressed video and the\noriginal video. There are many different visual quality metrics, but the one\nthat has the highest correlation with human perception is VMAF, which includes\nboth frame-wise and temporal components (between frames). VMAF ranges from 0\nto 100, with 100 being the highest visual quality. In addition to VMAF, the\nframe-wise peak signal-to-noise ratio (PSNR) computed in YUV colour space is\nalso commonly used. It is computed using the mean squared error between the\ndistorted and the original image.\n\nIn an ideal world, every video would have the maximum visual quality, but we\nalso care about the size of the resulting video file. The file size\nmeasurement we care about is bitrate, which is the number of bits of\ninformation per second in the video. For a given visual quality (e.g. a VMAF\nscore of 85), the best codec will have the lowest bitrate.\n\nRate-distortion curves plot the measured distortion of a video against its\nbitrate and are used to understand the codec performance. To control the\nvisual quality to get a representative sample across bitrates, a rate control\nmode is applied. In this case, it fixes the amount of compression applied to\neach subsection of frame in the video to make a fair comparison across modes\nusing the quantization parameter (QP). Each point on these rate-distortion\ncurves corresponds to a chosen QP. Whilst there exist more sophisticated rate\ncontrol modes that are more commonly used in practice (such as constant\nquality, average bitrate and constant bitrate modes) this rate control mode is\nvery useful in video encoding research as it is the simplest form of rate-\ndistortion control.\n\nThese rate-distortion curves are generated by encoding the videos from the\nMCL-JCV dataset with a set of 7 QP values, computing the quality metrics for\neach video, and averaging them across the 30 videos. On the rate-distortion\ncurves shown above, it\u2019s clear that the random access mode achieves a lower\nbit rate at the same quality level. Thus, when encoding times are\nunrestricted, random access mode yields higher compression efficiency than\nlow-delay mode.\n\n#### SVT-AV1 Usage\n\nSVT-AV1 can be run through FFmpeg or through their standalone encoder and\ndecoder called SvtAv1EncApp and SvtAv1DecApp. In addition to choosing between\nmodes, several preset options are also available which enable or disable the\nfeatures used during encoding. Lower preset numbers have more time-consuming\nfeatures enabled; such as using a larger range of macroblock sizes, using non-\nsquare macroblocks, and performing global motion compensation. These features\ndecrease the overall bitrate but maintain a higher visual quality through\nsmarter compression.\n\nAbove, we show a visual comparison of two different presets. The image encoded\nwith preset 11 has less detail and some artefacts near Lady Blue Bird\u2019s face\nand tail, while the image encoded with preset 5 has no clarity issues. Of the\ntwo presets, preset 5 has a higher compression efficiency but a longer\nencoding time, as it uses more encoding features. In addition to choosing\nbetween modes, it\u2019s important to choose a preset that is fast enough for the\nuse case.\n\nIn addition to finding visual differences, we compare the VMAF rate-distortion\ncurves across the different presets in random access mode. Here we can see\nthat for both metrics, the curve shifted furthest to the left and closest to\nthe top is the slowest option, preset 5, meaning it has the highest quality\nand the lowest bit rate across the same set of QP values. As expected, the\nfastest option preset 11 has the lowest quality-to-bitrate ratio of the\ndisplayed presets.\n\n#### Choosing a Bit Depth\n\nEncoding in 10-bit offers several advantages over encoding in 8-bit. 10-bit\nincreases the visual quality by increasing the available range of colours,\nmaking gradients smoother, and reducing banding artefacts. In terms of\ncompression efficiency, using 10-bit encoding reduces quantization and\nrounding errors. With a small cost in file size and decoding efficiency,\n10-bit is generally known to perform better than 8-bit in terms of both\nobjective metrics and subjective quality.\n\nAbove is an example of banding artefacts, which may appear when the range of\ncolours available to the codec is not sufficient to represent a smooth\ngradient. The left gradient represents what might happen with 8-bit encodes,\nwhere there are clear rings of colours. The right gradient shows how 10-bit\nencodes can allow for a smooth change from light to dark.\n\nIn addition to visual quality, increasing the bit depth can improve objective\nquality.\n\nAccording to VMAF and PSNR YUV, random access mode performs better in 10-bit\nthan 8-bit, matching the expected relationship that 10-bit improves visual\nquality. Unexpectedly, for low-delay mode, the PSNR YUV and VMAF plots suggest\nthat 8-bit is better than 10-bit.\n\nAt the end of the day, the subjective visual quality of the videos is the most\nimportant and these videos must be visually inspected to understand this\nresult. Objective metrics are necessary to standardise the measurement of\ncompression quality between codecs, but they must be used in conjunction with\nsubjective quality scores.\n\n#### Summary\n\nThroughout this blog, we explored some of the different modes and features\navailable in SVT-AV1. We showed that varying the codec parameters can cause\nmajor shifts in compression ratios, visual quality, and encoding times, which\nhelps show why it\u2019s crucial to align the codec parameters with different use\ncases. Through common benchmarking techniques like analysing rate-distortion\ncurves and visually inspecting the videos, we learned about the performance of\nSVT-AV1 in a variety of use cases. Now that we\u2019ve assessed the performance of\nSVT-AV1 for different scenarios, we can make fair comparisons to other codecs.\n\nThanks for reading!\n\n  * Twitter\n  * LinkedIn\n\n### RELATED BLOGS\n\nVIEW ALL BLOGS\n\nTechnology\n\n### MLOps at Deep Render\n\n  * SAIF HAQ\n  * 18 Aug\n\nBusiness\n\n### AI Video Compression: Where Magic Meets Technology\n\n  * CHRI BESENBRUCH\n  * 25 Oct\n\nTechnology\n\n### Plenoxels: Radiance Fields without Neural Networks\n\n  * HAMZA ALAWIYE\n  * 19 Apr\n\nFor any commercial enquiries, corporate or academic partnerships, get in\ntouch. We're always happy to chat with fellow inquisitive minds.\n\nEmail\n\ncontact@deeprender.ai\n\naddress\n\nTechspace, 38-40 Commercial Rd, London E1 1LN\n\nSocial\n\n  * linkedin\n  * twitter\n\nDesign and website build by boldly \u00a9 Deep Render 2024. All Rights Reserved.\n\n### Compression without limits\n\n", "frontpage": false}

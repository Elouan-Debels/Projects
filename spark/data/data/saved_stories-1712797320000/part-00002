{"aid": "39994478", "title": "DxScript", "url": "https://script.dxfeed.com/", "domain": "dxfeed.com", "votes": 1, "user": "nopipeline", "posted_at": "2024-04-10 19:01:08", "comments": 0, "source_title": "dxScript Language", "source_text": "dxScript Language\n\n# dxScript\n\nFunctional and embeddable\n\nDeclarative and extensible\n\nStatically typed and concise\n\nFunctional and embeddable\n\nDeclarative and extensible\n\nprogramming language for efficient time-series analysis\n\n    \n    \n    fun RSI { in x: number in n = 14 in avg = &ema def change = x - x[1] def net = change.avg(n) def total = change.abs.avg(n) def ratio = if (total != 0) net / total else 0 out = 50 * (ratio + 1) }\n\nBuilt-in series support\n\nEverything is a series! Everything has a history.\n\n    \n    \n    in n = 1 def change = price - price[n] out previousChange = change[n]\n\nConcise and user-friendly syntax\n\nType inference and optional semicolons. Default and named parameters.\n\n    \n    \n    def t = f + f(1) + f(a=2) // t == 16 fun f { in a = 5; out = a + a }\n\nRich standard library\n\nMoving averages and predicates. Math and helper functions.\n\n    \n    \n    def smoothed = ema(price, 10) out filter = price > maximum(smoothed, 10) out anotherFilter = any(price < price[1], n=3)\n\nTry an online playground to see the language in action!\n\ndxScript is developed by dxFeed\n\n", "frontpage": false}

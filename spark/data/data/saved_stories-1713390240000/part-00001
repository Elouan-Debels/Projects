{"aid": "40066248", "title": "How to \"Peel the Onion\" in Behavioral Interviews", "url": "https://www.thesoftwarelounge.com/how-to-peel-the-onion-in-behavioral-interviews/", "domain": "thesoftwarelounge.com", "votes": 1, "user": "softwarelounge", "posted_at": "2024-04-17 15:41:32", "comments": 0, "source_title": "How to \"Peel the Onion\" in Behavioral Interviews", "source_text": "How to \"Peel the Onion\" in Behavioral Interviews\n\nThe Software Lounge\n\nApr 15, 2024 7 min read Hiring\n\n# How to \"Peel the Onion\" in Behavioral Interviews\n\nPhoto by K8 / Unsplash\n\nThere are layers to every question \u2013 and every answer! I\u2019m not sure why an\nonion, of all things, was chosen for this analogy, but \"peeling the onion\" is\na must-know technique as an interviewer. Active listening and digging deep are\nthe critical components of this interviewing approach and you\u2019ll need to use\nboth to be effective.\n\nI\u2019ll assume you got the interviewing basics figured out and that you\u2019re\nlooking to level up your skill some more. By now, you\u2019ve noticed that some\ncandidates are well-prepared for their interviews and that some answers will\nbe rehearsed. (Maybe even \"too\" rehearsed.) If you just took them at face\nvalue, you\u2019d miss out on a lot of other interesting bits, such as:\n\n  * What was really at stake?\n  * What was the thought process?\n  * What other options were explored? What was missed?\n  * How did the candidate deliver their solution?\n\nSimilarly, some candidates (especially a junior levels) won\u2019t have answers\nthat are well-refined and they might not be great at storytelling. In these\nsituations, your job will be to collect all the details and help them share\nmore of the good bits.\n\n## Don\u2019t Blindly Follow a Script\n\nThe gist of this technique is that you will practice active listening and ask\nfollow-up questions. But there is no script to follow here \u2013 just your fine-\ntuned intuition.\n\nThis might be counter-intuitive for some folks. Interviewers across companies,\nboth big and small, are given various scripts and question banks that they\nshould follow. These questions always come with a list of follow-up questions\nand most interviewers just deliver these in a robotic way.\n\nSimilarly, candidates are thought to follow a formula when they give their\nanswers. This is usually some variation of the STAR (situation, task, action,\nand result) method. When they prepare an answer in this format, it will\nusually satisfy an unskilled interviewer because they will have heard all they\nneed to tick-off a bunch of boxes.\n\nWhen taken to its extreme, an interview becomes robotic: an interviewer asks a\nquestion from their script, and a candidate answers from theirs. Repeat for 60\nminutes. This is bad for both parties. (But more so for the company.)\n\nLet\u2019s see how to fix that!\n\n## \"Peeling the Onion\" Technique Example\n\nBased on a couple of real interviews where I saw this theme.\n\n> Me: Tell me about a time you learnt something new and brought it to your\n> work.\n\n> Candidate: I worked at Company XYZ in my previous role and we delivered\n> software that operates powerful drones for agriculture data collection.\n> Stability of our software was really important. To make sure we do a proper\n> job here, I level-up in my testing skills and studied a lot about property\n> based testing. I used library ABC because we use C++ and I added these tests\n> to our codebase. I got the team in on it and shared my knowledge we them, so\n> now we have these in our codebase, ensuring the software is more stable.\n\nSo far so good \u2013 the candidate is clearly well-prepared! But, as I\u2019m listening\nto them, some natural questions are popping up in my mind:\n\n  * Stability sounds important to this company, but is it even a problem? They did not mention the current state of the system was unstable.\n  * And if there is a lack of stability, is this really the best way to improve the stability of their software?\n  * What does \"more stable\" even mean?\n  * Property-based testing is a very interesting methodology \u2013 did they really learn how and when to use it?\n\nIf I don\u2019t follow up with anything, I will never learn the answer to these\nquestions. But, I also need to really be aware of what\u2019s behind my intuition\nhere and what I\u2019m really trying to uncover. To me, it is to:\n\n  * See if they really spent time deeply learning about this methodology. After all that was my question \u2013 I wanted an example of them learning something new.\n  * Check if they really understand the business problem and the benefits they delivered. Are they business-oriented or just chasing cool tech?\n\nBut you could go in many other directions from here as well. For example, we\ncould also ask about how they introduced this to the team and whether there\nwere any concerns. But, I had already gotten some good information on their\nteamwork from other questions so this was not valuable enough.\n\nThe crucial part of this technique is not to identify and ask every single\nfollow-up. Rather, it is to identify what kind of information you and pick the\nmost likely question to fill that gap.\n\nSo here\u2019s how the follow-up looked:\n\n> Me: That\u2019s a great example! Can you tell me more about what kind of modules\n> or services benefited from this? What\u2019s the code coverage you achived?\n\n> Candidate: The code coverage with property-based tests is not that important\n> \u2013 not everything needs to be tested. What I did spend a lot of time testing\n> were our sensor modules and connectivity drivers. These need to adher to a\n> lot of different APIs and specs, supporting a huge variery of use-cases.\n> Property-based testing really helped us expose the surface area for bugs and\n> uncover a couple of edge-cases. I was plesently surprised that running over\n> a million simulations in total took less than 2s, not adding any particular\n> time to our release time.\n\n> Me: Nice \u2013 can you share more about this bug you discovered?\n\n> Candidate: Yes, for example there was a function that accepts several input\n> strings that come from the camera and enum values coming from the moisture\n> and sunlight meter. For some of these combinations the function would make\n> calls to other functions for which those were impossible to handle. It\n> wasn\u2019t really a real-world scenario, but in case the sensors do mess up, it\n> does ensure we can handle that gracefully.\n\n> Me: So did this help make the system more stable? Did it fix some major\n> bugs?\n\n> Candidate: No, we don\u2019t have any major bugs, but this is another safety\n> measure we now have.\n\n> Me: Do you get major bugs often? Will this help you sleep easier during on-\n> call shifts?\n\n> Candidate: I don\u2019t think so, things are generally stable.\n\nNotice how I kept all my follow-ups guided toward the two major questions I\nwanted to learn about. It paid off and we were able to confirm that:\n\n  1. The candidate definitely dove deep into this testing methodology and acquired a new skill. They showed a good bit of both theory and practice. This is a good signal that they have the competencies I\u2019m looking for and an ability to learn and adopt new skills.\n  2. The candidate lacks a bit of business-oriented thinking. It is a sign that they need to learn more before they can transition to a senior role. (Since this was not a senior role, it was not a major issue.)\n\nIn this instance, my intuition ended up being correct about both things. It\nmight sound like I wasted time confirming it, but that\u2019s wrong! Collecting\ndata like this ensures we really understand the candidate\u2019s strengths and\nweaknesses and evaluate them fairly.\n\n### Finding Red Flags\n\nThe purpose of this is not to find \"red flags\" \u2013 it is to find a full answer\n(and data) to our original question. But sometimes you will come across\nsituations where your alarm bells start ringing. While you need to follow\nthrough on that intuition, you must also ensure it is not coming from a place\nof bias. Here\u2019s another example from a past interview. (Greatly modified as\nwell.)\n\n> Me: Can you tell me about a time you went above and beyond for a customer?\n\n> Candidate: At my current employer ABC TECH, ERP and Finance software\n> provider, my team owns an important tax compliance module customers use to\n> prepare accurate tax statements each month. We had an important customer who\n> used our software primarily because it handled all regulatory and tax\n> requirements. Due to a major bug, they were at risk of failing to meet their\n> obligations on time. I took it upon myself to address these problems when\n> our support team reached out. I openned a line of communication with them\n> via our support tool and I started working on it. I worked through it all\n> night and barely succeeded to find a fix at 2am, just in time so they pull\n> their tax in the morning, verify it, and submit it on time. The problem was\n> due to some transactions having incorrect dates, like June 31st, which would\n> lead to crashing the whole processing pipeline. I recieved praise from them\n> which I shared with my manager.\n\nSo what do we dig into now? Give it some thought \u2013 there are multiple threads\nto go on, but we should stick with our original question and the purpose. In\nmy case, the question was about how the candidate handles interactions with\ncustomers and prioritizing their requests.\n\nAs I listened to their response, the priority sounded very clear. They nicely\nframed the whole story: the customer\u2019s main reason to use this product was the\ntax module and if it failed for them, it would have big consequences.\n\nYou wouldn\u2019t be wrong for trying to clarify the impact a bit more or for\ndeciding to dive into how the communication went. But here\u2019s where my\nintuition was as I listened to this: If this is so important, why did nobody\nelse help?\n\nHere\u2019s the follow-up:\n\n> Me: That sounds like a long night! Did anyone help?\n\n> Candidate: No, it was just me. I know this module and customer the best so I\n> took it on myself to solve it. Involving my team would have only slowed\n> things down or made my manager panic. I knew I could fix this issue on time\n> and that there is no need to tell him.\n\nThat\u2019s not a great thing to hear \u2013 but, remember, our job is to \"peel the\nonion\" further and collect more information:\n\n> Me: What kind of panic do you mean?\n\n> Candidate: He starts to panic about the negative impact the problem could\n> have and how we can lose a customer over it. He\u2019ll then put more people on\n> the problem, slowing us down because nobody else has time to become an\n> expert on other modules.\n\n> Me: What would you do differently?\n\n> Candidate: We need a few more people for the amount of modules we own, that\n> way more people can learn to be experts on other modules.\n\n> Me: Did you discuss this with your manager?\n\n> Candidate: He agrees with me, but we do not have the budget. He appriciates\n> the way I handle customer problems and keep them happy with the product, but\n> it is becoming a bit too much... actually that\u2019s one of the reasons I am\n> looking for another job.\n\nThis is definitely a good place to stop digging further. Let\u2019s recap all the\nextra things we learned through these follow-ups:\n\n  * We got good signals that the candidate can manage customers. We\u2019ve also learned that they\u2019ve been successfully shouldering a lot of responsibility.\n  * We now know there are some areas of concern around teamwork, but we also understand the unusual circumstances. We can now ask a different question to probe deeper into this.\n  * We now clearly understand the candidate\u2019s motivation.\n\n#### Filip Danic\n\nSoftware Development Manager at Amazon and recovering JavaScript enthusiast.\nSharing my experience and insights with the broader tech community via this\nblog!\n\nThe Netherlands\n\n### Comments (0)\n\n### You might also like...\n\n## How To Conduct an Interview: Top 10 Tips for a Great Candidate Experience\n\nApr 8, 2024\n\nThe Software Lounge \u00a9 2024\n\nPowered by Ghost\n\n", "frontpage": false}

{"aid": "39981122", "title": "The Open Secret about Confidential Computing", "url": "https://stiankri.substack.com/p/the-open-secret-about-confidential", "domain": "stiankri.substack.com", "votes": 10, "user": "todsacerdoti", "posted_at": "2024-04-09 16:30:37", "comments": 0, "source_title": "The Open Secret about Confidential Computing", "source_text": "The Open Secret about Confidential Computing\n\n# stiankri's blog\n\nShare this post\n\n#### The Open Secret about Confidential Computing\n\nstiankri.substack.com\n\n#### Discover more from stiankri's blog\n\nPersonal notes on security, cryptography, etc.\n\nContinue reading\n\nSign in\n\n# The Open Secret about Confidential Computing\n\nStian Kristoffersen\n\nApr 07, 2024\n\n3\n\nShare this post\n\n#### The Open Secret about Confidential Computing\n\nstiankri.substack.com\n\nShare\n\nImage by Renan\n\nConfidential Computing is an emerging field that aims to protect running\nworkloads (\u201cdata in use\u201c) from their environment, thus reducing the Trusted\nComputing Base (TCB). For VMs, this means that the threat model is updated to\nnot trust the hypervisor. The main push is from the public cloud vendors to\nenable running more sensitive workloads. In short, the CPU is trusted and\ncreates a clean VM/enclave that can be measured and attested. The attestation\ncan be sent off to a trusted environment that can exchange it for the secrets\nneeded to perform the work.\n\nIf you read the confidential compute marketing from Azure and GCP it is easy\nto think that this is a solved problem. If you read Trust in Computer Systems\nand the Cloud - which is an excellent introduction to the topic - it\nacknowledges that this is a hard problem with a lot of things to get right,\nand a lot of things that are considered out of scope (chapter 11). If you read\nSecurity Engineering: A Guide to Building Dependable Distributed Systems - a\nhighly recommended read in general - it is more blunt; saying that the\necosystem can be undermined by a single extracted attestation key, which has\nalready been demonstrated (section 20.6, third edition).\n\nThe three main technologies used by Azure and GCP are AMD SEV-SNP (VM), Intel\nSGX (enclave) and Intel TDX (VM). Intel TDX uses Intel SGX for attestation.\nBoth Intel SGX and AMD SEV have had their attestation keys extracted. In the\ncase of Intel SGX this was used to break UHD Blu-Ray DRM. There are so many\nside channels in Intel SGX that they used a table to keep track of which CPUs\nare vulnerable to which attacks. When Google looked at both AMD SEV-SNP and\nIntel TDX they found a bunch of issues in both. This week further issues in\nboth solutions were published by researchers at ETH Zurich.\n\nOver time the Intel and AMD solutions should become harder targets as bugs are\nfound and fixed. However, some architectural decisions might continue to\nproduce bugs; the Intel and AMD approaches are based on microcode running on\nthe same cores as other workloads, rather than dedicated hardware. This makes\nthem more exposed to side channel attacks (which is the source for many of the\nknown bugs). The upside is that some things can be patched without having to\nscrap hardware. Though, this also enables the update process to be a potential\nattack vector.\n\nAWS uses their proprietary Nitro system, which looks interesting on the\nsurface, but lacks public details and external scrutiny, so it\u2019s hard to\ncompare to the Intel and AMD solutions. Conceptually, Azure and GCP shift some\nof the trust to the CPU vendor (AMD or Intel, which are already trusted),\nwhile AWS take on the same role with their own custom hardware.\n\nDon\u2019t get me wrong: I think reducing the TBC, which is the aim of Confidential\nComputing, is a great and desirable goal. It should increase the cost of\nattacks and help protect sensitive data. But let\u2019s be clear eyed about the\ncurrent state of things; measured enthusiasm is in order.\n\nThanks for reading!\n\n3\n\nShare this post\n\n#### The Open Secret about Confidential Computing\n\nstiankri.substack.com\n\nShare\n\nComments\n\nSupply Chain Issues in PyPI\n\nEarlier this year I did some security research into the Python Package Index\n(PyPI) as well as how it\u2019s used by the package managers Pip and Poetry. The...\n\nSep 21, 2023 \u2022\n\nStian Kristoffersen\n\n2\n\nShare this post\n\n#### Supply Chain Issues in PyPI\n\nstiankri.substack.com\n\nHoney Encrypted Password Managers\n\nA look at turning offline attacks on password managers into online attacks\nthat can be detected.\n\nJul 24, 2023 \u2022\n\nStian Kristoffersen\n\n4\n\nShare this post\n\n#### Honey Encrypted Password Managers\n\nstiankri.substack.com\n\nManifest Confusion in PyPI\n\nHow some Python tools interpret dependencies differently.\n\nSep 21, 2023 \u2022\n\nStian Kristoffersen\n\n2\n\nShare this post\n\n#### Manifest Confusion in PyPI\n\nstiankri.substack.com\n\nReady for more?\n\n\u00a9 2024 Stian Kristoffersen\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": true}

{"aid": "39992945", "title": "Calc: C-style arbitrary precision calculator", "url": "https://github.com/lcn2/calc", "domain": "github.com/lcn2", "votes": 1, "user": "blacksqr", "posted_at": "2024-04-10 16:57:41", "comments": 0, "source_title": "GitHub - lcn2/calc: C-style arbitrary precision calculator", "source_text": "GitHub - lcn2/calc: C-style arbitrary precision calculator\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlcn2 / calc Public\n\n  * Notifications\n  * Fork 48\n  * Star 312\n\nC-style arbitrary precision calculator\n\nwww.isthe.com/chongo/tech/comp/calc/index.html\n\n### License\n\n312 stars 48 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# lcn2/calc\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n216 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nlcn2Merge pull request #144 from coreysciuto-toast/patch-11232b59 \u00b7\n\n## History\n\n682 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| Update CodeQL Action to v2  \n  \n### cal\n\n|\n\n### cal\n\n| document prompt in shell script mode, fix man formatting, legacy awk  \n  \n### cscript\n\n|\n\n### cscript\n\n| fix missing version.h, add chk_tree tool  \n  \n### custom\n\n|\n\n### custom\n\n| fix missing version.h, add chk_tree tool  \n  \n### help\n\n|\n\n### help\n\n| update CHANGES, fix make clobber and make install  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| document prompt in shell script mode, fix man formatting, legacy awk  \n  \n### .lldbinit\n\n|\n\n### .lldbinit\n\n| add comment about turning off optimizer in .lldbinit  \n  \n### BUGS\n\n|\n\n### BUGS\n\n| update BUGS about MSYS2 and Windows success  \n  \n### CHANGES\n\n|\n\n### CHANGES\n\n| credit @ashamedbit a memory leak fix in zrandom.c  \n  \n### CODE_OF_CONDUCT.md\n\n|\n\n### CODE_OF_CONDUCT.md\n\n| Create CODE_OF_CONDUCT.md  \n  \n### CONTRIB-CODE\n\n|\n\n### CONTRIB-CODE\n\n| prep for calc version 2.14.1.4  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| Minor changes to Makefile, HOWTO.INSTALL, CONTRIBUTING.md  \n  \n### COPYING\n\n|\n\n### COPYING\n\n| Updated COPYING to include the \"The Unlicense\" text.  \n  \n### COPYING-LGPL\n\n|\n\n### COPYING-LGPL\n\n| Release calc version 2.12.4.11  \n  \n### HOWTO.INSTALL\n\n|\n\n### HOWTO.INSTALL\n\n| further clarify that Msys2 is a fork of Cygwin  \n  \n### LIBRARY\n\n|\n\n### LIBRARY\n\n| document in LIBRARY, q_to_c() that was previously added  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| improve make clobber  \n  \n### Makefile.config\n\n|\n\n### Makefile.config\n\n| Release v2.15.0.6  \n  \n### Makefile.local\n\n|\n\n### Makefile.local\n\n| improve Address Sanitizer (ASAN) support and chk_tree  \n  \n### Makefile.target\n\n|\n\n### Makefile.target\n\n| change libcalc dynamic library to link with libcustcalc  \n  \n### QUESTIONS\n\n|\n\n### QUESTIONS\n\n| prep for calc version 2.14.1.4  \n  \n### README.FIRST\n\n|\n\n### README.FIRST\n\n| remove Makefile.simple and add Makefile.target  \n  \n### README.RELEASE\n\n|\n\n### README.RELEASE\n\n| remove CALC2_COMPAT symbol in source code  \n  \n### README.WINDOWS\n\n|\n\n### README.WINDOWS\n\n| drop support for DJGPP and drop support for win32  \n  \n### README.md\n\n|\n\n### README.md\n\n| fix typos from previous commit  \n  \n### SECURITY.md\n\n|\n\n### SECURITY.md\n\n| Remove excess whitespace under SECURITY.md  \n  \n### addop.c\n\n|\n\n### addop.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### align32.c\n\n|\n\n### align32.c\n\n| Proposed changes for v2.14.1.1  \n  \n### alloc.h\n\n|\n\n### alloc.h\n\n| Added testing for _WIN64 when testing for _WIN32  \n  \n### assocfunc.c\n\n|\n\n### assocfunc.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### attribute.h\n\n|\n\n### attribute.h\n\n| Improved source code flow  \n  \n### banned.h\n\n|\n\n### banned.h\n\n| Correct typos  \n  \n### blkcpy.c\n\n|\n\n### blkcpy.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### blkcpy.h\n\n|\n\n### blkcpy.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### block.c\n\n|\n\n### block.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### block.h\n\n|\n\n### block.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### bool.h\n\n|\n\n### bool.h\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### byteswap.c\n\n|\n\n### byteswap.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### byteswap.h\n\n|\n\n### byteswap.h\n\n| Correct typos  \n  \n### calc.c\n\n|\n\n### calc.c\n\n| document prompt in shell script mode, fix man formatting, legacy awk  \n  \n### calc.h\n\n|\n\n### calc.h\n\n| improve calc error code system  \n  \n### calc.man\n\n|\n\n### calc.man\n\n| Fix Manpage typo  \n  \n### calc.spec.in\n\n|\n\n### calc.spec.in\n\n| Release v2.14.3.4  \n  \n### charbit.c\n\n|\n\n### charbit.c\n\n| Improve seed()  \n  \n### check.awk\n\n|\n\n### check.awk\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### chk_c.c\n\n|\n\n### chk_c.c\n\n| add int.h  \n  \n### chk_tree\n\n|\n\n### chk_tree\n\n| improve chk_tree and trailblank  \n  \n### cmath.h\n\n|\n\n### cmath.h\n\n| add cas and cis trigonometric functions  \n  \n### codegen.c\n\n|\n\n### codegen.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### comfunc.c\n\n|\n\n### comfunc.c\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### commath.c\n\n|\n\n### commath.c\n\n| add cas and cis trigonometric functions  \n  \n### config.c\n\n|\n\n### config.c\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### config.h\n\n|\n\n### config.h\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### const.c\n\n|\n\n### const.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### custom.c\n\n|\n\n### custom.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### custom.h\n\n|\n\n### custom.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### decl.h\n\n|\n\n### decl.h\n\n| Changes to use attributes for noreturn and printf-like functions  \n  \n### endian.c\n\n|\n\n### endian.c\n\n| Release v2.12.9.0  \n  \n### errtbl.c\n\n|\n\n### errtbl.c\n\n| fixed some warnings for errtbl.c on Cygwin systems  \n  \n### errtbl.h\n\n|\n\n### errtbl.h\n\n| add test 10ddd to verify E_STRING values for calc computation error c...  \n  \n### file.c\n\n|\n\n### file.c\n\n| improve how calc compiles on big endian machines  \n  \n### file.h\n\n|\n\n### file.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### fposval.c\n\n|\n\n### fposval.c\n\n| improve how calc compiles on big endian machines  \n  \n### fposval.h.def\n\n|\n\n### fposval.h.def\n\n| Release v2.12.9.0  \n  \n### func.c\n\n|\n\n### func.c\n\n| fix more memory leaks  \n  \n### func.h\n\n|\n\n### func.h\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### hash.c\n\n|\n\n### hash.c\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### hash.h\n\n|\n\n### hash.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### have_arc4random.c\n\n|\n\n### have_arc4random.c\n\n| Fix long line in have_arc4random.c  \n  \n### have_ban_pragma.c\n\n|\n\n### have_ban_pragma.c\n\n| Release v2.12.9.0  \n  \n### have_const.c\n\n|\n\n### have_const.c\n\n| Correct typos  \n  \n### have_environ.c\n\n|\n\n### have_environ.c\n\n| Improve seed() function  \n  \n### have_fgetsetpos.c\n\n|\n\n### have_fgetsetpos.c\n\n| Rename have_fpos.h to have_fgetsetpos.h  \n  \n### have_fpos_pos.c\n\n|\n\n### have_fpos_pos.c\n\n| Avoid implicit declaration memset in have_fpos_pos.c probe  \n  \n### have_getpgid.c\n\n|\n\n### have_getpgid.c\n\n| Release v2.12.9.0  \n  \n### have_getprid.c\n\n|\n\n### have_getprid.c\n\n| Release v2.12.9.0  \n  \n### have_getsid.c\n\n|\n\n### have_getsid.c\n\n| Release v2.12.9.0  \n  \n### have_gettime.c\n\n|\n\n### have_gettime.c\n\n| Checkpint disbale use of gettime() under _WIN32 or _WIN64  \n  \n### have_memmv.c\n\n|\n\n### have_memmv.c\n\n| Release v2.12.9.0  \n  \n### have_newstr.c\n\n|\n\n### have_newstr.c\n\n| Release v2.12.9.0  \n  \n### have_offscl.c\n\n|\n\n### have_offscl.c\n\n| Added testing for _WIN64 when testing for _WIN32  \n  \n### have_posscl.c\n\n|\n\n### have_posscl.c\n\n| Rename have_fpos.h to have_fgetsetpos.h  \n  \n### have_rusage.c\n\n|\n\n### have_rusage.c\n\n| Release v2.12.9.0  \n  \n### have_statfs.c\n\n|\n\n### have_statfs.c\n\n| prep for calc version 2.14.1.4  \n  \n### have_stdvs.c\n\n|\n\n### have_stdvs.c\n\n| Correct typos  \n  \n### have_strdup.c\n\n|\n\n### have_strdup.c\n\n| Release v2.12.9.0  \n  \n### have_strlcat.c\n\n|\n\n### have_strlcat.c\n\n| Release v2.12.9.0  \n  \n### have_strlcpy.c\n\n|\n\n### have_strlcpy.c\n\n| Release v2.12.9.0  \n  \n### have_uid_t.c\n\n|\n\n### have_uid_t.c\n\n| Proposed changes for v2.14.1.1  \n  \n### have_unused.c\n\n|\n\n### have_unused.c\n\n| Correct typos  \n  \n### have_ustat.c\n\n|\n\n### have_ustat.c\n\n| Release v2.12.9.0  \n  \n### have_varvs.c\n\n|\n\n### have_varvs.c\n\n| Correct typos  \n  \n### help.c\n\n|\n\n### help.c\n\n| document prompt in shell script mode, fix man formatting, legacy awk  \n  \n### hist.c\n\n|\n\n### hist.c\n\n| Properly handle multi-line strings and newline returned by readline()  \n  \n### hist.h\n\n|\n\n### hist.h\n\n| Added testing for _WIN64 when testing for _WIN32  \n  \n### input.c\n\n|\n\n### input.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### int.h\n\n|\n\n### int.h\n\n| change int.h to check MAJOR_VER < 3 when CHK_C is undefined  \n  \n### jump.c\n\n|\n\n### jump.c\n\n| Release v2.12.9.0  \n  \n### jump.h\n\n|\n\n### jump.h\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### label.c\n\n|\n\n### label.c\n\n| Release v2.12.9.0  \n  \n### label.h\n\n|\n\n### label.h\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### lib_calc.c\n\n|\n\n### lib_calc.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### lib_calc.h\n\n|\n\n### lib_calc.h\n\n| Release v2.13.0.0  \n  \n### lib_util.c\n\n|\n\n### lib_util.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### lib_util.h\n\n|\n\n### lib_util.h\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### listfunc.c\n\n|\n\n### listfunc.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### longbits.c\n\n|\n\n### longbits.c\n\n| remove CALC2_COMPAT symbol in source code  \n  \n### matfunc.c\n\n|\n\n### matfunc.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### math_error.c\n\n|\n\n### math_error.c\n\n| Release v2.12.9.0  \n  \n### nametype.h\n\n|\n\n### nametype.h\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### obj.c\n\n|\n\n### obj.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### opcodes.c\n\n|\n\n### opcodes.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### opcodes.h\n\n|\n\n### opcodes.h\n\n| Fixed old references additive 55  \n  \n### pix.c\n\n|\n\n### pix.c\n\n| Release v2.12.9.0  \n  \n### poly.c\n\n|\n\n### poly.c\n\n| changed C source to use C booleans with backward compatibility  \n  \n### prime.c\n\n|\n\n### prime.c\n\n| Release v2.12.9.0  \n  \n### prime.h\n\n|\n\n### prime.h\n\n| Update copyright date to 2021 for all prev typo fixes  \n  \n### qfunc.c\n\n|\n\n### qfunc.c\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### qio.c\n\n|\n\n### qio.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### qmath.c\n\n|\n\n### qmath.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### qmath.h\n\n|\n\n### qmath.h\n\n| add cas and cis trigonometric functions  \n  \n### qmod.c\n\n|\n\n### qmod.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### qtrans.c\n\n|\n\n### qtrans.c\n\n| change error printing from errnum to errsym  \n  \n### quickhash.c\n\n|\n\n### quickhash.c\n\n| add config(\"triground\") to trigonometric function rounding  \n  \n### rpm.mk\n\n|\n\n### rpm.mk\n\n| update calc rpm to relase 14  \n  \n### sample.README\n\n|\n\n### sample.README\n\n| Remove all RCS @(#) lines and RCS strings  \n  \n### sample_many.c\n\n|\n\n### sample_many.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### sample_rand.c\n\n|\n\n### sample_rand.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### seed.c\n\n|\n\n### seed.c\n\n| prep for calc version 2.14.1.4  \n  \n### sha1.c\n\n|\n\n### sha1.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### sha1.h\n\n|\n\n### sha1.h\n\n| prep for calc version 2.14.1.4  \n  \n### size.c\n\n|\n\n### size.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### str.c\n\n|\n\n### str.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### str.h\n\n|\n\n### str.h\n\n| Release v2.12.9.0  \n  \n### strl.c\n\n|\n\n### strl.c\n\n| Correct typos  \n  \n### strl.h\n\n|\n\n### strl.h\n\n| Release v2.12.9.0  \n  \n### symbol.c\n\n|\n\n### symbol.c\n\n| change error printing from errnum to errsym  \n  \n### symbol.h\n\n|\n\n### symbol.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### token.c\n\n|\n\n### token.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### token.h\n\n|\n\n### token.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### trailblank\n\n|\n\n### trailblank\n\n| improve chk_tree and trailblank  \n  \n### update_ver\n\n|\n\n### update_ver\n\n| improve useful strings produced by update_ver  \n  \n### value.c\n\n|\n\n### value.c\n\n| change error printing from errnum to errsym  \n  \n### value.h\n\n|\n\n### value.h\n\n| change error printing from errnum to errsym  \n  \n### version.c\n\n|\n\n### version.c\n\n| document prompt in shell script mode, fix man formatting, legacy awk  \n  \n### version.h\n\n|\n\n### version.h\n\n| Release v2.15.0.6  \n  \n### zfunc.c\n\n|\n\n### zfunc.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zio.c\n\n|\n\n### zio.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zmath.c\n\n|\n\n### zmath.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zmath.h\n\n|\n\n### zmath.h\n\n| improve how calc compiles on big endian machines  \n  \n### zmod.c\n\n|\n\n### zmod.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zmul.c\n\n|\n\n### zmul.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zprime.c\n\n|\n\n### zprime.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zrand.c\n\n|\n\n### zrand.c\n\n| add E_STRING to error, errno, strerror, change multiple E_STRING's  \n  \n### zrand.h\n\n|\n\n### zrand.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n### zrandom.c\n\n|\n\n### zrandom.c\n\n| Fix memory leak in zrandom.c  \n  \n### zrandom.h\n\n|\n\n### zrandom.h\n\n| changed C source to use C booleans with backward compatibility  \n  \n## Repository files navigation\n\n# TL;DR Try calc\n\n## TL;DR Install calc\n\n    \n    \n    misc linux: sudo yum install calc on Debian: sudo apt install calc on RHEL: sudo dnf install calc on Ubuntu: sudo apt install calc via Termux: apt install calc via src: sudo make clobber all chk instsll\n\n## TL;DR Run calc\n\n    \n    \n    misc shell: calc via bash: calc via misc app: launch calc via Termux via zsh: calc\n\n# What is calc?\n\nCalc is an interactive calculator which provides for easy large numeric\ncalculations, but which also can be easily programmed for difficult or long\ncalculations. It can accept a command line argument, in which case it executes\nthat single command and exits. Otherwise, it enters interactive mode. In this\nmode, it accepts commands one at a time, processes them, and displays the\nanswers. In the simplest case, commands are simply expressions which are\nevaluated. For example, the following line can be input:\n\n    \n    \n    3 * (4 + 1)\n\nand the calculator will print:\n\n    \n    \n    15\n\nCalc has the usual collection of arithmetic operators +, -, /, * as well as ^\n(exponentiation), % (modulus) and // (integer divide). For example:\n\n    \n    \n    3 * 19^43 - 1\n\nwill produce:\n\n    \n    \n    29075426613099201338473141505176993450849249622191102976\n\nNotice that calc values can be very large. For example:\n\n    \n    \n    2^23209-1\n\nwill print:\n\n    \n    \n    402874115778988778181873329071 ... many digits ... 3779264511\n\nThe special '.' symbol (called dot), represents the result of the last command\nexpression, if any. This is of great use when a series of partial results are\ncalculated, or when the output mode is changed and the last result needs to be\nredisplayed. For example, the above result can be modified by typing:\n\n    \n    \n    . % (2^127-1)\n\nand the calculator will print:\n\n    \n    \n    47385033654019111249345128555354223304\n\nFor more complex calculations, variables can be used to save the intermediate\nresults. For example, the result of adding 7 to the previous result can be\nsaved by typing:\n\n    \n    \n    curds = 15 whey = 7 + 2*curds\n\nFunctions can be used in expressions. There are a great number of pre-defined\nfunctions. For example, the following will calculate the factorial of the\nvalue of 'whey':\n\n    \n    \n    fact(whey)\n\nand the calculator prints:\n\n    \n    \n    13763753091226345046315979581580902400000000\n\nThe calculator also knows about complex numbers, so that typing:\n\n    \n    \n    (2+3i) * (4-3i) cos(.)\n\nwill print:\n\n    \n    \n    17+6i -55.50474777265624667147+193.9265235748927986537i\n\nThe calculator can calculate transcendental functions, and accept and display\nnumbers in real or exponential format. For example, typing:\n\n    \n    \n    config(\"display\", 70), epsilon(1e-70), sin(1)\n\nprints:\n\n    \n    \n    0.8414709848078965066525023216302989996225630607983710656727517099919104\n\nCalc can output values in terms of fractions, octal or hexadecimal. For\nexample:\n\n    \n    \n    config(\"mode\", \"fraction\"), (17/19)^23 print base(16), (19/17)^29 print log(79.3i)\n\nwill print:\n\n    \n    \n    19967568900859523802559065713/257829627945307727248226067259 0x9201e65bdbb801eaf403f657efcf863/0x5cd2e2a01291ffd73bee6aa7dcf7d1 0x17b5164ac24ee836bf/0xc7b7a8e3ef5fcf752+0x883eaf5adadd26be3/0xc7b7a8e3ef5fcf752i\n\nAll numbers are represented as fractions with arbitrarily large numerators and\ndenominators which are always reduced to lowest terms. Real or exponential\nformat numbers can be input and are converted to the equivalent fraction. Hex,\nbinary, or octal numbers can be input by using numbers with leading '0x', '0b'\nor '0' characters. Complex numbers can be input using a trailing 'i', as in\n'2+3i'. Strings and characters are input by using single or double quotes.\n\nCommands are statements in a C-like language, where each input line is treated\nas the body of a procedure. Thus the command line can contain variable\ndeclarations, expressions, labels, conditional tests, and loops. Assignments\nto any variable name will automatically define that name as a global variable.\nThe other important thing to know is that all non-assignment expressions which\nare evaluated are automatically printed. Thus, you can evaluate an\nexpression's value by simply typing it in.\n\nMany useful built-in mathematical functions are available. Use the:\n\n    \n    \n    help builtin\n\ncommand to list them.\n\nYou can also define your own functions by using the 'define' keyword, followed\nby a function declaration very similar to C.\n\n    \n    \n    define f2(n) { local ans; ans = 1; while (n > 1) ans *= (n -= 2); return ans; }\n\nThus the input:\n\n    \n    \n    f2(79)\n\nwill produce:\n\n    \n    \n    1009847364737869270905302433221592504062302663202724609375\n\nFunctions which only need to return a simple expression can be defined using\nan equals sign, as in the example:\n\n    \n    \n    define sc(a,b) = a^3 + b^3\n\nThus the input:\n\n    \n    \n    sc(31, 61)\n\nwill produce:\n\n    \n    \n    256772\n\nVariables in functions can be defined as either 'global', 'local', or\n'static'. Global variables are common to all functions and the command line,\nwhereas local variables are unique to each function level, and are destroyed\nwhen the function returns. Static variables are scoped within single input\nfiles, or within functions, and are never destroyed. Variables are not typed\nat definition time, but dynamically change as they are used.\n\nFor more information about the calc language and features, try:\n\n    \n    \n    help overview\n\nCalc has a help command that will produce information about every builtin\nfunction, command as well as a number of other aspects of calc usage. Try the\ncommand:\n\n    \n    \n    help help\n\nfor and overview of the help system. The command:\n\n    \n    \n    help builtin\n\nprovides information on built-in mathematical functions, whereas:\n\n    \n    \n    help asinh\n\nwill provides information a specific function. The following help files:\n\n    \n    \n    help command help define help operator help statement help variable\n\nprovide a good overview of the calc language. If you are familiar with C, you\nshould also try:\n\n    \n    \n    help unexpected\n\nIt contains information about differences between C and calc that may surprise\nC programmers.\n\n## About\n\nC-style arbitrary precision calculator\n\nwww.isthe.com/chongo/tech/comp/calc/index.html\n\n### Topics\n\ncalculator math bignum mathematics computation arbitrary-precision matrices\ncomplex-numbers fraction prime-numbers multiprecision mathematical-functions\ncalc exponentiation primality-testing trigonometric-functions primes calc-\nlanguage hyperbolic-functions rational-arithmetic\n\n### Resources\n\nReadme\n\n### License\n\n### Code of conduct\n\nCode of conduct\n\n### Security policy\n\nSecurity policy\n\nActivity\n\n### Stars\n\n312 stars\n\n### Watchers\n\n13 watching\n\n### Forks\n\n48 forks\n\nReport repository\n\n## Releases 53\n\ncalc 2.15.0.5 release Latest\n\nFeb 2, 2024\n\n\\+ 52 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 14\n\n## Languages\n\n  * C 86.3%\n  * Makefile 11.7%\n  * Other 2.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

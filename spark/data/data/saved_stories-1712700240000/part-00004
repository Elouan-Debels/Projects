{"aid": "39980848", "title": "CLion 2024.1", "url": "https://blog.jetbrains.com/clion/2024/04/clion-2024-1-available/", "domain": "jetbrains.com", "votes": 1, "user": "mfiguiere", "posted_at": "2024-04-09 16:03:08", "comments": 0, "source_title": "CLion 2024.1 Is Available! CMake Writing Assistance, Debugger Enhancements, and Improvements for Embedded Development | The CLion Blog", "source_text": "CLion 2024.1 Is Available! CMake Writing Assistance, Debugger Enhancements, and Improvements for Embedded Development | The CLion Blog\n\nBlog\n\nSkip to content\n\n  * Blogs by Topic\n  * Search\n\nBurger menu icon\n\n## The CLion Blog\n\nA Cross-Platform IDE for C and C++\n\nFollow\n\n  * Follow:\n  * Twitter Twitter\n  * Youtube Youtube\n  * RSS RSS\n\nDownload\n\nNews Releases\n\n# CLion 2024.1 Is Available! CMake Writing Assistance, Debugger Enhancements,\nand Improvements for Embedded Development\n\nMaria Goldade\n\nApril 9, 2024\n\nCLion 2024.1 is now available! This version of the powerful JetBrains IDE for\nC and C++ introduces:\n\n  * New abilities in writing assistance for CMake files and integration with CMake presets.\n  * Improvements to Meson and Bazel support.\n  * Debugger fixes and enhancements, including forked process debugging.\n  * Assembly view enhancements.\n  * Coding assistance in device tree files.\n  * Several UI improvements.\n\nBuild 241.14494.288 is ready and can be downloaded from our website, via the\nToolbox App, or as a snap package if you are using Ubuntu.\n\nDOWNLOAD CLION 2024.1\n\n## Project models\n\n### CMake\n\nThe 2024.1 version of CLion is bundled with CMake 3.28. Ninja support has also\nbeen updated to v1.11, which is required for C++20 modules to work with CMake.\n\nCreating CMake scripts can sometimes be challenging. Fortunately, CLion\u2019s\ncoding assistance makes writing and updating them easier. Version 2024.1\nbrings you more coding assistance features particularly focused on working\nwith targets. We\u2019ve added live templates to help you generate add_executable\n(type exe) and add_library (type lib) CMake commands. Now instead of typing\nall of the necessary code in a CMake block, you can type \u201clib\u201d, for example,\nand expand this live template into the CMake block. Here\u2019s a glimpse of this\nfeature in action.\n\nGIF\n\nThe Find Usages action allows you to search for references of a code element\nthroughout your whole codebase. In CLion 2024.1, we\u2019ve expanded it by adding\nmore actions for target names, meaning you can use code completion for them.\nAdditionally, you can now navigate to the corresponding add_library or\nadd_executable commands from the target usage.\n\nTo make it easier to configure and manage complex build systems effectively,\nCLion allows you to automatically import CMake presets into CMake profiles\nthat will be available for future use. CLion now offers you more flexibility \u2013\nin version 2024.1, you can configure more granular integration with CMake\npresets and choose which preset types to import to CLion. For example, you can\nchoose Configure presets from the import list.\n\nThe latest version of CLion includes other CMake-related feature improvements\nand issue fixes. More details can be found here.\n\n### Bazel\n\nBazel is becoming increasingly popular among C++ developers. Based on feedback\nfrom our users, we\u2019ve come up with a variety of enhancements to the Bazel for\nCLion plugin:\n\n  * We have fixed a couple issues preventing projects with MODULE.bazel from being opened (#6155, #6127)\n  * We improved handling for the strip_include_prefix attribute and introduced support for include_prefix in the cc_library rules.(#5969, #6007)\n  * We fixed non-passed environment variables for debug runs. (#5771)\n  * We updated the default project view template file to simplify the onboarding. (#6175)\n  * We added an option to disable fission in debug builds to mitigate GCC issue (#6041)\n  * We applied a workaround for the modal Processing ... detected file changes dialog. It is not shown anymore after the initial project sync. (#6094)\n\n### Meson\n\nAs part of our continuing work to improve Meson support, CLion 2024.1 now\ncomes with a Meson tool window, where you can find the list of builds and\nuseful commands.\n\nA New Project wizard is now available, streamlining the process of creating\nnew projects. File templates for new Meson projects can also be configured\naccording to your preferences.\n\nThe following fixes have been implemented:\n\n  * When you open a Meson project for the first time, in addition to loading it, CLion creates all of the necessary run configurations.\n  * The non-default compiler is correctly used for compiling Meson projects when selected in the toolchain.\n\n## Debugger enhancements\n\nIn CLion 2024.1 you can debug child processes created with the fork function.\nUse the context menu of the Threads & Variables pane to set up the follow and\ndetach policies, global settings that change the debugger\u2019s behavior.\n\nLLDB allows debugging only one process at a time, so the Detach Process on\nFork setting is always selected for it. GDB allows multiple connections and\nswitching between them.\n\nSeveral additional debugger enhancements will help ensure you have the\nultimate debugging experience when investigating and solving problems in your\ncode:\n\n  * CLion now bundles GDB 14.1. The presentation of the standard types that were initially broken with this version in CLion has now been fixed.\n\n  * If you experience performance issues with GDB, try out a new setting that allows CLion to prepare indexes before the debug session starts. This works on Linux machines for executables launched from the IDE.\n\n## Improvements for embedded development\n\nFor those who develop hardware and write device tree files, CLion recognizes\n.dts and .dtsi files and provides \u0441oding assistance and code analysis features\nfor them. With the latest version, you can benefit from the improvements for\ndevice tree coding assistance. There are several new code checks available for\nvalidating the correctness of your node description:\n\n  1. The Duplicate element inspection detects duplicate elements inside device tree nodes.\n  2. New checks for invalid property types, as well as for required or undeclared properties, help you validate node properties with binding.\n  3. Values for enumeration types can now also be validated.\n\nAll inspections that work with property values (e.g. type checks or the\nenumeration values check) require Zephyr bindings.\n\nTo help you write device tree files, we\u2019ve added code completion for the root\nnode.\n\nStarting from CLion 2023.3, with the help of the Assembly view, you can\nexplore the underlying assembly code without starting a debug session. In\nversion 2024.1 we\u2019ve introduced several additional enhancements and fixes:\n\n  * The Assembly view for ARM targets is now shown correctly.\n  * Assembly view settings are now applied immediately, without requiring you to manually click the Refresh button.\n  * When you edit a file for which the Assembly view is opened, a hint appears suggesting you refresh the preview.\n\n## Improvements to the VCS\n\nThis release brings a variety of updates to VCS support in CLion, including:\n\n  * In-editor code reviews for GitLab and GitHub repos.\n  * CI status checks in the Git tool window.\n  * Prevention of large file commits to repositories.\n  * A new Stash tab in the Commit tool window.\n  * The option to exclude folders and files from comparisons.\n  * And more!\n\nLearn about all of the changes here.\n\n## UI updates and improvements\n\nWhen you are working on a big project with huge files or a completely new\ndatabase, navigation can be a bit tricky. To make this easier, CLion\u2019s editor\nnow has sticky lines. They keep key structural elements pinned to the top of\nthe editor as you scroll so you can promptly navigate through the code.\n\nGIF\n\nStarting with the 2024.1 release, a Beta version of the new terminal is available in CLion. To enable the new experience you need go to Settings/Preferences | Tools | Terminal | Enable New Terminal.\n\nAlong with its improved look and feel that bring it into alignment with the\nnew UI, other major features include:\n\n  * Separation of command output into distinct visual blocks.\n  * Command completion, including completion for command names, arguments, flags, and paths. For each suggested value, the new terminal displays quick documentation.\n\nGIF\n\nCurrently, the new terminal supports PowerShell, Bash, and Zsh, but more\nintegrations are coming!\n\nGive it a try and share your ideas on how to improve it, either here in the\ncomments or in our issue tracker.\n\nAdditionally, CLion 2024.1 expands the range of scaling options, now allowing\nyou to scale the IDE both up and down.\n\nGIF\n\nThere are more updates, enhancements, and changes. The full release notes are\navailable here.\n\n## In progress\n\nWork is still in progress for some features, and some updates were not\nincluded in this release or require additional action from you:\n\n  1. Full line code completion is not yet available in CLion. While we are polishing it, you can try using the Full Line Code Completion plugin to enrich your code completion with multi-token proposals for Python, JavaScript, and other languages. C and C++ support will be coming later. Stay tuned!\n  2. CLion Nova has been added to CLion Classic, but it\u2019s switched off by default.To enable it, go to Settings / Preferences | Advanced Settings | CLion | Use the ReSharper C++ language engine (CLion Nova). Give it a try and share your questions with us here in the comments or in our issue tracker.\n\nWe encourage you to give CLion 2024.1 a try. If you have an active\nsubscription, you can update today. If you are new to CLion, start your 30-day\nfree trial and experience all the features and improvements right away!\n\nDOWNLOAD CLION 2024.1\n\nYour CLion team JetBrains The Drive to Develop\n\n2024.1 bazel CMake Debug DeviceTree embedded Meson\n\n  * Share\n  * Facebook\n  * Twitter\n  * Linkedin\n\nPrev post CLion 2024.1 Release Candidate\n\n#### Subscribe to CLion Blog updates\n\nThanks, we've got you!\n\n  1. Project models\n\n    1. CMake\n    2. Bazel\n    3. Meson\n  2. Debugger enhancements\n  3. Improvements for embedded development\n  4. Improvements to the VCS\n  5. UI updates and improvements\n  6. In progress\n\n## Discover more\n\n#### CLion 2024.1 Release Candidate\n\nThe next major CLion release is on its way, and the release candidate for\nv2024.1 is already available! To install CLion 2024.1 RC (build\n241.14494.229), download it from our website, update via the Toolbox App, or\nuse this snap package (for Ubuntu). You need an active subscription or a trial\nlic...\n\nAnastasia Kazakova March 27, 2024\n\n8\n\n#### CLion 2024.1 Goes Beta\n\nThe Beta version of CLion 2024.1 is now available with key improvements and\nchanges that are expected to be implemented in the upcoming release. Download\nbuild 241.14494.154 from our website, via the Toolbox App, or as a snap pack\nfor Ubuntu. DOWNLOAD CLION 2024.1 BETA The Beta build addresses a...\n\nAnastasia Kazakova March 21, 2024\n\n0\n\n#### CLion 2024.1 EAP 6: Fixes for the Debugger and CMake Quick Documentation\n\nThe CLion 2024.1 EAP 6 build (241.14494.102) is now out! It\u2019s available from\nour website, via the Toolbox App, or as a snap package if you\u2019re using Ubuntu.\nThe highlights: Enhancements to the debugger: Pointers presentation fixed in\nthe debugger (CPP-37903). Variables not present in the s...\n\nAnastasia Kazakova March 19, 2024\n\n0\n\n#### CLion 2024.1 EAP 5: Improved STL Container Rendering in the Debugger and\nVCS Enhancements\n\nThe CLion 2024.1 EAP 5 build (241.14494.27) is now out! It\u2019s available from\nour website, via the Toolbox App, or as a snap package if you\u2019re using Ubuntu.\nDOWNLOAD CLION 2024.1 EAP The highlights: We\u2019ve addressed an issue with CMake\nreloads stalling when working with the remote host toolchai...\n\nAnastasia Kazakova March 8, 2024\n\n6\n\n  * Privacy & Security\n  * Terms of Use\n  * Legal\n  * Genuine tools\n\n  * Twitter\n  * Facebook\n  * Linkedin\n  * Instagram\n  * Youtube\n  * RSS\n  * Tiktok\n\nMerchandise store iconMerchandise store\n\nCopyright \u00a9 2000 JetBrains s.r.o.\n\n", "frontpage": false}

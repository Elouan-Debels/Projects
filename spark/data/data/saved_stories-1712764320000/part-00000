{"aid": "39988827", "title": "Atwood's Law", "url": "https://blog.codinghorror.com/all-programming-is-web-programming/", "domain": "codinghorror.com", "votes": 2, "user": "nimzoLarsen", "posted_at": "2024-04-10 09:49:47", "comments": 0, "source_title": "All Programming is Web Programming", "source_text": "All Programming is Web Programming\n\n# Coding Horror\n\n## programming and human factors\n\n14 Aug 2009\n\n# All Programming is Web Programming\n\nMichael Braude decries the popularity of web programming:\n\n> The reason most people want to program for the web is that they're not smart\n> enough to do anything else. They don't understand compilers, concurrency, 3D\n> or class inheritance. They haven't got a clue why I'd use an interface or an\n> abstract class. They don't understand: virtual methods, pointers,\n> references, garbage collection, finalizers, pass-by-reference vs. pass-by-\n> value, virtual C++ destructors, or the differences between C# structs and\n> classes. They also know nothing about process. Waterfall? Spiral? Agile?\n> Forget it. They've never seen a requirements document, they've never written\n> a design document, they've never drawn a UML diagram, and they haven't even\n> heard of a sequence diagram.\n>\n> But they do know a few things: they know how to throw an ASP.NET webpage\n> together, send some (poorly done) SQL down into a database, fill a dataset,\n> and render a grid control. This much they've figured out. And the chances\n> are good it didn't take them long to figure it out.\n>\n> So forgive me for being smarmy and offensive, but I have no interest in\n> being a 'web guy'. And there are two reasons for this. First, it's not a\n> challenging medium for me. And second, because the vast majority of Internet\n> companies are filled with bad engineers - precisely because you don't need\n> to know complicated things to be a web developer. As far as I'm concerned,\n> the Internet is responsible for a collective dumbing down of our\n> intelligence. You just don't have to be that smart to throw up a webpage.\n>\n> I really hope everybody's wrong and everything doesn't \"move to the web.\"\n> Because if it does, one day I will either have to reluctantly join this\n> boring movement, or I'll have to find another profession.\n\nLet's put aside, for the moment, the absurd argument that web development is\nnot challenging, and that it attracts sub-par software developers. Even if\nthat was true, it's irrelevant.\n\nI hate to have to be the one to break the bad news to Michael, but for an\nincreasingly large percentage of users, the desktop application is already\ndead. Most desktop applications typical users need have been replaced by web\napplications for years now. And more are replaced every day, as web browsers\nevolve to become more robust, more capable, more powerful.\n\nYou hope everything doesn't \"move to the web\"? Wake the hell up! It's already\nhappened!\n\nAny student of computing history will tell you that the dominance of web\napplications is exactly what the principle of least power predicts:\n\n> Computer Science spent the last forty years making languages which were as\n> powerful as possible. Nowadays we have to appreciate the reasons for picking\n> not the most powerful solution but the least powerful. The less powerful the\n> language, the more you can do with the data stored in that language. If you\n> write it in a simple declarative from, anyone can write a program to analyze\n> it. If, for example, a web page with weather data has RDF describing that\n> data, a user can retrieve it as a table, perhaps average it, plot it, deduce\n> things from it in combination with other information. At the other end of\n> the scale is the weather information portrayed by the cunning Java applet.\n> While this might allow a very cool user interface, it cannot be analyzed at\n> all. The search engine finding the page will have no idea of what the data\n> is or what it is about. The only way to find out what a Java applet means is\n> to set it running in front of a person.\n\nThe web is the very embodiment of doing the stupidestsimplest thing that could\npossibly work. If that scares you -- if that's disturbing to you -- then I\nhumbly submit that you have no business being a programmer.\n\nShould all applications be web applications? Of course not. There will\ncontinue to be important exceptions and classes of software that have nothing\nto do with the web. But these are minority and specialty applications.\nImportant niches, to be sure, but niches nonetheless.\n\nIf you want your software to be experienced by as many users as possible,\nthere is absolutely no better route than a web app. The web is the most\nefficient, most pervasive, most immediate distribution network for software\never created. Any user with an internet connection and a browser, anywhere in\nthe world, is two clicks away from interacting with the software you wrote.\nThe audience and reach of even the crappiest web application is astonishing,\nand getting larger every day. That's why I coined Atwood's Law.\n\n> Atwood's Law: any application that can be written in JavaScript, will\n> eventually be written in JavaScript.\n\nWriting Photoshop, Word, or Excel in JavaScript makes zero engineering sense,\nbut it's inevitable. It will happen. In fact, it's already happening. Just\nlook around you.\n\nAs a software developer, I am happiest writing software that gets used. What's\nthe point of all this craftsmanship if your software ends up locked away in a\nbinary executable, which has to be purchased and licensed and shipped and\ndownloaded and installed and maintained and upgraded? With all those old,\ntraditional barriers between programmers and users, it's a wonder the software\nindustry managed to exist at all. But in the brave new world of web\napplications, those limitations fall away. There are no boundaries. Software\ncan be everywhere.\n\nWeb programming is far from perfect. It's downright kludgy. It's true that any\nJ. Random Coder can plop out a terrible web application, and 99% of web\napplications are absolute crap. But this also means the truly brilliant\nprogrammers are now getting their code in front of hundreds, thousands, maybe\neven millions of users that they would have had absolutely no hope of reaching\npre-web. There's nothing sadder, for my money, than code that dies unknown and\nunloved. Recasting software into web applications empowers programmers to get\ntheir software in front of someone, somewhere. Even if it sucks.\n\nIf the audience and craftsmanship argument isn't enough to convince you,\nconsider the business angle.\n\n> You're doing a web app, right? This isn't the 1980s. Your crummy, half-assed\n> web app will still be more successful than your competitor's most polished\n> software application.\n\nPretty soon, all programming will be web programming. If you don't think\nthat's a cause for celebration for the average working programmer, then maybe\nyou should find another profession.\n\nNext\n\n### The Only Truly Failed Project\n\nPrevious\n\n### Are You a Digital Sharecropper?\n\n#### Written by Jeff Atwood\n\nIndoor enthusiast. Co-founder of Stack Overflow and Discourse. Disclaimer: I\nhave no idea what I'm talking about. Find me here:\nhttps://infosec.exchange/@codinghorror\n\nYour new development career awaits. Check out the latest listings. ads via\nCarbon\n\n### Resources\n\n  * About Me\n  * discourse.org\n  * stackexchange.com\n  * Learn Markdown\n  * Recommended Reading\n\n  * Subscribe in a reader\n  * Subscribe via email\n\nCoding Horror has been continuously published since 2004\n\nCopyright Jeff Atwood \u00a9 2024 Logo image \u00a9 1993 Steven C. McConnell Proudly\npublished with Ghost\n\n", "frontpage": false}

{"aid": "40002385", "title": "Exploring the Theory of Computing", "url": "https://cacm.acm.org/opinion/exploring-the-theory-of-computing/", "domain": "acm.org", "votes": 2, "user": "chmaynard", "posted_at": "2024-04-11 14:15:08", "comments": 0, "source_title": "Exploring the Theory of Computing \u2013 Communications of the ACM", "source_text": "Exploring the Theory of Computing \u2013 Communications of the ACM\n\nSkip to content\n\nSearch Sign In\n\nJoin ACM\n\nOpinion\n\nTheory\n\n# Exploring the Theory of Computing\n\n2023 ACM A.M. Turing Award laureate Avi Wigderson discusses his work in an\ninterview originally published in January 2020.\n\nBy Allyn Jackson\n\nPosted Apr 8 2024\n\n  * Share\n\n    * Twitter\n    * Reddit\n    * Hacker News\n  * Print\n  * Join the Discussion\n\nFor close to half a century, the problem of P versus NP has resisted\nresolution. It also has inspired a tremendous flowering of the field of\ntheoretical computer science and led to an explosion of interconnections to\nother branches of science and engineering.\n\nAvi Wigderson\u2019s new 440-page book, Mathematics and Computation: A Theory\nRevolutionizing Technology and Science (Princeton University Press, October\n2019), lays out a commanding overview of the theory of computing and argues\nfor its central role in human thought.\n\nWigderson is the Herbert H. Maass Professor in the School of Mathematics of\nthe Institute for Advanced Study in Princeton, NJ, where he has been leading\ncomputer science and discrete math activities for the past 20 years. Among his\nhonors is the 2019 Donald E. Knuth Prize, conferred by the ACM Special\nInterest Group on Algorithms and Computation Theory (SIGACT) and the IEEE\nTechnical Committee on the Mathematical Foundations of Computing for\noutstanding contributions to the foundations of computer science.\n\nCACM recently spoke with Wigderson about his book. What follows is an edited\nand condensed version of the conversation.\n\nThis is a very unusual book. It\u2019s part exposition of the development of a\ntechnical area, part account of the state of an art, part philosophical\nexploration. It seems to me it\u2019s also part love letter; there is a lot of\npassion in the book. How did it come about?\n\nIt came out of a failure to write a different book. When I started eight or\nmore years ago, I was planning to write a popular book. I wrote several\nchapters but found it very hard to decide on the level. Eventually Edna, my\nwife, suggested that I write a book that I can finish!\n\nThis is the book that I knew how to write. It\u2019s aimed at a somewhat more\nsophisticated audience, not very sophisticated; undergrads can read it. Quite\na few chapters can be read by almost anyone with a little background and, of\ncourse, motivation. I hope the clarity is attractive enough for people who\nstart reading to be caught and to continue.\n\nI am indeed passionate about my research area (and academic community). You\nmentioned how unusual the book is. This has several aspects. I have always\nbeen fascinated by the philosophical side of the field, its connection to\nother sciences, and to the history of ideas. I wanted to write about all these\nthings. I don\u2019t find them so much in existing texts.\n\nWhat is absolutely essential to the success of complexity theory is the many\ninterconnections and a flow of ideas between various areas. To describe this\nwas a major goal for me in this book: to have all the cross-references, both\nbetween complexity and cryptography and randomness, and among many concepts\nthat arise and flow freely between areas, even into quantum mechanics and\nquantum computing and back. It\u2019s amazing that all these connections exist. I\nmade a decision that I am not going to put any proofs in the book, only ideas\nof proofs and references to proofs. If there were proofs, it would be five\ntimes as large.\n\nMost of the world views the success of computers as a success of technology.\nWell, underlying any major industry is a theoretical idea. Electronic\ncommerce, the Internet, quantum computing, blockchains, things that billions\nare invested in and that the world relies on, started with theory. The last\nchapter of the book talks about how fundamental computational processes are to\nscience in general, in all fields. We now have plenty of evidence of this from\nseven or eight different fields of science where the impact is already felt. I\nbelieve that it will grow much more.\n\nThe book gives a great account of the P versus NP problem, which is at the\nheart of the theory of computing. Can you say briefly why this problem has\nbecome so central, and why it\u2019s so hard?\n\nFirst, we are extremely lucky as a field to have had this problem as the major\ngoal. It was developed in the early 1970s and is really the beginning of\ncomputational complexity. The problem is fundamental. One can see that because\nit asks something that I can explain to anybody on the street\u2014and I do, all\nthe time! It\u2019s a problem about the difficulty of finding something, versus\njust verifying that you found what you were looking for. Everybody\u2019s\nexperience in the world is that it is far easier to verify something that you\nwere looking for than actually to find it. Proving theorems and solving\npuzzles are great examples of this. Finding specific theories that explain\ngiven data is also a great example.\n\nThe P versus NP problem captures a vast amount of human activity that is of\nthis nature, of looking for something: explanations, theories, solutions to\nproblems, proofs of theorems. And there is an unconscious belief that when we\nfind this, we will recognize that we have found it, right? We would not be\nlooking for anything we wouldn\u2019t recognize when we found it. We know already\nwhen we are looking for something that it would be easy to verify. And if\nfinding is as easy as verifying, if P equals NP, then all these human\nactivities would have an automatic solution, immediately. That\u2019s why this\nproblem is so intriguing, and why it\u2019s so fundamentally connected to so many\nhuman activities.\n\nIt\u2019s also a very concrete, simple-to-state mathematical problem. I give you a\ngraph or a planar map, and I ask whether it\u2019s 3-colorable. If you can solve\nthis quickly, then P equals NP. It\u2019s a purely mathematical question,\ncompletely formal. But it also has philosophical content. There are many\nimportant mathematical problems, such as the Riemann Hypothesis, but I don\u2019t\nbelieve there is any mathematical problem with such deep philosophical content\nas P versus NP.\n\nFifty years of evidence shows that it\u2019s probably difficult to resolve\u2014of\ncourse, one never knows, maybe tomorrow some kid will find an answer. We don\u2019t\nknow how difficult it is. But we are fortunate as a field to have had this as\na major goal, because once you try to understand this problem and develop a\ntheory and a set of techniques to attack it, like you do with any other major\nmathematical problem, you come to a huge set of other problems that are much\nmore concrete. Maybe they are about computations that are more restricted;\nmaybe they are about different models of computation like randomized and\nquantum models. You start to discover lots of other things.\n\nThe book makes the case that the theory of computing is right up there with\nthe theory of biology, the theory of physics, that it really is that central\nand fundamental.\n\nAbsolutely, no doubt about it. The theory of computing is a field that could\nexist, and probably should exist, separately from computer science. It\u2019s as\nfundamental as the major theories of physics and biology. It was born in\ncomputer science, and that is why it is in computer science, and of course\nunderstanding computation is what computer science is about. But understanding\ncomputational processes, natural and artificial, wherever they exist (and they\nexist all over) is the business of the theory of computing. There might have\nbeen no computers whatsoever, and this theory would still be fundamental to\nbiology, to physics, to evolution, to social processes, because anyplace where\nthere is a process, you can view it as a computational process.\n\nThe way I foresee the future of science focuses on processes and how they use\nresources, their tradeoffs, and their impact on the power of a particular\nsystem\u2014like the brain or the immune system or evolution. Once you consciously\nadd these parameters, namely the resources utilized by a process, and study\nfeasibility of theories relative to their potential implementation under these\nrestrictions, there is a lot to gain.\n\nIn the P versus NP question, there is a dividing line based on polynomials:\nOne is always looking for polynomial-time algorithms. Why polynomial?\n\nThere is a subsection in the book called \u201cWhy polynomial?\u201d This is another\nextremely lucky choice made early, in the 1960s. There were problems solvable\nin exponential time with just brute-force search, and then there were the few\nexamples where we had efficient algorithms\u2014some ran in linear time, some in\nquadratic time, some in cubic time. The smart people at the time, Edmonds and\nRabin and Cobham, observed that polynomials represent a kind of moderate\ngrowth that is very different from exponential growth.\n\nA polynomial is composable, so if you multiply or add polynomials, or if you\ntake a polynomial of a polynomial, you get a polynomial. So it has nice\nclosure properties. This is very much in synchrony with the fact that, when we\nwrite programs or algorithms, we often subsequently put one inside another,\nlike a subroutine.\n\nIf you have a problem where the only known algorithm is a brute-force solution\nexponential in n, and you manage to find a polynomial-time algorithm, even if\nthe degree is n1000, then you must have had a fundamental idea in\nunderstanding that problem.; you have made a leap. Breaking this exponential\nbarrier, finding a much faster algorithm, is a major understanding of the\nproblem. Then, you can look for even faster, more practical algorithms.\n\nDeep learning is mentioned in your book. Deep learning tools are used as a\n\u201cblack box\u201d; they have no explanatory theory. Do you see prospects for\ndeveloping a theory for deep learning?\n\nOf course I do. I see this prospect in every scientific endeavor. I am very\noptimistic, but it\u2019s a serious scientific problem. People have been studying\nthe brain seriously in a scientific way for, let\u2019s say a century. Nobody\ncomplained that we don\u2019t yet have a theory of how the brain works.\n\nThe deep-learning machine is another organ. We designed it, it did not evolve\nlike the brain, but suddenly it does all these things that the human brain\ndoes. It has existed for less than 10 years. Industry is thirsty, people are\nthirsty for quick delivery of understanding of this. I am optimistic there\nwill be a theory of it, as I am optimistic about the brain, but you have to be\npatient. Obviously, it\u2019s a complex beast.\n\nAnother thing that people tend to forget is that the processing power of deep\nlearning machines is only part of their success. Deep in the heart of any deep\nlearning algorithm is stochastic gradient descent and the back-propagation\nalgorithm, which computes gradients and which is from 30 or 40 years ago.\nUnderstanding of its efficiency improved back-propagation from quadratic to\nnear-to-linear time, and that is essential to the success of deep learning.\nThere are many examples where improving the efficiency of theoretical\nalgorithms creates billion-dollar industries: signal processing, error\ncorrection, Internet search, and many others.\n\nThe book is dedicated to your father, Pinchas Wigderson. Can you tell me about\nhim?\n\nBoth my parents were Holocaust survivors. They lost essentially their whole\nfamilies in World War II. The Nazis killed almost all of them. My parents met\nin Israel, and my father worked for the Israeli Navy all his life, fixing the\nengines of ships.\n\nAvi Wigderson\u2019s father, Pinchas. Photo courtesy of Avi Wigderson.\n\nThe picture of him in the book shows him in one of the ships?\n\nNo, the picture is from the wartime; I put 1943, although I am not absolutely\nsure of the date. After the Nazi invasion of Poland, he and his brother\nescaped to Russia. My father was very young, 17, and was sent to Ashgabat,\nTurkmenistan. His talents as a potential engineer were clear to the Russians.\nHe worked most of the war years in an electrical plant, and that\u2019s where the\npicture was taken. My parents never talked much about their experiences in the\nNazi period. They didn\u2019t burden their kids with the memories\u2014this is common\namong Holocaust survivors.\n\nMy father loved people, and he loved puzzles. I was extremely influenced by\nthese two loves. From the time I was very young, he would ask me riddles and\npuzzles. He would describe his work trying to understand a problem in the\nengine of a ship, with very limited ways of testing. My love of math I\nattribute a lot to him. He was a very social person, he loved talking to\npeople, he loved helping people. He loved explaining anything he understood to\nanyone who was willing to listen. He loved to explain how to build things, how\nto fix the car and the washing machine, which I was never interested in, but\nmy younger brother was. I absorbed all this as a kid.\n\nAny final comments?\n\nI am very happy that the book finally appeared in print. I own the copyright,\nand the book will also remain freely available on my website for anyone to\ndownload.\n\nAllyn Jackson is a journalist specializing in science and mathematics, who is\nbased in Germany.\n\n  * Share\n\n    * Twitter\n    * Reddit\n    * Hacker News\n  * Print\n  * Join the Discussion\n\n### Related Reading\n\n  * News\n\nHonoring the Ties Between Computer Science and Mathematics\n\nComputing Profession\n\n  * News\n\nWigderson Named Turing Awardee for Decisive Work on Randomness\n\nComputing Profession\n\n  * News\n\nPure Randomness Extracted from Two Poor Sources\n\nSystems and Networking\n\n  * Opinion\n\nThrough the Lens of a Passionate Theoretician\n\nComputing Profession\n\nAdvertisement\n\nAdvertisement\n\n### Join the Discussion (0)\n\n#### Become a Member or Sign In to Post a Comment\n\nSign In Sign Up\n\n### The Latest from CACM\n\nExplore More\n\nNews Apr 10 2024\n\nWigderson Named Turing Awardee for Decisive Work on Randomness\n\nNeil Savage\n\nComputing Profession\n\nBLOG@CACM Apr 9 2024\n\nScreen Time: What and How Much is Too Much?\n\nSaurabh Bagchi\n\nHCI\n\nNews Apr 8 2024\n\nPerspectives on AI from Around the Globe\n\nKaren Emslie\n\nArtificial Intelligence and Machine Learning\n\n### Shape the Future of Computing\n\nACM encourages its members to take a direct hand in shaping the future of the\nassociation. There are more ways than ever to get involved.\n\nGet Involved\n\n### Communications of the ACM (CACM) is now a fully Open Access publication.\n\nBy opening CACM to the world, we hope to increase engagement among the broader\ncomputer science community and encourage non-members to discover the rich\nresources ACM has to offer.\n\nLearn More\n\nTopics\n\n  * Architecture and Hardware\n  * Artificial Intelligence and Machine Learning\n  * Computer History\n  * Computing Applications\n  * Computing Profession\n  * Data and Information\n  * Education\n  * HCI\n  * Philosophy of Computing\n  * Security and Privacy\n  * Society\n  * Software Engineering and Programming Languages\n  * Systems and Networking\n  * Theory\n\nMagazine\n\n  * Latest Issue\n  * Magazine Archive\n  * Editorial Staff and Board\n  * Submit an Article\n  * Alerts & Feeds\n  * Author Guidelines\n\nCommunications of the ACM\n\n  * About Us\n  * Frequently Asked Questions\n  * Contact Us\n  * For Advertisers\n  * Join ACM\n\n\u00a9 2024 Communications of the ACM. All Rights Reserved.\n\n  * Cookie Notice\n  * Privacy Policy\n\nBy continuing to use our website, you are agreeing to our use of cookies. To\nfind out more, please see our Privacy Policy.\n\n", "frontpage": false}

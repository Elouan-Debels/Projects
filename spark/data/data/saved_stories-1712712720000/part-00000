{"aid": "39983249", "title": "Calculating the fixed-point representation of (1 \u2013 SQRT(0.5)) precisely", "url": "https://stackoverflow.com/questions/78300410/calculating-the-fixed-point-representation-of-1-sqrt0-5-to-arbitrary-level", "domain": "stackoverflow.com", "votes": 1, "user": "kittoes", "posted_at": "2024-04-09 19:31:41", "comments": 2, "source_title": "Calculating the fixed-point representation of (1 - SQRT(0.5)) to arbitrary levels of precision", "source_text": "c - Calculating the fixed-point representation of (1 - SQRT(0.5)) to arbitrary\nlevels of precision - Stack Overflow\n\nStack Overflow\n\n  1. About\n  2. Products\n  3. For Teams\n\n  1. Stack Overflow Public questions & answers\n  2. Stack Overflow for Teams Where developers & technologists share private knowledge with coworkers\n  3. Talent Build your employer brand\n  4. Advertising Reach developers & technologists worldwide\n  5. Labs The future of collective knowledge sharing\n  6. About the company\n\n##### CollectivesTM on Stack Overflow\n\nFind centralized, trusted content and collaborate around the technologies you\nuse most.\n\nLearn more about Collectives\n\nTeams\n\nQ&A for work\n\nConnect and share knowledge within a single location that is structured and\neasy to search.\n\nLearn more about Teams\n\nGet early access and see previews of new features.\n\nLearn more about Labs\n\n# Calculating the fixed-point representation of (1 - SQRT(0.5)) to arbitrary\nlevels of precision [closed]\n\nAsk Question\n\nAsked today\n\nModified today\n\nViewed 61 times\n\nThis question shows research effort; it is useful and clear\n\n-3\n\nSave this question.\n\nShow activity on this post.\n\nClosed. This question does not meet Stack Overflow guidelines. It is not\ncurrently accepting answers.\n\nThis question does not appear to be about programming within the scope defined\nin the help center.\n\nClosed 51 mins ago.\n\nImprove this question\n\nThe level of hostility here is insane. I really did my best to provide as much\ninformation and context as possible, but it's quite an esoteric problem to\nbegin with. Instead of even remotely trying to help me improve things, all\ny'all did was downvote immediately and whine unhelpfully. I have done my best\nto answer your questions, and alter this post as requested, but there's just\nno pleasing this community. You win, consider this question abandoned.\n\nI have a constant 0.29289321881345247559915563789515..., which can be\ncalculated using the equation (1 - SQRT(0.5)) and then transformed into fixed-\npoint format in order to be used with various sizes of unsigned integers. See\nthe following table for examples:\n\nWord Size| Q Format| Decimal Value| Binary Value  \n---|---|---|---  \n8-bit| Q0.3| 5| 101  \n16-bit| Q0.7| 75| 1001011  \n32-bit| Q0.15| 19195| 100101011111011  \n64-bit| Q0.31| 1257966796| 1001010111110110000110011001100  \n128-bit| Q0.63| 5402926248376769403|\n100101011111011000011001100110000000110001000011001101101111011  \n  \nThe problem is that calculating these values becomes infeasible due to the\nfact that it involves the square root function and numbers that can get\narbitrarily large. I remember learning about a \"spigot algorithm\" that outputs\nthe digits of \u03c0 using a bounded amount of memory and was hoping that something\nsimilar exists for constants such as the one described above. This paper came\nup during my search, but I have not been able to grok it well enough to\ntranslate into code.\n\nHow can one accomplish this in a C-like language (preferably C#)? Is there a\nbetter way to accomplish the goal of calculating this value for word sizes\nthat are a power of two?\n\nExtra Context\n\nI have the following C# snippet that is from another question:\n\n    \n    \n    y -= uint.CreateChecked(value: BinaryIntegerConstants<T>.Size) switch { 8U => (x * ((y * T.CreateChecked(value: 5UL)) >> 4)), 16U => (x * ((y * T.CreateChecked(value: 75UL)) >> 8)), 32U => (x * ((y * T.CreateChecked(value: 19195UL)) >> 16)), 64U => (x * ((y * T.CreateChecked(value: 1257966796UL)) >> 32)), 128U => (x * ((y * T.CreateChecked(value: 5402926248376769403UL)) >> 64)), _ => throw new NotSupportedException(), // TODO: Research a way to calculate the proper constant at runtime. }\n\nI have manually calculated the constants above by using C# code, but cannot go\nany further due to the limits of the double type.\n\n  * c\n  * math\n  * binary\n  * fixed-point\n  * arbitrary-precision\n\nShare\n\nCC BY-SA 4.0\n\nImprove this question\n\nFollow this question to receive notifications\n\nedited 55 mins ago\n\nKittoes0124\n\nasked 2 hours ago\n\nKittoes0124Kittoes0124\n\n4,99633 gold badges2727 silver badges4747 bronze badges\n\n7\n\n  * 2\n\nYou need to ask a more specific question, like identify the part of the paper\nthat's confusing you. Otherwise, it seems like you're just asking someone to\nwrite the code for you.\n\n\u2013 Barmar\n\n2 hours ago\n\n  * How large is 'arbitrarily large'? Is it so large that you can't set up one large bit array, and use the appropriate n bits?\n\n\u2013 Weather Vane\n\n2 hours ago\n\n  * @Barmar Sure, see the example in section 3 of the paper? It makes absolutely zero sense to me because the value of the square root of 7 is 2.6457513... the example doesn't seem to even remotely resemble that and so I've ended up quite confused.\n\n\u2013 Kittoes0124\n\n2 hours ago\n\n  * 2\n\nPut the clarification in the question. Comments are ephemeral, the question is\npermanent.\n\n\u2013 Barmar\n\n1 hour ago\n\n  * 1\n\nNo need to address your comments to me. I don't know anything about this area\nof math, I'm not planning on trying to answer the question.\n\n\u2013 Barmar\n\n1 hour ago\n\n| Show 2 more comments\n\nRelated questions\n\n7\n\nInverse sqrt for fixed point\n\n4\n\nNotation for fixed point representation\n\n3\n\nFixed precision vs. arbitrary precision\n\nRelated questions\n\n7\n\nInverse sqrt for fixed point\n\n4\n\nNotation for fixed point representation\n\n3\n\nFixed precision vs. arbitrary precision\n\n35\n\nFast fixed point pow, log, exp and sqrt\n\n0\n\nCustom binary representation of fixed point number\n\n2\n\nNegative fixed point number representation\n\n2\n\nFixed point <-> Double precision\n\n3\n\nOptimizing Fixed-Point Sqrt\n\nLoad 5 more related questions Show fewer related questions\n\n## 0\n\nReset to default\n\n##\n\nBrowse other questions tagged\n\n  * c\n  * math\n  * binary\n  * fixed-point\n  * arbitrary-precision\n\nor ask your own question.\n\n  * The Overflow Blog\n  * What a year building AI has taught Stack Overflow\n\n  * Want to be a great software engineer? Don\u2019t be a jerk.\n\n  * Featured on Meta\n  * New Focus Styles & Updated Styling for Button Groups\n\n  * Upcoming initiatives on Stack Overflow and across the Stack Exchange network\n\n  * Staging Ground is coming back and moving out of beta\n\n  * Temporary policy: Generative AI (e.g., ChatGPT) is banned\n\n  * Pausing the 1-rep voting experiment on Stack Overflow: reflecting on the...\n\n#### Hot Network Questions\n\n  * Can religions die?\n\n  * As a Moon druid, does the Primal Strike feature make my attacks while in Elemental Wild Shape count as magical?\n\n  * Why infinite spheres and not just two?\n\n  * Can anyone explain this sacrifice?\n\n  * How do I deal with crying in front of my supervisor?\n\n  * I think I downloaded spyware! I used a curl command in terminal given by a fake support user to download a .sh file\n\n  * Colorbar to illustrate the change of a specific parameter\n\n  * Questions About the FunctionExpand Function\n\n  * Why is it a problem if China is exporting \"too many clean-energy goods\"?\n\n  * Academic view of graduates who go to US national labs?\n\n  * Can the Pythagorean Graph be finitely colored?\n\n  * Do you say \"my car is high on fuel\" as a counterpart of \"my car is low on fuel\"?\n\n  * Frozen World Atmosphere?\n\n  * Combining duplicate elements in a list\n\n  * I need a word for the atmosphere between two people\n\n  * How to start a LuaTeX-non-hb engine?\n\n  * How can I make a custom header in less? Or alternatively, how can I open two files simultaneously in less?\n\n  * Is it good practice to place decoupling capacitors near connector pins?\n\n  * Confused as why TurboTax asking for 2022 Tax Liability to calculate 2023 underpayment penalty\n\n  * How to create animated GIF from a sequence of image files?\n\n  * Contour integral - Cauchy's Residue Theorem\n\n  * First mention of Einstein in Science Fiction?\n\n  * Endomorphisms of simple dualizable objects in a linear abelian monoidal categories\n\n  * ESTA unnecessary anxiety\n\nlang-c\n\n  * Blog\n  * Facebook\n  * Twitter\n  * LinkedIn\n  * Instagram\n\nSite design / logo \u00a9 2024 Stack Exchange Inc; user contributions licensed\nunder CC BY-SA. rev 2024.4.8.7402\n\n## We Care About Your Privacy\n\nWe and our 4 partners store and/or access information on a device, such as\nunique IDs in cookies to process personal data. You may accept or manage your\nchoices by clicking below, including your right to object where legitimate\ninterest is used, or at any time in the privacy policy page. These choices\nwill be signaled to our partners and will not affect browsing data.\n\nCookie Policy.\n\n### We and our partners perform the following based on your settings:\n\nUse precise geolocation data. Actively scan device characteristics for\nidentification. Understand audiences through statistics or combinations of\ndata from different sources. Store and/or access information on a device.\nDevelop and improve services. Create profiles to personalise content. Measure\ncontent performance. Use limited data to select content. Measure advertising\nperformance. Use limited data to select advertising. Create profiles for\npersonalised advertising. Use profiles to select personalised advertising. Use\nprofiles to select personalised content.\n\n", "frontpage": false}

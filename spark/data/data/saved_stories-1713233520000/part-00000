{"aid": "40045028", "title": "Four Learning Areas for Prospective Engineering Managers", "url": "https://jeffammons.com/2024/04/11/four-learning-areas-for-prospective-engineering-managers/", "domain": "jeffammons.com", "votes": 1, "user": "jammons", "posted_at": "2024-04-15 20:10:23", "comments": 0, "source_title": "Four Learning Areas for Prospective Engineering Managers", "source_text": "Four Learning Areas for Prospective Engineering Managers \u2013 Jeff Ammons\n\nSkip to content\n\nJeff Ammons\n\n# Four Learning Areas for Prospective Engineering Managers\n\nPosted byJeff AmmonsApril 11, 2024April 14, 2024Posted inEngineering\nManagement, Software EngineeringTags:engineering management, management\n\nSoftware engineering management is a challenging role, with many different\nskills required to do it well. It can be challenging to know where to start\nwhen considering moving into the role. This post lays out a framework that can\nbe used by the managers of prospective engineers as well as the engineers who\nmay be looking for a successful path into a management role.\n\nWhen discussing a move into engineering management with interested engineers,\nI like to frame it through 4 pillars of engineering management:\n\n  * Product \u2013 Understanding the business and how your product satisfies customer needs. Knowing how to manage stakeholder expectations.\n  * Process \u2013 Understanding how the system of humans in a company turns problems into solutions. Often this entails agile development methodologies, but it can also include creating systems to manage internal issues like compensation reviews.\n  * People \u2013 Understanding what matters to people, how to communicate well, how to manage both conflict and feedback effectively.\n  * Technology \u2013 Understanding how your system is built, areas of risk, scaling problems, and architectural patterns.\n\nI want a new manager to demonstrate basic competency in each of these areas.\nIn addition, they need to show high promise in at least one, ideally more, of\nthese. To provide a bit more detail: imagine ranking everyone on the\nengineering team on a 1-10 point scale for each aspect (with 5 as the median).\nI consider basic competency for a new manager as 6+ on this 10 point scale. I\nalso want to see them at an 8+ for one of these areas. This quantification is\nsomewhat subjective, but it suggests they are better than 80% of your\nengineering team. Two examples of this are: 1) I would consider an 8 for\ntechnology as nearing the high end for a senior engineer and 2) I would\nconsider someone an 8 for process if they were able to successfully play the\nrole of scrum coach on their development team, while also performing\nengineering duties.\n\nMost engineers moving into management will be strongest in technology, as it\nis currently their primary focus. This still leaves the remaining Product,\nProcess, and People to demonstrate. Because this person is coming from a\ndifferent role into a management role, they likely won\u2019t have a track record\nof performance in all 4 areas. Instead, I am looking for enough evidence to\nfeel confident in their potential to rapidly develop above-average skills in\neach of these areas.\n\nFor a new engineer who has expressed interest in managing, I would do the\nfollowing:\n\n  1. Do a quick score assessment of where I think they fall in each category. Document what evidence I have to either support or detract from their number.\n  2. Discuss and provide evidence for my scoring process (I don\u2019t always share the specific numbers, but would give directional feedback). During this process, I\u2019ll encourage them to add any additional evidence I have missed.\n  3. Brainstorm opportunities to demonstrate any skills I found lacking, then prioritize and execute on skill-building exercises (See the appendix for ideas of what these could look like).\n\nDepending on where they are starting from, steps #2 and #3 can take months or\nyears to work though, but at any point in time the engineer should have one or\ntwo areas they are working on to build skills. This could be taking the lead\non a new project (process/product), mentoring an intern (people), organizing a\ngroup to tackle an area of tech debt (people/process). It should be possible\nto find items which benefit the business, give them a challenge, and\ndemonstrate leadership skills.\n\nAs you choose the right tasks for prospective managers to work on, consider\nhow much risk is appropriate based on their current skills as well as the\ntask. In giving them managerial work , you are putting them in a position to\nimprove or detract from the work and careers of those around them. Some risk\nis okay, but don\u2019t be delinquent in considering the impact to others on the\nteam. I like to consider the \u2018blast radius\u2019 \u2014 meaning, if this went really\nwrong, how big would the likely effect be, and how quickly could I identify\nand mitigate it?\n\nAs a final note, as you work together through these projects, make sure they\nare documenting their learnings and successes. This can both help them stay\nmotivated and help you build a solid promotion-case for anyone you may have to\nconvince (even if it\u2019s just yourself).\n\n## Appendix:\n\nHere are some ideas for skill development in each area outside of technology,\nwhich likely is covered by their day-to-day activities. Note that there is\noverlap among them:\n\nProduct\n\n  * Work with the product manager to write tickets for a project\n  * Help the team understand how their current projects tie to company goals and finances\n  * Work with other engineers to develop a long-term technical roadmap that supports business needs\n  * Find opportunities to improve the product and work with others to refine the idea and get it shipped to production.\n  * Build metrics and dashboards for products the team is building and monitor them after launch for learnings\n\nProcess\n\n  * Run team scrum process and meetings\n  * Participate in long-term team planning process, including helping develop artifacts, such as the product roadmap\n  * Build out and manage a Gantt chart for a complicate project with dependencies\n  * Project-manage a complex, multi-team project (tech debt projects are great opportunities for this)\n\nPeople\n\n  * Onboard a new engineer\n  * Lead team meetings\n  * Identify conflict on the team and help encourage healthy dialogs\n  * Perform 1:1s with the team while the manager is on vacation\n  * Mentor engineers on other teams or participate in a company mentorship program\n  * Consider opportunities for leadership within technical initiatives, hackathons, organizing a team events (be mindful to not just have this person do all of the planning grunt-work on the team, but some is useful)\n\nPosted byJeff AmmonsApril 11, 2024April 14, 2024Posted inEngineering\nManagement, Software EngineeringTags:engineering management, management\n\n### Leave a ReplyCancel reply\n\n## Subscribe for new posts\n\nJeff Ammons,\n\n## Discover more from Jeff Ammons\n\nSubscribe now to keep reading and get access to the full archive.\n\nContinue reading\n\n", "frontpage": false}

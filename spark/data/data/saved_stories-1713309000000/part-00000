{"aid": "40054531", "title": "Show HN: Bridge \u2013 Automatic Infrastructure for Django", "url": "https://github.com/Never-Over/bridge", "domain": "github.com/never-over", "votes": 2, "user": "the1024", "posted_at": "2024-04-16 17:08:47", "comments": 0, "source_title": "GitHub - Never-Over/bridge", "source_text": "GitHub - Never-Over/bridge\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nNever-Over / bridge Public\n\n  * Notifications\n  * Fork 0\n  * Star 4\n\n### License\n\nGPL-3.0 license\n\n4 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# Never-Over/bridge\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n3 Branches\n\n17 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ncaeleandjangoa1a2a57 \u00b7\n\n## History\n\n224 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Add pytest-mock to CI environment, run pytest from root to catch new ...  \n  \n### bridge\n\n|\n\n### bridge\n\n| Version 0.1.0  \n  \n### docs\n\n|\n\n### docs\n\n| Use Python script for simple logic for installing dependencies with p...  \n  \n### tests\n\n|\n\n### tests\n\n| Use Python script for simple logic for installing dependencies with p...  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| basic templating flow working for render, sample templates  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| django  \n  \n### mkdocs.yml\n\n|\n\n### mkdocs.yml\n\n| Fix some missing info in docs, fix mkdocs config  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Version 0.1.0  \n  \n### ruff.toml\n\n|\n\n### ruff.toml\n\n| passing ruff check  \n  \n## Repository files navigation\n\n# bridge\n\nFully automate your infrastructure for Django.\n\nFull Documentation\n\n### What is bridge?\n\nBridge enables you to seamlessly run and deploy all the infrastructure you\nneed for a complete Django project.\n\n  * Two lines of copy-paste configuration\n  * Local Postgres database automatically configured and connected\n  * Local Redis instance automatically configured and connected\n  * Local Celery and Celery Flower instance automatically configured and connected\n  * Easy one-command deploy configuration to Render\n\n### Installation\n\nInstall Docker and verify it's running:\n\n    \n    \n    > docker version Client: ...\n\nInstall bridge:\n\n    \n    \n    pip install python-bridge\n\n### Usage\n\nAdd the following code to the end of your settings.py file (or\nDJANGO_SETTINGS_MODULE):\n\n    \n    \n    from bridge.django import configure configure(locals())\n\nThe next time you start up your application, bridge will create and configure\nlocal infrastructure for you:\n\n    \n    \n    > ./manage.py runserver Setting up service bridge_postgres... [12:00:00] \u2713 Image postgres:12 pulled [12:00:00] \u2713 Container bridge_postgres started [12:00:00] \u2713 bridge_postgres is ready Service bridge_postgres started! Setting up service bridge_redis... [12:00:00] \u2713 Image redis:7.2.4 pulled [12:00:00] \u2713 Container bridge_redis started [12:00:00] \u2713 bridge_redis is ready Service bridge_redis started! Setting up service bridge_celery... [12:00:00] \u2713 Local worker started Service bridge_celery started! Setting up service bridge_flower... [12:00:00] \u2713 Flower started Service bridge_flower started! Performing system checks... System check identified no issues (0 silenced). Starting development server at http://127.0.0.1:8000/ Quit the server with CONTROL-C.\n\nThat's it! You now have all the local infrastructure you need to run your\ndjango application.\n\n### Deploys\n\nBridge can also handle deployed configuration for your app as well! Simply\nrun:\n\n    \n    \n    bridge init render\n\nYou may be prompted for the entrypoint of your application and settings file\nif bridge cannot detect them. Bridge will create all the configuration\nnecessary for you to immediately deploy to Render. This includes a Blueprint\nrender.yaml as well as build scripts and start scripts for your Django\napplication. After running bridge init render, commit the changes and visit\nyour project on github. You will see the following button at the end of your\nREADME in the root of your repository:\n\nTo deploy your application to the world, simply click the button! Bridge will\nconfigure everything needed for Render to deploy and host your app.\n\nIn the future, we'll look into supporting more deployment runtimes such as\nHeroku, AWS, GCP, Azure, and more.\n\n### FAQ\n\nHow does bridge work?\n\n  * Bridge spins up and runs all the services needed for your infrastructure in the background. Postgres and Redis run in docker containers, while Celery and Celery Flower (which need to understand your application code) run as background processes.\n\nWhat if I don't need all the services that bridge provides?\n\n  * Bridge is designed to be modular. You can configure only the services you need by editing the bridge.yaml file that bridge creates in your project root. By default, enable_postgres: true and enable_worker: true are set, but you can change these to false to prevent bridge from configuring Postgres and Celery respectively.\n\nHow can I stop the services that bridge spins up?\n\n  * bridge stop will stop all running services.\n\nHow can I access the database directly?\n\n  * Locally, bridge provides access to a psql shell through bridge db shell. Remotely, Render has instructions for connecting.\n\nHow can I access redis directly?\n\n  * Bridge provides access to redis-cli through bridge redis shell. Remotely, Render has instructions for connecting.\n\nHow can I access Celery?\n\n  * Flower is a web interface into all the information you need to debug and work with Celery. By default, bridge will run Flower on http://localhost:5555.\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\n### License\n\nGPL-3.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n4 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 17\n\n0.1.0 Latest\n\nApr 16, 2024\n\n\\+ 16 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 3\n\n  * caelean Caelean Barnes\n  * emdoyle Evan Doyle\n  * github-actions[bot]\n\n## Languages\n\n  * Python 98.7%\n  * Shell 1.3%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

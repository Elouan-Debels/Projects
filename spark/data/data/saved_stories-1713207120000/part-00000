{"aid": "40039897", "title": "Tinty, a base16 and base24 color scheme manager", "url": "https://github.com/tinted-theming/tinty", "domain": "github.com/tinted-theming", "votes": 1, "user": "cbolton", "posted_at": "2024-04-15 12:49:42", "comments": 0, "source_title": "GitHub - tinted-theming/tinty: A base16 and base24 color scheme manager", "source_text": "GitHub - tinted-theming/tinty: A base16 and base24 color scheme manager\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ntinted-theming / tinty Public\n\n  * Notifications\n  * Fork 1\n  * Star 11\n\nA base16 and base24 color scheme manager\n\n### License\n\nMIT license\n\n11 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# tinted-theming/tinty\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n3 Branches\n\n14 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nJamyGoldenAdd shell instructions and updated fzf/shell/tmux to tinted\nvariants18a0b3f \u00b7\n\n## History\n\n104 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| Move 3rd party licenses to markdown file  \n  \n### fixtures\n\n|\n\n### fixtures\n\n| Update fixtures with latest schemes  \n  \n### scripts\n\n|\n\n### scripts\n\n| Optimise release action build  \n  \n### src\n\n|\n\n### src\n\n| Remove redundant file removal since file is overwritten within function  \n  \n### tests\n\n|\n\n### tests\n\n| Update readme and general cleanup  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add --data-dir flag to manually set the tinty data directoryaaaaaaaaaa  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| v0.11.0 release  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| Update readme and general cleanup  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| v0.11.0 release  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| v0.11.0 release  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| Add root-level config.toml hooks property to exec after tinty apply  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Move 3rd party licenses to markdown file  \n  \n### README.md\n\n|\n\n### README.md\n\n| Add Tinted Theming matrix github README badge  \n  \n### THIRD_PARTY_LICENSES.md\n\n|\n\n### THIRD_PARTY_LICENSES.md\n\n| Move 3rd party licenses to markdown file  \n  \n### USAGE.md\n\n|\n\n### USAGE.md\n\n| Add shell instructions and updated fzf/shell/tmux to tinted variants  \n  \n### about.hbs\n\n|\n\n### about.hbs\n\n| Move 3rd party licenses to markdown file  \n  \n### about.toml\n\n|\n\n### about.toml\n\n| Add licenses for used crates  \n  \n### deny.toml\n\n|\n\n### deny.toml\n\n| Update cargo deny config to match latest version requirements  \n  \n### example.toml\n\n|\n\n### example.toml\n\n| Add more detailed information to readme  \n  \n### mascot.png\n\n|\n\n### mascot.png\n\n| Add mascot image to README  \n  \n## Repository files navigation\n\n# Tinty - A Tinted Theming CLI tool written in Rust \ud83e\udd80\n\nChange the theme of your terminal, text editor and anything else with one\ncommand. Immediately switch between over 250 themes!\n\nTinty is a Base16 and Base24 theming manager for all Tinted Theming projects\nincluding any third-party template repository that follows the Base16 builder\nspecification.\n\nTo learn more about Tinted Theming and the base16 specification, have a look\nat our home repository and preview the themes supported by Tinty have a look\nat our Base16 Gallery.\n\n## Table of contents\n\n  * How it works\n  * Installation\n  * Basic usage\n  * Usage\n  * Configuration\n\n## How it Works\n\nAt its core, Tinty is designed to simplify the theming process across\ndifferent tools and environments by leveraging the power of Base16 and Base24\ntemplate themes. Here's a closer look at how Tinty operates:\n\n### Theme Application Process\n\nWhen you setup Tinty and apply a theme, Tinty performs several steps to ensure\nthat your selected theme is seamlessly integrated across your specified\napplications:\n\n  1. Configuration Loading: Tinty starts by reading your config.toml file to understand your settings and the specific theming components ([[items]]) you've defined. This configuration dictates everything from which shell to use for executing hooks to what themes and templates are applied.\n\n  2. Theme Repository Management: For each item in your configuration, Tinty checks if the necessary theme template repository is already cloned to your local machine. If not, it clones the repository to ~/.local/share/tinted-theming/tinty, ensuring that the latest themes are always at your fingertips.\n\n  3. Theme Copying: Once the repositories are set up, Tinty copies the relevant theme files from each template repository based on the scheme you've chosen to apply. This step gathers all necessary template theme files in one place.\n\n  4. Executed Hooks: With all theme files ready, Tinty then executes the optional shell hooks specified in your config.toml. These hooks might apply the theme directly (e.g., by sourcing a shell script) or perform additional actions like copying theme files to specific locations. This is where the actual theme application occurs, affecting your terminal, text editor, and any other tools you've configured.\n\n### Beyond Basic Theming\n\nTinty's functionality extends beyond applying themes:\n\n  * Scheme Listing and Information: Tinty can list all available schemes and provide detailed information about them. This feature helps you explore and choose from over 250 themes supported by Tinty, including those from third-party repositories following the Base16 builder specification.\n\n  * Dynamic Updates: The tinty update executes a git pull command on your local copy of theme template repositories. This ensures that you have access to the latest themes and updates from the community.\n\n  * Initialization and Persistence: Using tinty init, the tool can reapply the last used theme or a default scheme at startup, making your theming preferences persistent across sessions.\n\n### Designed for Flexibility\n\nTinty is built with flexibility in mind, accommodating a wide range of theming\nneeds and preferences. Whether you're looking to quickly switch themes across\nmultiple tools, explore new color schemes, or ensure a consistent look and\nfeel in your development environment, Tinty provides the necessary mechanisms\nto make it happen.\n\nBy understanding the sequence of actions Tinty performs and the options\navailable to you, you can tailor the theming process to suit your workflow,\nmaking your experience more enjoyable and productive.\n\n## Installation\n\n### Cargo\n\n    \n    \n    cargo install tinty\n\n### Homebrew\n\n    \n    \n    brew tap tinted-theming/tinted brew install tinty\n\n### Binaries\n\nDownload the relevant binary from the repository releases page.\n\n### Manual\n\n    \n    \n    git clone https://github.com/tinted-theming/tinty path/to/tinty cd path/to/tinty make install make build cp target/release/tinty /path/to/bin/dir\n\n## Basic usage\n\nFor the most basic usage without configuration, install Tinty and run the\nfollowing to apply base16-mocha:\n\n    \n    \n    tinty install # Required once or when your config file is updated tinty apply base16-mocha\n\nTo get a list of schemes and more information about the colors:\n\n    \n    \n    tinty list tinty info base16-oceanicnext\n\nWithout any config.toml file, tinty will apply your shell theme using\nbase16-shell using sh shell.\n\n## Usage\n\nFor advanced usage and setup, have a look at the USAGE.md document.\n\n### CLI\n\nThe following is a table of the available subcommands for the CLI tool\n(Tinty), including the descriptions and any notable arguments.\n\nSubcommand| Description| Arguments| Example Usage  \n---|---|---|---  \ninstall| Installs requirements for the configuration.| -| tinty install  \nlist| Lists all available themes.| -| tinty list  \napply| Applies a specific theme.| <scheme_system>-<scheme_name>: Name of the\nsystem and scheme to apply.| tinty apply base16-mocha  \nupdate| Updates the templates and schemes.| -| tinty update  \ninit| Initializes the tool with the last applied theme otherwise\ndefault_scheme from config.toml.| -| tinty init  \ncurrent| Displays the currently applied theme.| -| tinty current  \ninfo| Provides information about themes.| [<scheme_system>-<scheme_name>]:\nOptional argument to specify a theme for detailed info.| tinty info\nbase16-mocha  \n  \nSome subcommands support additional flags and options to modify their\nbehavior:\n\nFlag/Option| Description| Applicable Subcommands| Default Value| Example Usage  \n---|---|---|---|---  \n\\--config -c| Specifies a custom configuration file path.| All| If not\nprovided tinty looks for config.toml at $XDG_CONFIG_HOME/tinty/config.toml\notherwise ~/.tinty/config.toml| tinty apply base16-ayu-dark --config\n/path/to/custom/config.toml  \n\\--data-dir| Specifies a custom path for the data directory.| All| If not\nprovided tinty looks for the data directory at $XDG_DATA_HOME/tinted-\ntheming/tinty otherwise ~/.local/share| tinty install --data-dir\n/path/to/custom/data-dir  \n\\--help -h| Displays help information for the subcommand.| All| -| tinty\n--help, tinty apply --help, etc  \n\\--version -V| Shows the version of tinty.| All| -| tinty --version  \n  \n## Configuration\n\nThe config.toml file allows you to customize and configure the behavior of the\napplication, enabling personalized themes and functionalities. This file\nspecifies shell settings, the default theme scheme, and configurations for\nvarious items such as terminal, editor themes, or any other supported\napplication.\n\n### Global config.toml table Schema\n\nBelow, you'll find the global configuration options for config.toml. These\nsettings apply to the overall operation of Tinty and include essential\nconfigurations such as the default shell command and the default theme scheme.\nSetting these options tailors the Tinty experience to your preferences and\nenvironment.\n\nKey| Type| Required| Description| Default| Example  \n---|---|---|---|---|---  \nshell| string| Optional| Specifies the shell command used to execute hooks.|\n\"sh -c '{}'\"| shell = \"bash -c '{}'\"  \ndefault_scheme| string| Optional| Defines the default theme scheme to be\napplied if no specific scheme is set.| None| default_scheme = \"base16-mocha\"  \nhooks| array<string>| Optional| A list of strings which are executed after\nevery tinty apply| None| hooks = [\"echo \\\"The current scheme is: $(tinty\ncurrent)\\\"\"]  \n[[items]]| array<items>| Required| An array of items configurations. Each item\nrepresents a themable component. Detailed structure provided in the next\nsection.| -| -  \n  \n### Items table config.toml Schema\n\nThe [[items]] section within config.toml allows for detailed customization of\nindividual themable components. Each item represents a specific element you\ncan theme, such as a text editor or terminal. The table below outlines the\nstructure for these items, including how to specify templates, directories for\ntheme files, and hooks for applying themes. Configuring items effectively\nenables you to manage multiple themes across different applications\nseamlessly.\n\nKey| Type| Required| Description| Default| Example  \n---|---|---|---|---|---  \nname| string| Required| A unique name for the item being configured.| -| name\n= \"vim\"  \npath| string| Required| The file system path or URL to the theme template\nrepository. Paths beginning with ~/ map to home dir.| -| path =\n\"https://github.com/base16-vim\"  \nthemes_dir| string| Required| The directory within the repository where theme\nfiles are located.| -| themes_dir = \"colors\"  \nhook| string| Optional| A command to be executed after the theme is applied.\nUseful for reloading configurations. %f template variable maps to the path of\nthe applied theme file.| None| hook = \"source ~/.vimrc\"  \nsupported_systems| array<\"base16\" or \"base24\">| Optional| Defines which\ntheming systems (\"base16\" and or \"base24\") are supported by the item.|\n[\"base16\"]| supported_systems = [\"base16\", \"base24\"]  \n  \n#### Note on supported_systems\n\nThe supported_systems key within an [[items]] table allows for specifying\ncompatibility with different theming systems. The available options are\n\"base16\" and \"base24\", indicating support for Base16 and Base24 theming\nsystems, respectively. If the template repository does not support a system,\nit should not be included in this property.\n\nThe [[items]] configuration allows defining multiple themable components, each\nwith its own set of configurations as described above. Here's how you might\ndefine multiple items in your config.toml:\n\n### Full Configuration Example\n\nHere's a complete config.toml example demonstrating how to configure multiple\nitems along with global settings:\n\n    \n    \n    # Global settings shell = \"zsh -c '{}'\" default_scheme = \"base16-mocha\" # Item configurations [[items]] name = \"vim\" path = \"https://github.com/tinted-theming/base16-shell\" themes_dir = \"scripts\" hook = \"source %f\" [[items]] name = \"vim\" path = \"https://github.com/tinted-theming/base16-vim\" themes_dir = \"colors\" hook = \"source ~/.vimrc\" supported_systems = [\"base16\"] [[items]] name = \"tmux\" path = \"~/path/path/to/base16-tmux\" themes_dir = \"colors\" hook = \"tmux source-file ~/.tmux.conf\" supported_systems = [\"base16\"]\n\n### Select and apply a scheme using fzf\n\nNote: Requires fzf\n\n    \n    \n    tinty apply $(tinty list | fzf)\n\n### Migration from Flavours\n\nFlavours is a great base16 manager written in Rust and it's where Tinty has\ngotten a lot of it's inspiration. Flavours isn't actively maintained anymore\nand that's the reason I continued to build and develop Tinty.\n\nTinty doesn't include base16 builder (Flavours does) and therefore Tinty\ncopies theme files from template directories instead of generating them. Since\na builder is not included in Tinty, generating a scheme based on image colors\nis not functionality included.\n\nIf you're looking for a base16 or base24 builder, have a look at builder-go.\n\n#### CLI mapping\n\n  * flavours apply mocha -> tinty set base16-mocha\n  * flavours info mocha -> tinty info base16-mocha\n  * flavours current -> tinty current\n  * flavours update -> tinty install\n\n#### config.toml mapping\n\nFlavours:\n\n    \n    \n    # ~/.config/flavours/config.toml [[item]] template = \"alacritty\" file = \"~/.config/alacritty/colors.toml\" [[items]] file = \"~/.config/waybar/colors.css\" template = \"waybar\" rewrite = true [[items]] file = \"~/.config/sway/config\" template = \"sway\" subtemplate = \"colors\" hook = \"swaymsg reload\" light = false\n\nTinty:\n\n    \n    \n    # ~/.config/tinty/config.toml [[items]] path = \"https://github.com/aarowill/base16-alacritty\" name = \"base16-alacritty\" themes-dir = \"colors\" hook = \"cp -f %f ~/.config/alacritty/colors.toml\" [[items]] path = \"https://github.com/mnussbaum/base16-waybar\" name = \"base16-waybar\" themes-dir = \"colors\" hook = \"cp -r %f ~/.config/waybar/colors.css\" [[items]] path = \"https://github.com/rkubosz/base16-sway\" name = \"base16-sway\" themes-dir = \"themes\" hook = \"cp -f %f ~/.config/sway/config && swaymsg reload\"\n\n  * path: A path to the repository is provided in the Tinty config.toml. In Flavours this path was determined using the template property\n  * themes-dir: This is the directory the themes are in within the repository provided in path\n  * name: A unique name used to set theme filename\n  * hook: This property exists in Flavours too, but Tinty offloads a bit of work from the Rust codebase to this hook. %f is a template variable which translates to the base16-alacritty relevant theme file. So the hook does a copy of the selected theme and replaces ~/.config/alacritty/colors.toml.\n\n## Contributing\n\nContributions are welcome. Have a look at CONTRIBUTING.md for more\ninformation.\n\n## License\n\nLike most other Tinted Theming projects, Tinty falls under the MIT license.\nHave a look at the LICENSE document for more information.\n\n## About\n\nA base16 and base24 color scheme manager\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\nCustom properties\n\n### Stars\n\n11 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases 9\n\nRelease 0.11.0 Latest\n\nMar 11, 2024\n\n\\+ 8 releases\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Rust 94.2%\n  * Shell 2.9%\n  * Makefile 1.9%\n  * Other 1.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}

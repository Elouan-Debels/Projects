{"aid": "40043339", "title": "CeLLM \u2013 LLM Integration for Google Sheets", "url": "https://www.brilliantly.ai/blog/cellm", "domain": "brilliantly.ai", "votes": 2, "user": "etwigg", "posted_at": "2024-04-15 17:28:36", "comments": 0, "source_title": "CeLLM = Cell + LLM: Automate your spreadsheet workflows", "source_text": "CeLLM = Cell + LLM: Automate your spreadsheet workflows\n\n# CeLLM = Cell + LLM: Automate your spreadsheet workflows\n\nSuvansh Sanjeev \u2022 2023-06-08\n\nGive your spreadsheets the gift of AI with CeLLM: Unlock powerful insights\nwith a mouse drag.\n\nNote: Find the code and instructions for CeLLM here.\n\nWe're excited to introduce CeLLM, a way to integrate large language models\n(LLMs), like the ones behind ChatGPT, into your spreadsheets, changing the way\nyou interact with them.\n\nIn the era of data-driven decision making, we often find ourselves working\nwith large volumes of data, especially in the form of spreadsheets. Analyzing\nthese data can sometimes be overwhelming and time-consuming. Wouldn't it be\nincredible if you could just ask your spreadsheet questions and receive\nintelligible answers? This is where CeLLM comes in.\n\nCeLLM is a Google Sheets add-on that allows you to leverage the power of\nstate-of-the-art LLMs, such as OpenAI's GPT-3.5 and GPT-4, and Anthropic\u2019s\nClaude (including the 100k token context window model), right in your\nspreadsheets. It transforms your static spreadsheets into a dynamic\nconversational partner that understands your queries, understands examples,\nand provides detailed responses, making data analysis more accessible and\ninteractive. Your data is not sent anywhere other than to the LLM provider you\nselect.\n\n# What does CeLLM do?\n\nCeLLM simplifies your data analysis process and makes it interactive, fun, and\nmore insightful. By leveraging LLMs to analyze and respond to queries, you can\nsave significant time and effort on routine data tasks and instead focus on\nmaking informed decisions.\n\nCeLLM works by taking advantage of GPT-3.5/4 and Claude, LLMs provided by\nOpenAI and Anthropic. You can call CeLLM in your spreadsheet as a function,\njust like SUM or AVERAGE. For example, you can use it in the following ways:\n\n  * As you would any LLM: The simplest usage is to produce responses to prompts: CELLM(\"Explain quantum mechanics to me like I'm five.\")\n\n  * To apply a prompt in many contexts at once: CELLM(\"Explain {input} to me like I'm five.\", C1). Once you start to use spreadsheet cells to fill in prompts, the power of CeLLM becomes clearer. Imagine column C contains a list of topics you\u2019ve been wondering about. By simply dragging this formula down to the length of the list, you can produce simple explanations of all these topics in seconds.\n\n  * To finish a task you\u2019ve started: CELLM_EX(A1:A5, B1:B5, A6). In this case, A1:A5 represent example inputs for which you have the corresponding outputs in B1:B5. You\u2019re interested in automating the completion of the task in the rest of the column, so you write this formula in B6 and drag it down as far as the length of the inputs in column A. Once again, in a few seconds, your task is done. Of course, be sure to review the LLM\u2019s work.\n\n  * To extract structured information from a collection of webpages: CELLM_URL(\"Give me a 5-sentence summary of this movie\", \"https://en.wikipedia.org/wiki/About_Time_(2013_film)\", \"Anthropic:claude-v1-100k\"). Of course, the URLs can be specified by spreadsheet cell references, and a simple drag lets you extract information from a series of URLs at once. Note that this feature can eat up tokens quickly for large webpages, and is prone to timing out (Google limits the time a Sheets function can take to complete).\n\n  * To generate lists across spreadsheet cells. In the CeLLM menu that appears upon completing installation of the add-on, the Generate List option allows users to specify a list of items (and optional quantity) that they would like to generate, and a location in the spreadsheet for the list to begin. The LLM-generated list is then used to populate the cells at and below the specified one.\n\nFirst input: prompt describing list\n\nSecond input: cell starting the list\n\nOutput\n\n## Arcus Prompt Enrichment\n\nBrilliantly has partnered with Arcus to integrate Prompt Enrichment into\nCeLLM. When enabled, this feature allows CeLLM to pull in relevant context to\nanswer questions more accurately and reduce hallucinations (cases where the\nLLM makes up an answer). See the difference Arcus can make below. Currently,\nArcus is supported only in the CELLM function. They\u2019re rapidly rolling out\nfeatures and supported domains, so stay tuned at their Twitter @ArcusHQ!\n\n# Get started\n\nGetting started with CeLLM is simple. Clone the GitHub repository Follow the\ninstructions in the README to get set up with CeLLM in your own Google Sheets.\nRemember to add your API keys in the CeLLM \u2192 Settings menu.\n\nIf you\u2019re looking for ideas to get started, you can use CeLLM to compare the\neffects of using different models, temperature settings, and prompts, right\nwithin your spreadsheet. See if there are tasks you can specify more easily\nwith examples than prompts. Use a formula drag to explain quantum mechanics at\ndifferent age levels of difficulty.\n\nWe're eager to hear about your experiences with CeLLM and see how it enhances\nyour data interaction. Reach out at hello@brilliantly.ai or @BrilliantlyAI on\nTwitter. Happy spreadsheeting!\n\n# Documentation\n\nNote that the spreadsheet functions (starting with CELLM) must include\narguments in order. That means if you want to specify the temperature, you\nmust specify all preceding arguments as well. This is due to lack of support\nin JavaScript for keyword arguments.\n\n## Generate List\n\nThis functionality is useful for using LLMs to generate lists of items across\nmultiple cells. Due to access limitations, this functionality can't be\naccomplished through spreadsheet functions, so it's tucked away in CeLLM \u2192\nGenerate List.\n\n## CELLM\n\nThis is the spreadsheet function used to apply a prompt to a cell. The\nfunction is called as follows:\n\nCELLM(prompt, input, llm, arcus, max_tokens, temperature)\n\nThe first two arguments are required, and the rest are optional.\n\n  * prompt (string): The prompt to apply to the input. Any occurrences of the string \"{input}\" in the prompt will be replaced with the value of the input parameter. If no occurrences are found, the input will be appended to the end of the prompt instead.\n  * input (string): The value to be combined with the prompt as described above.\n  * llm (optional, string): One of \"OpenAI\" (default) or \"Anthropic\", optionally including a colon-separated model name selected from \"gpt-3.5-turbo\" (default) or \"gpt-4\" (if your API key has access) for OpenAI, or the model options found here (default \"claude-instant-v1\") for Anthropic. For example, \"OpenAI:gpt-4\" uses OpenAI's GPT-4 model, and \"Anthropic:claude-v1-100k\" uses Anthropic's Claude v1 model that accepts a 100k token context window.\n  * arcus (optional, boolean): Whether or not to use Arcus' prompt enrichment to add in relevant data to the prompt when available. Requires Arcus API key to be set in CeLLM \u2192 Settings. Default false.\n  * max_tokens (integer): The maximum number of tokens allowed for the LLM response. Defaults to 250 to prevent rapid cost increases (OpenAI and Anthropic charge by the token).\n  * temperature (float): A value between 0-2 (OpenAI) or 0-1 (Anthropic). Per the OpenAI documentation, higher values will make the output more random, while lower values will make it more focused and deterministic. Defaults to 0.3.\n\n## CELLM_EX\n\nThis is the spreadsheet function used to generate outputs using example input-\noutput pairs, rather than a prompt, to specify the task. The function is\ncalled as follows:\n\nCELLM_EX(exampleInputs, exampleOutputs, testInput, llm, arcus, max_tokens,\ntemperature)\n\nThe first three arguments are required, and the rest are optional.\n\n  * exampleInputs (cell range): The inputs for the example pairs. For example, A1:A5.\n  * exampleOutputs (cell range): The outputs for the example pairs.\n  * testInput (string): The input to produce an output for, based on the example input-output pairs.\n\nThe rest of the arguments are as described for CELLM, but arcus is ignored and\nset to false for now.\n\n## CELLM_URL\n\nThis is the (in-development) spreadsheet function used to apply a prompt to a\nwebpage. It can be used to extract information from a webpage with an LLM. The\nfunction is called as follows:\n\nCELLM_URL(prompt, url, llm, arcus, max_tokens, temperature)\n\nThe first two arguments are required, and the rest are optional.\n\n  * prompt (string): The prompt to apply to the input. Any occurrences of the string \"{input}\" in the prompt will be replaced with the content of the webpage fetched from the url parameter. If no occurrences are found, the webpage content will be appended to the end of the prompt instead.\n  * url (string): The content of the <body> tag in the HTML fetched from this URL is stripped of HTML tags and used as input to the prompt. The rest of the arguments are as described for CELLM, but arcus is ignored and set to false for now.\n\nNOTE:\n\n  * Due to the token-based pricing, this function can run up costs pretty quickly.\n  * Long webpages can result in hitting the LLM max token limit.\n  * Specifying one of Anthropic's 100k token models (such as with llm=\"Anthropic:claude-v1-100k\" or llm=\"Anthropic:claude-instant-v1-100k\") allows CeLLM to process much longer webpages. Be mindful of running up costs with large webpages though.\n\n### See More Posts\n\n### CLAIRe: Conversational Learning AI with Recall\n\n### CeLLM = Cell + LLM: Automate your spreadsheet workflows\n\n### Open Data Interpreter: Talk to your data\n\nShow more\n\n# brilliantly Blog\n\nStay connected and hear about what we're up to!\n\nemail\n\nhello@brilliantly.ai\n\ntwitter\n\n@BrilliantlyAI\n\n", "frontpage": false}

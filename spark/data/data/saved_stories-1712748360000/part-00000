{"aid": "39987237", "title": "A dialect of Lisp that's embedded in Python", "url": "https://hylang.org/", "domain": "hylang.org", "votes": 1, "user": "raytopia", "posted_at": "2024-04-10 05:25:00", "comments": 0, "source_title": "Hy", "source_text": "The Hy programming language\n\n# Hy\n\n## Hy is a Lisp dialect that's embedded in Python.\n\nHy (or \"Hylang\" for long) is a multi-paradigm general-purpose programming\nlanguage in the Lisp family. It's implemented as a kind of alternative syntax\nfor Python. Compared to Python, Hy offers a variety of extra features,\ngeneralizations, and syntactic simplifications, as would be expected of a\nLisp. Compared to other Lisps, Hy provides direct access to Python's built-ins\nand third-party Python libraries, while allowing you to freely mix imperative,\nfunctional, and object-oriented styles of programming. (More on \"Why Hy?\")\n\nTo install the latest release of Hy, just use the command pip3 install --user\nhy. Then you can start an interactive read-eval-print loop (REPL) with the\ncommand hy, or run a Hy program with hy myprogram.hy.\n\n## Example code\n\nSee the tutorial for many more examples.\n\nHy| Python  \n---|---  \n(setv foobar (+ 2 2)) (setv [tim eric] [\"jim\" \"derrick\"]) (setv alpha \"a\" beta\n\"b\")| foobar = 2 + 2 tim, eric = 'jim', 'derrick' alpha = 'a'; beta = 'b'  \n(sorted \"abcBC\" :key (fn [x] (.lower x)))| sorted(\"abcBC\", key = lambda x:\nx.lower())  \n(defn test [a b [c \"x\"] #* d] [a b c d])| def test(a, b, c=\"x\", *d): return\n[a, b, c, d]  \n(with [o (open \"file.txt\" \"rt\")] (setv buffer []) (while (< (len buffer) 10)\n(.append buffer (next o))))| with open('file.txt', 'rt') as o: buffer = []\nwhile len(buffer) < 10: buffer.append(next(o))  \n(lfor x (range 3) y (range 3) :if (= (+ x y) 3) (* x y))| [x * y for x in\nrange(3) for y in range(3) if x + y == 3]  \n(defmacro do-while [test #* body] `(do ~@body (while ~test ~@body))) (setv x\n0) (do-while x (print \"Printed once.\"))| x = 0 print(\"Printed once.\") while x:\nprint(\"Printed once.\")  \n  \nThis website on GitHub\n\n", "frontpage": false}
